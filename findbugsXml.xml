
<BugCollection timestamp='1341001284000' analysisTimestamp='1341001504881' sequence='0' release='' version='1.3.9'><Project projectName='fluent-reflection'><Jar>/home/tim/workspace/fluent-reflection/fluent-reflection/target/classes</Jar><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/mojo/findbugs-maven-plugin/2.3.2/findbugs-maven-plugin-2.3.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/com/google/code/findbugs/bcel/1.3.9/bcel-1.3.9.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/gmaven/gmaven-mojo/1.3/gmaven-mojo-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/gmaven/runtime/gmaven-runtime-api/1.3/gmaven-runtime-api-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/gmaven/feature/gmaven-feature-api/1.3/gmaven-feature-api-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/gmaven/runtime/gmaven-runtime-1.5/1.3/gmaven-runtime-1.5-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/gmaven/feature/gmaven-feature-support/1.3/gmaven-feature-support-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/groovy/groovy-all-minimal/1.5.8/groovy-all-minimal-1.5.8.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/apache/ant/ant/1.7.1/ant-1.7.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/apache/ant/ant-launcher/1.7.1/ant-launcher-1.7.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.1/plexus-interpolation-1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/gmaven/gmaven-plugin/1.3/gmaven-plugin-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/gmaven/runtime/gmaven-runtime-loader/1.3/gmaven-runtime-loader-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/gmaven/runtime/gmaven-runtime-support/1.3/gmaven-runtime-support-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/sonatype/gshell/gshell-io/2.0/gshell-io-2.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/com/thoughtworks/qdox/qdox/1.10/qdox-1.10.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/apache/maven/shared/file-management/1.2.1/file-management-1.2.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/apache/maven/shared/maven-shared-io/1.1/maven-shared-io-1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/sonatype/gossip/gossip/1.2/gossip-1.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/apache/maven/reporting/maven-reporting-impl/2.1/maven-reporting-impl-2.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/commons-validator/commons-validator/1.2.0/commons-validator-1.2.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/commons-digester/commons-digester/1.6/commons-digester-1.6.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/groovy/groovy-all/1.7.4/groovy-all-1.7.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/apache/maven/doxia/doxia-core/1.1.3/doxia-core-1.1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/apache/maven/doxia/doxia-logging-api/1.1.3/doxia-logging-api-1.1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/apache/maven/doxia/doxia-decoration-model/1.1.3/doxia-decoration-model-1.1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/apache/maven/doxia/doxia-module-xhtml/1.1.3/doxia-module-xhtml-1.1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/apache/maven/doxia/doxia-module-fml/1.1.3/doxia-module-fml-1.1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/plexus/plexus-i18n/1.0-beta-7/plexus-i18n-1.0-beta-7.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/plexus/plexus-velocity/1.1.7/plexus-velocity-1.1.7.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/apache/velocity/velocity/1.5/velocity-1.5.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/commons-collections/commons-collections/3.2/commons-collections-3.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/apache/maven/shared/maven-doxia-tools/1.2.1/maven-doxia-tools-1.2.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/com/google/code/findbugs/findbugs-ant/1.3.9/findbugs-ant-1.3.9.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/com/google/code/findbugs/findbugs/1.3.9/findbugs-1.3.9.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/com/google/code/findbugs/jFormatString/1.3.9/jFormatString-1.3.9.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/com/google/code/findbugs/annotations/1.3.9/annotations-1.3.9.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/jaxen/jaxen/1.1.1/jaxen-1.1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/xom/xom/1.0/xom-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/xalan/xalan/2.6.0/xalan-2.6.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/com/ibm/icu/icu4j/2.6.1/icu4j-2.6.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/asm/asm/3.1/asm-3.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/asm/asm-analysis/3.1/asm-analysis-3.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/asm/asm-commons/3.1/asm-commons-3.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/asm/asm-util/3.1/asm-util-3.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/asm/asm-tree/3.1/asm-tree-3.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/asm/asm-xml/3.1/asm-xml-3.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/jgoodies/plastic/1.2.0/plastic-1.2.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/plexus/plexus-resources/1.0-alpha-4/plexus-resources-1.0-alpha-4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.1/plexus-utils-1.5.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/hamcrest/hamcrest-integration/1.3.RC2/hamcrest-integration-1.3.RC2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/hamcrest/hamcrest-library/1.3.RC2/hamcrest-library-1.3.RC2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/hamcrest/hamcrest-core/1.3.RC2/hamcrest-core-1.3.RC2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/com/googlecode/lambdaj/lambdaj/2.3.1/lambdaj-2.3.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/objenesis/objenesis/1.2/objenesis-1.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/cglib/cglib-nodep/2.2/cglib-nodep-2.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/com/google/inject/guice/3.0/guice-3.0-no_aop.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/org/apache/commons/commons-lang3/3.0.1/commons-lang3-3.0.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/tim/.m2/repository/com/google/guava/guava/10.0/guava-10.0.jar</AuxClasspathEntry><SrcDir>/home/tim/workspace/fluent-reflection/fluent-reflection/src/main/java</SrcDir><WrkDir>/home/tim/workspace/fluent-reflection/fluent-reflection/target</WrkDir></Project><BugInstance category='BAD_PRACTICE' instanceHash='6c0487d15c8c06a7d3955e41254848c5' instanceOccurrenceNum='0' priority='2' abbrev='DP' type='DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED' instanceOccurrenceMax='0'><ShortMessage>Classloaders should only be created inside doPrivileged block</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableReferenceQueue$DecoupledLoader.newLoader(URL) creates a java.net.URLClassLoader classloader, which should be performed within a doPrivileged block</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableReferenceQueue$DecoupledLoader' primary='true'><SourceLine start='217' classname='com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableReferenceQueue$DecoupledLoader' sourcepath='com/lexicalscope/fluentreflection/internal/guava/base/FinalizableReferenceQueue.java' sourcefile='FinalizableReferenceQueue.java' end='265'><Message>At FinalizableReferenceQueue.java:[lines 217-265]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableReferenceQueue$DecoupledLoader</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableReferenceQueue$DecoupledLoader' name='newLoader' primary='true' signature='(Ljava/net/URL;)Ljava/net/URLClassLoader;'><SourceLine endBytecode='67' startBytecode='0' start='265' classname='com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableReferenceQueue$DecoupledLoader' sourcepath='com/lexicalscope/fluentreflection/internal/guava/base/FinalizableReferenceQueue.java' sourcefile='FinalizableReferenceQueue.java' end='265'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableReferenceQueue$DecoupledLoader.newLoader(URL)</Message></Method><Class classname='java.net.URLClassLoader'><SourceLine start='73' classname='java.net.URLClassLoader' sourcepath='java/net/URLClassLoader.java' sourcefile='URLClassLoader.java' end='590'><Message>At URLClassLoader.java:[lines 73-590]</Message></SourceLine><Message>In class java.net.URLClassLoader</Message></Class><SourceLine endBytecode='0' startBytecode='0' start='265' classname='com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableReferenceQueue$DecoupledLoader' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/base/FinalizableReferenceQueue.java' sourcefile='FinalizableReferenceQueue.java' end='265'><Message>At FinalizableReferenceQueue.java:[line 265]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='4172d0e9265cae8da55418354af19eb2' instanceOccurrenceNum='0' priority='1' abbrev='NP' type='NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE' instanceOccurrenceMax='0'><ShortMessage>Parameter must be nonnull but is marked as nullable</ShortMessage><LongMessage>args must be nonnull but is marked as nullable</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.base.$Preconditions' primary='true'><SourceLine start='61' classname='com.lexicalscope.fluentreflection.internal.guava.base.$Preconditions' sourcepath='com/lexicalscope/fluentreflection/internal/guava/base/Preconditions.java' sourcefile='Preconditions.java' end='443'><Message>At Preconditions.java:[lines 61-443]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.base.$Preconditions</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.guava.base.$Preconditions' name='format' primary='true' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;'><SourceLine endBytecode='333' startBytecode='0' start='414' classname='com.lexicalscope.fluentreflection.internal.guava.base.$Preconditions' sourcepath='com/lexicalscope/fluentreflection/internal/guava/base/Preconditions.java' sourcefile='Preconditions.java' end='443'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.base.$Preconditions.format(String, Object[])</Message></Method><LocalVariable register='1' name='args' pc='0' role='LOCAL_VARIABLE_NAMED'><Message>Local variable named args</Message></LocalVariable><SourceLine endBytecode='333' startBytecode='0' start='414' classname='com.lexicalscope.fluentreflection.internal.guava.base.$Preconditions' sourcepath='com/lexicalscope/fluentreflection/internal/guava/base/Preconditions.java' synthetic='true' sourcefile='Preconditions.java' end='443'><Message>At Preconditions.java:[lines 414-443]</Message></SourceLine></BugInstance><BugInstance category='MT_CORRECTNESS' instanceHash='ffd4d3a2dcf7ede8570dd57b809fe900' instanceOccurrenceNum='0' priority='2' abbrev='IS' type='IS2_INCONSISTENT_SYNC' instanceOccurrenceMax='0'><ShortMessage>Inconsistent synchronization</ShortMessage><LongMessage>Inconsistent synchronization of com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$MemoizingSupplier.value; locked 50% of time</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$MemoizingSupplier' primary='true'><SourceLine start='99' classname='com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$MemoizingSupplier' sourcepath='com/lexicalscope/fluentreflection/internal/guava/base/Suppliers.java' sourcefile='Suppliers.java' end='116'><Message>At Suppliers.java:[lines 99-116]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$MemoizingSupplier</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$MemoizingSupplier' name='value' primary='true' signature='Ljava/lang/Object;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$MemoizingSupplier' sourcepath='com/lexicalscope/fluentreflection/internal/guava/base/Suppliers.java' sourcefile='Suppliers.java'><Message>In Suppliers.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$MemoizingSupplier.value</Message></Field><Int value='50' role='INT_SYNC_PERCENT'><Message>Synchronized 50% of the time</Message></Int><SourceLine endBytecode='53' startBytecode='53' start='116' classname='com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$MemoizingSupplier' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/base/Suppliers.java' role='SOURCE_LINE_UNSYNC_ACCESS' sourcefile='Suppliers.java' end='116'><Message>Unsynchronized access at Suppliers.java:[line 116]</Message></SourceLine><SourceLine endBytecode='30' startBytecode='30' start='110' classname='com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$MemoizingSupplier' sourcepath='com/lexicalscope/fluentreflection/internal/guava/base/Suppliers.java' role='SOURCE_LINE_SYNC_ACCESS' sourcefile='Suppliers.java' end='110'><Message>Synchronized access at Suppliers.java:[line 110]</Message></SourceLine></BugInstance><BugInstance category='CORRECTNESS' instanceHash='4dee4931aaab2660f5a9799937b01873' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_GUARANTEED_DEREF' instanceOccurrenceMax='0'><ShortMessage>Null value is guaranteed to be dereferenced</ShortMessage><LongMessage>value could be null and is guaranteed to be dereferenced in com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$NullCache.compute(Object)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$NullCache' primary='true'><SourceLine start='738' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$NullCache' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CacheBuilder.java' sourcefile='CacheBuilder.java' end='803'><Message>At CacheBuilder.java:[lines 738-803]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$NullCache</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$NullCache' name='compute' primary='true' signature='(Ljava/lang/Object;)Ljava/lang/Object;'><SourceLine endBytecode='469' startBytecode='0' start='752' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$NullCache' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CacheBuilder.java' sourcefile='CacheBuilder.java' end='775'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$NullCache.compute(Object)</Message></Method><LocalVariable register='4' name='value' pc='158' role='LOCAL_VARIABLE_VALUE_OF'><Message>Value loaded from value</Message></LocalVariable><SourceLine endBytecode='160' startBytecode='160' start='772' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$NullCache' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CacheBuilder.java' role='SOURCE_LINE_NULL_CHECKED' sourcefile='CacheBuilder.java' end='772'><Message>Checked and found to be null at CacheBuilder.java:[line 772]</Message></SourceLine><SourceLine endBytecode='40' startBytecode='40' start='766' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$NullCache' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CacheBuilder.java' role='SOURCE_LINE_KNOWN_NULL' sourcefile='CacheBuilder.java' end='766'><Message>Known null at CacheBuilder.java:[line 766]</Message></SourceLine><Property name='edu.umd.cs.findbugs.detect.NullDerefProperty.LONG_RANGE_NULL_SOURCE' value='true'></Property></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='761dee6abdb16c298df67247b5649534' instanceOccurrenceNum='0' priority='1' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache defines non-transient non-serializable instance field map</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache' primary='true'><SourceLine start='43' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/ComputingCache.java' sourcefile='ComputingCache.java' end='97'><Message>At ComputingCache.java:[lines 43-97]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache' name='map' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/cache/$CustomConcurrentHashMap;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/ComputingCache.java' sourcefile='ComputingCache.java'><Message>In ComputingCache.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache.map</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/ComputingCache.java' synthetic='true' sourcefile='ComputingCache.java'><Message>In ComputingCache.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='912021183a9ec7d6fb802a2397899df1' instanceOccurrenceNum='0' priority='1' abbrev='Se' type='SE_BAD_FIELD_STORE' instanceOccurrenceMax='0'><ShortMessage>Non-serializable value stored into instance field of a serializable class</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache$CacheAsMap stored into non-transient field $ComputingCache.asMap</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache' primary='true'><SourceLine start='43' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/ComputingCache.java' sourcefile='ComputingCache.java' end='97'><Message>At ComputingCache.java:[lines 43-97]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache' name='asMap' primary='true' signature='Ljava/util/concurrent/ConcurrentMap;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/ComputingCache.java' sourcefile='ComputingCache.java'><Message>In ComputingCache.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache.asMap</Message></Field><Type descriptor='Lcom/lexicalscope/fluentreflection/internal/guava/cache/$ComputingCache$CacheAsMap;' role='TYPE_FOUND'><SourceLine start='102' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache$CacheAsMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/ComputingCache.java' sourcefile='ComputingCache.java' end='143'><Message>At ComputingCache.java:[lines 102-143]</Message></SourceLine><Message>Actual type com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache$CacheAsMap</Message></Type><SourceLine endBytecode='26' startBytecode='26' start='75' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/ComputingCache.java' sourcefile='ComputingCache.java' end='75'><Message>At ComputingCache.java:[line 75]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='e2698456dba416bbce3eac78f3006b72' instanceOccurrenceNum='0' priority='2' abbrev='Nm' type='NM_CLASS_NOT_EXCEPTION' instanceOccurrenceMax='0'><ShortMessage>Class is not derived from an Exception, even though it is named as such</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedException is not derived from an Exception, even though it is named as such</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedException' primary='true'><SourceLine start='3315' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedException' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3321'><Message>At CustomConcurrentHashMap.java:[lines 3315-3321]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedException</Message></Class><SourceLine start='3315' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedException' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java' end='3321'><Message>At CustomConcurrentHashMap.java:[lines 3315-3321]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='edf25c6de8d296622ff784464f6cac70' instanceOccurrenceNum='0' priority='2' abbrev='Nm' type='NM_CLASS_NOT_EXCEPTION' instanceOccurrenceMax='0'><ShortMessage>Class is not derived from an Exception, even though it is named as such</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedUncheckedException is not derived from an Exception, even though it is named as such</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedUncheckedException' primary='true'><SourceLine start='3299' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedUncheckedException' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3305'><Message>At CustomConcurrentHashMap.java:[lines 3299-3305]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedUncheckedException</Message></Class><SourceLine start='3299' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedUncheckedException' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java' end='3305'><Message>At CustomConcurrentHashMap.java:[lines 3299-3305]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='e838818ddee5d2fc5b2b8692634a5633' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_LOAD_OF_KNOWN_NULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Load of known null value</ShortMessage><LongMessage>Load of known null value in com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment.getOrCompute(Object, int, $CacheLoader)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' primary='true'><SourceLine start='2126' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3285'><Message>At CustomConcurrentHashMap.java:[lines 2126-3285]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' name='getOrCompute' primary='true' signature='(Ljava/lang/Object;ILcom/lexicalscope/fluentreflection/internal/guava/cache/$CacheLoader;)Ljava/lang/Object;'><SourceLine endBytecode='237' startBytecode='0' start='2216' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2308'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment.getOrCompute(Object, int, $CacheLoader)</Message></Method><SourceLine endBytecode='231' startBytecode='231' start='2253' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2253'><Message>At CustomConcurrentHashMap.java:[line 2253]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='59c7c96269790ce5a75c94675d069ebb' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_LOAD_OF_KNOWN_NULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Load of known null value</ShortMessage><LongMessage>Load of known null value in com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment.put(Object, int, Object, boolean)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' primary='true'><SourceLine start='2126' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3285'><Message>At CustomConcurrentHashMap.java:[lines 2126-3285]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' name='put' primary='true' signature='(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;'><SourceLine endBytecode='191' startBytecode='0' start='2680' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2743'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment.put(Object, int, Object, boolean)</Message></Method><SourceLine endBytecode='169' startBytecode='169' start='2708' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2708'><Message>At CustomConcurrentHashMap.java:[line 2708]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='88de8c4623a6100695fab688c7a995d0' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_LOAD_OF_KNOWN_NULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Load of known null value</ShortMessage><LongMessage>Load of known null value in com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment.replace(Object, int, Object)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' primary='true'><SourceLine start='2126' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3285'><Message>At CustomConcurrentHashMap.java:[lines 2126-3285]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' name='replace' primary='true' signature='(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;'><SourceLine endBytecode='135' startBytecode='0' start='2871' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2910'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment.replace(Object, int, Object)</Message></Method><SourceLine endBytecode='141' startBytecode='141' start='2891' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2891'><Message>At CustomConcurrentHashMap.java:[line 2891]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='a70f6ed3ec6926035d9bbbd055ebe29e' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_LOAD_OF_KNOWN_NULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Load of known null value</ShortMessage><LongMessage>Load of known null value in com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment.replace(Object, int, Object, Object)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' primary='true'><SourceLine start='2126' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3285'><Message>At CustomConcurrentHashMap.java:[lines 2126-3285]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' name='replace' primary='true' signature='(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z'><SourceLine endBytecode='153' startBytecode='0' start='2820' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2866'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment.replace(Object, int, Object, Object)</Message></Method><SourceLine endBytecode='141' startBytecode='141' start='2840' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2840'><Message>At CustomConcurrentHashMap.java:[line 2840]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='b7d1ac9ef54f4c84e1d679a69eb9fdb3' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment defines non-transient non-serializable instance field keyReferenceQueue</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' primary='true'><SourceLine start='2126' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3285'><Message>At CustomConcurrentHashMap.java:[lines 2126-3285]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' name='keyReferenceQueue' primary='true' signature='Ljava/lang/ref/ReferenceQueue;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment.keyReferenceQueue</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='1f17b1f412cd3189f23baa959c78bb47' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment defines non-transient non-serializable instance field map</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' primary='true'><SourceLine start='2126' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3285'><Message>At CustomConcurrentHashMap.java:[lines 2126-3285]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' name='map' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/cache/$CustomConcurrentHashMap;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment.map</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='613ba51f61592f46778411f7f66c2d0' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment defines non-transient non-serializable instance field valueReferenceQueue</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' primary='true'><SourceLine start='2126' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3285'><Message>At CustomConcurrentHashMap.java:[lines 2126-3285]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' name='valueReferenceQueue' primary='true' signature='Ljava/lang/ref/ReferenceQueue;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment.valueReferenceQueue</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine></BugInstance><BugInstance category='CORRECTNESS' instanceHash='b0298ba69860edf3036cbd280af750b4' instanceOccurrenceNum='0' priority='2' abbrev='RV' type='RV_RETURN_VALUE_IGNORED' instanceOccurrenceMax='0'><ShortMessage>Method ignores return value</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy.readObject(ObjectInputStream) ignores return value of com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder.removalListener($RemovalListener)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy' primary='true'><SourceLine start='4284' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='4351'><Message>At CustomConcurrentHashMap.java:[lines 4284-4351]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy' name='readObject' primary='true' signature='(Ljava/io/ObjectInputStream;)V'><SourceLine endBytecode='280' startBytecode='0' start='4322' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='4343'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy.readObject(ObjectInputStream)</Message></Method><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder' name='removalListener' role='METHOD_CALLED' signature='(Lcom/lexicalscope/fluentreflection/internal/guava/cache/$RemovalListener;)Lcom/lexicalscope/fluentreflection/internal/guava/cache/$CacheBuilder;'><SourceLine endBytecode='141' startBytecode='0' start='542' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CacheBuilder.java' sourcefile='CacheBuilder.java' end='548'></SourceLine><Message>Called method com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder.removalListener($RemovalListener)</Message></Method><SourceLine endBytecode='48' startBytecode='48' start='4329' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='4329'><Message>At CustomConcurrentHashMap.java:[line 4329]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='f3ab99e2bee376ade9dfb27b537e5318' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy defines non-transient non-serializable instance field ticker</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy' primary='true'><SourceLine start='4284' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='4351'><Message>At CustomConcurrentHashMap.java:[lines 4284-4351]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy' name='ticker' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/base/$Ticker;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy.ticker</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy' sourcepath='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='8ae75a82e5d8a54f9e479fb12d62d455' instanceOccurrenceNum='0' priority='2' abbrev='Eq' type='EQ_DOESNT_OVERRIDE_EQUALS' instanceOccurrenceMax='0'><ShortMessage>Class doesn't override equals in superclass</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$SortedAsMap doesn't override $AbstractMultimap$AsMap.equals(Object)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$SortedAsMap' primary='true'><SourceLine start='1298' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$SortedAsMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractMultimap.java' sourcefile='AbstractMultimap.java' end='1344'><Message>At AbstractMultimap.java:[lines 1298-1344]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$SortedAsMap</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$AsMap' name='equals' role='METHOD_DID_YOU_MEAN_TO_OVERRIDE' signature='(Ljava/lang/Object;)Z'><SourceLine endBytecode='91' startBytecode='0' start='1223' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$AsMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractMultimap.java' sourcefile='AbstractMultimap.java' end='1223'></SourceLine><Message>Did you intend to override com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$AsMap.equals(Object)</Message></Method><SourceLine start='1298' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$SortedAsMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractMultimap.java' synthetic='true' sourcefile='AbstractMultimap.java' end='1344'><Message>At AbstractMultimap.java:[lines 1298-1344]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='7687699b41ecd6de4bfdfd70b2d5263a' instanceOccurrenceNum='0' priority='2' abbrev='IA' type='IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD' instanceOccurrenceMax='0'><ShortMessage>Ambiguous invocation of either an inherited or outer method</ShortMessage><LongMessage>Ambiguous invocation of either an outer or inherited method com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedCollection.size() in com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedList.addAll(int, Collection)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedList' primary='true'><SourceLine start='711' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedList' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractMultimap.java' sourcefile='AbstractMultimap.java' end='795'><Message>At AbstractMultimap.java:[lines 711-795]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedList</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedList' name='addAll' primary='true' signature='(ILjava/util/Collection;)Z'><SourceLine endBytecode='223' startBytecode='0' start='721' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedList' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractMultimap.java' sourcefile='AbstractMultimap.java' end='733'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedList.addAll(int, Collection)</Message></Method><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedCollection' name='size' role='METHOD_INHERITED' signature='()I'><SourceLine endBytecode='77' startBytecode='0' start='467' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedCollection' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractMultimap.java' sourcefile='AbstractMultimap.java' end='468'></SourceLine><Message>Inherited method com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedCollection.size()</Message></Method><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap' name='size' role='METHOD_ALTERNATIVE_TARGET' signature='()I'><SourceLine endBytecode='64' startBytecode='0' start='167' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractMultimap.java' sourcefile='AbstractMultimap.java' end='167'></SourceLine><Message>Did you intend to invoke com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap.size()</Message></Method><SourceLine endBytecode='12' startBytecode='12' start='724' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedList' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractMultimap.java' sourcefile='AbstractMultimap.java' end='724'><Message>At AbstractMultimap.java:[line 724]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='5173400d192b9ed10e0743cc61b7b61c' instanceOccurrenceNum='0' priority='2' abbrev='DLS' type='DLS_DEAD_LOCAL_STORE' instanceOccurrenceMax='0'><ShortMessage>Dead store to local variable</ShortMessage><LongMessage>Dead store to modifier in com.lexicalscope.fluentreflection.internal.guava.collect.$BstOperations.mutate($BstInOrderPath, $BstMutationRule)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$BstOperations' primary='true'><SourceLine start='34' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$BstOperations' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/BstOperations.java' sourcefile='BstOperations.java' end='225'><Message>At BstOperations.java:[lines 34-225]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$BstOperations</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$BstOperations' name='mutate' primary='true' signature='(Lcom/lexicalscope/fluentreflection/internal/guava/collect/$BstInOrderPath;Lcom/lexicalscope/fluentreflection/internal/guava/collect/$BstMutationRule;)Lcom/lexicalscope/fluentreflection/internal/guava/collect/$BstMutationResult;'><SourceLine endBytecode='46' startBytecode='0' start='93' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$BstOperations' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/BstOperations.java' sourcefile='BstOperations.java' end='107'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$BstOperations.mutate($BstInOrderPath, $BstMutationRule)</Message></Method><LocalVariable register='4' name='modifier' pc='26' role='LOCAL_VARIABLE_NAMED'><Message>Local variable named modifier</Message></LocalVariable><SourceLine endBytecode='24' startBytecode='24' start='97' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$BstOperations' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/BstOperations.java' sourcefile='BstOperations.java' end='97'><Message>At BstOperations.java:[line 97]</Message></SourceLine><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME' value='modifier'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS' value='true'></Property></BugInstance><BugInstance category='STYLE' instanceHash='8cfc2531e5f2e1d57a5415bca24b73fb' instanceOccurrenceNum='0' priority='2' abbrev='DLS' type='DLS_DEAD_LOCAL_STORE' instanceOccurrenceMax='0'><ShortMessage>Dead store to local variable</ShortMessage><LongMessage>Dead store to start in com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment.compute(Object, int, $CustomConcurrentHashMap$ReferenceEntry, $ComputingConcurrentHashMap$ComputingValueReference)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment' primary='true'><SourceLine start='75' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ComputingConcurrentHashMap.java' sourcefile='ComputingConcurrentHashMap.java' end='201'><Message>At ComputingConcurrentHashMap.java:[lines 75-201]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment' name='compute' primary='true' signature='(Ljava/lang/Object;ILcom/lexicalscope/fluentreflection/internal/guava/collect/$CustomConcurrentHashMap$ReferenceEntry;Lcom/lexicalscope/fluentreflection/internal/guava/collect/$ComputingConcurrentHashMap$ComputingValueReference;)Ljava/lang/Object;'><SourceLine endBytecode='76' startBytecode='0' start='176' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ComputingConcurrentHashMap.java' sourcefile='ComputingConcurrentHashMap.java' end='201'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment.compute(Object, int, $CustomConcurrentHashMap$ReferenceEntry, $ComputingConcurrentHashMap$ComputingValueReference)</Message></Method><LocalVariable register='6' name='start' pc='8' role='LOCAL_VARIABLE_NAMED'><Message>Local variable named start</Message></LocalVariable><SourceLine endBytecode='6' startBytecode='6' start='177' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ComputingConcurrentHashMap.java' sourcefile='ComputingConcurrentHashMap.java' end='177'><Message>At ComputingConcurrentHashMap.java:[line 177]</Message></SourceLine><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.METHOD_RESULT' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.LOCAL_NAME' value='start'></Property><Property name='edu.umd.cs.findbugs.detect.DeadLocalStoreProperty.NO_LOADS' value='true'></Property></BugInstance><BugInstance category='STYLE' instanceHash='6778f437af22266ebe0fe17c43d701b6' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_LOAD_OF_KNOWN_NULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Load of known null value</ShortMessage><LongMessage>Load of known null value in com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment.getOrCompute(Object, int, $Function)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment' primary='true'><SourceLine start='75' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ComputingConcurrentHashMap.java' sourcefile='ComputingConcurrentHashMap.java' end='201'><Message>At ComputingConcurrentHashMap.java:[lines 75-201]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment' name='getOrCompute' primary='true' signature='(Ljava/lang/Object;ILcom/lexicalscope/fluentreflection/internal/guava/base/$Function;)Ljava/lang/Object;'><SourceLine endBytecode='223' startBytecode='0' start='83' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ComputingConcurrentHashMap.java' sourcefile='ComputingConcurrentHashMap.java' end='169'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment.getOrCompute(Object, int, $Function)</Message></Method><SourceLine endBytecode='212' startBytecode='212' start='116' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ComputingConcurrentHashMap.java' sourcefile='ComputingConcurrentHashMap.java' end='116'><Message>At ComputingConcurrentHashMap.java:[line 116]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='3be9d12051ff5724816431858d64db80' instanceOccurrenceNum='0' priority='2' abbrev='IA' type='IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD' instanceOccurrenceMax='0'><ShortMessage>Ambiguous invocation of either an inherited or outer method</ShortMessage><LongMessage>Ambiguous invocation of either an outer or inherited method com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultiset$EntrySet.iterator() in com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet.snapshot()</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet' primary='true'><SourceLine start='533' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ConcurrentHashMultiset.java' sourcefile='ConcurrentHashMultiset.java' end='570'><Message>At ConcurrentHashMultiset.java:[lines 533-570]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet' name='snapshot' primary='true' signature='()Ljava/util/List;'><SourceLine endBytecode='106' startBytecode='0' start='552' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ConcurrentHashMultiset.java' sourcefile='ConcurrentHashMultiset.java' end='555'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet.snapshot()</Message></Method><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultiset$EntrySet' name='iterator' role='METHOD_INHERITED' signature='()Ljava/util/Iterator;'><SourceLine endBytecode='67' startBytecode='0' start='177' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultiset$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractMultiset.java' sourcefile='AbstractMultiset.java' end='177'></SourceLine><Message>Inherited method com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultiset$EntrySet.iterator()</Message></Method><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset' name='iterator' role='METHOD_ALTERNATIVE_TARGET' signature='()Ljava/util/Iterator;'><SourceLine endBytecode='64' startBytecode='0' start='51' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ConcurrentHashMultiset.java' sourcefile='ConcurrentHashMultiset.java' end='51'></SourceLine><Message>Did you intend to invoke com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset.iterator()</Message></Method><SourceLine endBytecode='10' startBytecode='10' start='554' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ConcurrentHashMultiset.java' sourcefile='ConcurrentHashMultiset.java' end='554'><Message>At ConcurrentHashMultiset.java:[line 554]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='a27a1fcd10b76d964972c504bf5e5f7a' instanceOccurrenceNum='0' priority='2' abbrev='IA' type='IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD' instanceOccurrenceMax='0'><ShortMessage>Ambiguous invocation of either an inherited or outer method</ShortMessage><LongMessage>Ambiguous invocation of either an outer or inherited method com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultiset$EntrySet.size() in com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet.snapshot()</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet' primary='true'><SourceLine start='533' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ConcurrentHashMultiset.java' sourcefile='ConcurrentHashMultiset.java' end='570'><Message>At ConcurrentHashMultiset.java:[lines 533-570]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet' name='snapshot' primary='true' signature='()Ljava/util/List;'><SourceLine endBytecode='106' startBytecode='0' start='552' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ConcurrentHashMultiset.java' sourcefile='ConcurrentHashMultiset.java' end='555'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet.snapshot()</Message></Method><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultiset$EntrySet' name='size' role='METHOD_INHERITED' signature='()I'><SourceLine endBytecode='67' startBytecode='0' start='181' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultiset$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractMultiset.java' sourcefile='AbstractMultiset.java' end='181'></SourceLine><Message>Inherited method com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultiset$EntrySet.size()</Message></Method><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset' name='size' role='METHOD_ALTERNATIVE_TARGET' signature='()I'><SourceLine endBytecode='155' startBytecode='0' start='179' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ConcurrentHashMultiset.java' sourcefile='ConcurrentHashMultiset.java' end='183'></SourceLine><Message>Did you intend to invoke com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset.size()</Message></Method><SourceLine endBytecode='1' startBytecode='1' start='552' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ConcurrentHashMultiset.java' sourcefile='ConcurrentHashMultiset.java' end='552'><Message>At ConcurrentHashMultiset.java:[line 552]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='f30a9d2614f3770c8d3726546db7eea8' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap defines non-transient non-serializable instance field ticker</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' primary='true'><SourceLine start='136' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3938'><Message>At CustomConcurrentHashMap.java:[lines 136-3938]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' name='ticker' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/base/$Ticker;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap.ticker</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='58dcc476aeccd7db738f5755ad41f4e7' instanceOccurrenceNum='0' priority='1' abbrev='Se' type='SE_BAD_FIELD_STORE' instanceOccurrenceMax='0'><ShortMessage>Non-serializable value stored into instance field of a serializable class</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntrySet stored into non-transient field $CustomConcurrentHashMap.entrySet</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' primary='true'><SourceLine start='136' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3938'><Message>At CustomConcurrentHashMap.java:[lines 136-3938]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' name='entrySet' primary='true' signature='Ljava/util/Set;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap.entrySet</Message></Field><Type descriptor='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$CustomConcurrentHashMap$EntrySet;' role='TYPE_FOUND'><SourceLine start='3885' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3930'><Message>At CustomConcurrentHashMap.java:[lines 3885-3930]</Message></SourceLine><Message>Actual type com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntrySet</Message></Type><SourceLine endBytecode='23' startBytecode='23' start='3641' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3641'><Message>At CustomConcurrentHashMap.java:[line 3641]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='c8d1239ae4669d3fb7e9340bc6c4d8fc' instanceOccurrenceNum='0' priority='1' abbrev='Se' type='SE_BAD_FIELD_STORE' instanceOccurrenceMax='0'><ShortMessage>Non-serializable value stored into instance field of a serializable class</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$KeySet stored into non-transient field $CustomConcurrentHashMap.keySet</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' primary='true'><SourceLine start='136' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3938'><Message>At CustomConcurrentHashMap.java:[lines 136-3938]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' name='keySet' primary='true' signature='Ljava/util/Set;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap.keySet</Message></Field><Type descriptor='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$CustomConcurrentHashMap$KeySet;' role='TYPE_FOUND'><SourceLine start='3824' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$KeySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3854'><Message>At CustomConcurrentHashMap.java:[lines 3824-3854]</Message></SourceLine><Message>Actual type com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$KeySet</Message></Type><SourceLine endBytecode='23' startBytecode='23' start='3625' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3625'><Message>At CustomConcurrentHashMap.java:[line 3625]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='91b2242b2ece612c5daa7b066d38cb82' instanceOccurrenceNum='0' priority='1' abbrev='Se' type='SE_BAD_FIELD_STORE' instanceOccurrenceMax='0'><ShortMessage>Non-serializable value stored into instance field of a serializable class</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Values stored into non-transient field $CustomConcurrentHashMap.values</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' primary='true'><SourceLine start='136' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3938'><Message>At CustomConcurrentHashMap.java:[lines 136-3938]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' name='values' primary='true' signature='Ljava/util/Collection;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap.values</Message></Field><Type descriptor='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$CustomConcurrentHashMap$Values;' role='TYPE_FOUND'><SourceLine start='3857' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Values' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3882'><Message>At CustomConcurrentHashMap.java:[lines 3857-3882]</Message></SourceLine><Message>Actual type com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Values</Message></Type><SourceLine endBytecode='23' startBytecode='23' start='3633' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3633'><Message>At CustomConcurrentHashMap.java:[line 3633]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='3630514894b43e2a62b965ac68bdbd9a' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap.entryFactory is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' primary='true'><SourceLine start='136' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3938'><Message>At CustomConcurrentHashMap.java:[lines 136-3938]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' name='entryFactory' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$CustomConcurrentHashMap$EntryFactory;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap.entryFactory</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='c11d86c12b8475bf7ca27a76a7453b75' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap.segmentMask is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' primary='true'><SourceLine start='136' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3938'><Message>At CustomConcurrentHashMap.java:[lines 136-3938]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' name='segmentMask' primary='true' signature='I'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap.segmentMask</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='7d52ca443357f6375eb08aee8e1f53da' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap.segmentShift is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' primary='true'><SourceLine start='136' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3938'><Message>At CustomConcurrentHashMap.java:[lines 136-3938]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' name='segmentShift' primary='true' signature='I'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap.segmentShift</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='ab5af3789634106a8a5d8c31f7d45307' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap.segments is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' primary='true'><SourceLine start='136' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3938'><Message>At CustomConcurrentHashMap.java:[lines 136-3938]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' name='segments' primary='true' signature='[Lcom/lexicalscope/fluentreflection/internal/guava/collect/$CustomConcurrentHashMap$Segment;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap.segments</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='933c0709f80bff4f8bc36a5136b7499c' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_LOAD_OF_KNOWN_NULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Load of known null value</ShortMessage><LongMessage>Load of known null value in com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment.put(Object, int, Object, boolean)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' primary='true'><SourceLine start='2124' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3139'><Message>At CustomConcurrentHashMap.java:[lines 2124-3139]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' name='put' primary='true' signature='(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;'><SourceLine endBytecode='191' startBytecode='0' start='2533' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2596'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment.put(Object, int, Object, boolean)</Message></Method><SourceLine endBytecode='169' startBytecode='169' start='2561' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2561'><Message>At CustomConcurrentHashMap.java:[line 2561]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='e8f094c4189c001570236ae1e81f844b' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_LOAD_OF_KNOWN_NULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Load of known null value</ShortMessage><LongMessage>Load of known null value in com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment.replace(Object, int, Object)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' primary='true'><SourceLine start='2124' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3139'><Message>At CustomConcurrentHashMap.java:[lines 2124-3139]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' name='replace' primary='true' signature='(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;'><SourceLine endBytecode='135' startBytecode='0' start='2724' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2763'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment.replace(Object, int, Object)</Message></Method><SourceLine endBytecode='141' startBytecode='141' start='2744' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2744'><Message>At CustomConcurrentHashMap.java:[line 2744]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='6aed8846e7646f9f68f19a69a9d23b93' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_LOAD_OF_KNOWN_NULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Load of known null value</ShortMessage><LongMessage>Load of known null value in com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment.replace(Object, int, Object, Object)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' primary='true'><SourceLine start='2124' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3139'><Message>At CustomConcurrentHashMap.java:[lines 2124-3139]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' name='replace' primary='true' signature='(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z'><SourceLine endBytecode='153' startBytecode='0' start='2673' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2719'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment.replace(Object, int, Object, Object)</Message></Method><SourceLine endBytecode='141' startBytecode='141' start='2693' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2693'><Message>At CustomConcurrentHashMap.java:[line 2693]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='779f8bff17a5ddacfc497c0291adce16' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment defines non-transient non-serializable instance field keyReferenceQueue</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' primary='true'><SourceLine start='2124' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3139'><Message>At CustomConcurrentHashMap.java:[lines 2124-3139]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' name='keyReferenceQueue' primary='true' signature='Ljava/lang/ref/ReferenceQueue;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment.keyReferenceQueue</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='82b3450dcf758dee0e38d8c0fbc670d3' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment defines non-transient non-serializable instance field valueReferenceQueue</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' primary='true'><SourceLine start='2124' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='3139'><Message>At CustomConcurrentHashMap.java:[lines 2124-3139]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' name='valueReferenceQueue' primary='true' signature='Ljava/lang/ref/ReferenceQueue;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment.valueReferenceQueue</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='4c15a18cf46afa28c90fe4f8b8c0bb91' instanceOccurrenceNum='0' priority='2' abbrev='HE' type='HE_INHERITS_EQUALS_USE_HASHCODE' instanceOccurrenceMax='0'><ShortMessage>Class inherits equals() and uses Object.hashCode()</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$AboveAll inherits equals and uses Object.hashCode()</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$AboveAll' primary='true'><SourceLine start='179' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$AboveAll' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Cut.java' sourcefile='Cut.java' end='223'><Message>At Cut.java:[lines 179-223]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$AboveAll</Message></Class><SourceLine start='179' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$AboveAll' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Cut.java' synthetic='true' sourcefile='Cut.java' end='223'><Message>At Cut.java:[lines 179-223]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='9da563e312caae3b05384b09eda0beec' instanceOccurrenceNum='0' priority='2' abbrev='HE' type='HE_INHERITS_EQUALS_USE_HASHCODE' instanceOccurrenceMax='0'><ShortMessage>Class inherits equals() and uses Object.hashCode()</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$BelowAll inherits equals and uses Object.hashCode()</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$BelowAll' primary='true'><SourceLine start='113' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$BelowAll' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Cut.java' sourcefile='Cut.java' end='165'><Message>At Cut.java:[lines 113-165]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$BelowAll</Message></Class><SourceLine start='113' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$BelowAll' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Cut.java' synthetic='true' sourcefile='Cut.java' end='165'><Message>At Cut.java:[lines 113-165]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='3e332ef1aa6406d99324ec0dc7f8fe8c' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$DescendingImmutableSortedMultiset is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$DescendingImmutableSortedMultiset' primary='true'><SourceLine start='24' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$DescendingImmutableSortedMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/DescendingImmutableSortedMultiset.java' sourcefile='DescendingImmutableSortedMultiset.java' end='94'><Message>At DescendingImmutableSortedMultiset.java:[lines 24-94]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$DescendingImmutableSortedMultiset</Message></Class><SourceLine start='24' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$DescendingImmutableSortedMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/DescendingImmutableSortedMultiset.java' synthetic='true' sourcefile='DescendingImmutableSortedMultiset.java' end='94'><Message>At DescendingImmutableSortedMultiset.java:[lines 24-94]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='9d44a59a6b4ed5d7e280dc1aa828e659' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$DescendingImmutableSortedMultiset.forward is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$DescendingImmutableSortedMultiset' primary='true'><SourceLine start='24' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$DescendingImmutableSortedMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/DescendingImmutableSortedMultiset.java' sourcefile='DescendingImmutableSortedMultiset.java' end='94'><Message>At DescendingImmutableSortedMultiset.java:[lines 24-94]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$DescendingImmutableSortedMultiset</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$DescendingImmutableSortedMultiset' name='forward' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$ImmutableSortedMultiset;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$DescendingImmutableSortedMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/DescendingImmutableSortedMultiset.java' sourcefile='DescendingImmutableSortedMultiset.java'><Message>In DescendingImmutableSortedMultiset.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$DescendingImmutableSortedMultiset.forward</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$DescendingImmutableSortedMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/DescendingImmutableSortedMultiset.java' synthetic='true' sourcefile='DescendingImmutableSortedMultiset.java'><Message>In DescendingImmutableSortedMultiset.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='7e1e74c3a0ef4c71636ae7c008b8a4f8' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$GeneralRange is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$GeneralRange' primary='true'><SourceLine start='46' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$GeneralRange' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/GeneralRange.java' sourcefile='GeneralRange.java' end='268'><Message>At GeneralRange.java:[lines 46-268]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$GeneralRange</Message></Class><SourceLine start='46' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$GeneralRange' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/GeneralRange.java' synthetic='true' sourcefile='GeneralRange.java' end='268'><Message>At GeneralRange.java:[lines 46-268]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='91008ff0ea8c261d7a876dc85093a776' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableAsList is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableAsList' primary='true'><SourceLine start='37' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableAsList' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableAsList.java' sourcefile='ImmutableAsList.java' end='67'><Message>At ImmutableAsList.java:[lines 37-67]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableAsList</Message></Class><SourceLine start='37' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableAsList' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableAsList.java' synthetic='true' sourcefile='ImmutableAsList.java' end='67'><Message>At ImmutableAsList.java:[lines 37-67]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='83bf9f7373eddbb1e26f8d0ff9dd59c0' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet' primary='true'><SourceLine start='31' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableEnumSet.java' sourcefile='ImmutableEnumSet.java' end='98'><Message>At ImmutableEnumSet.java:[lines 31-98]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet</Message></Class><SourceLine start='31' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableEnumSet.java' synthetic='true' sourcefile='ImmutableEnumSet.java' end='98'><Message>At ImmutableEnumSet.java:[lines 31-98]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='d5ff11581750b61bd63be0bafada30af' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet.delegate is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet' primary='true'><SourceLine start='31' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableEnumSet.java' sourcefile='ImmutableEnumSet.java' end='98'><Message>At ImmutableEnumSet.java:[lines 31-98]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet' name='delegate' primary='true' signature='Ljava/util/EnumSet;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableEnumSet.java' sourcefile='ImmutableEnumSet.java'><Message>In ImmutableEnumSet.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet.delegate</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableEnumSet.java' synthetic='true' sourcefile='ImmutableEnumSet.java'><Message>In ImmutableEnumSet.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='7cf249938fd85d16b9c1a5de7581ec20' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableList$ReverseImmutableList is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableList$ReverseImmutableList' primary='true'><SourceLine start='417' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableList$ReverseImmutableList' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableList.java' sourcefile='ImmutableList.java' end='507'><Message>At ImmutableList.java:[lines 417-507]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableList$ReverseImmutableList</Message></Class><SourceLine start='417' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableList$ReverseImmutableList' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableList.java' synthetic='true' sourcefile='ImmutableList.java' end='507'><Message>At ImmutableList.java:[lines 417-507]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='ff0f531991e5cf0a282bae958bf58e43' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultiset$EntrySet.multiset is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultiset$EntrySet' primary='true'><SourceLine start='360' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultiset$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableMultiset.java' sourcefile='ImmutableMultiset.java' end='435'><Message>At ImmutableMultiset.java:[lines 360-435]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultiset$EntrySet</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultiset$EntrySet' name='multiset' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$ImmutableMultiset;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultiset$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableMultiset.java' sourcefile='ImmutableMultiset.java'><Message>In ImmutableMultiset.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultiset$EntrySet.multiset</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultiset$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableMultiset.java' synthetic='true' sourcefile='ImmutableMultiset.java'><Message>In ImmutableMultiset.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='ed5bebac3ad3ac8f97ec0149cf1950ac' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedAsList is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedAsList' primary='true'><SourceLine start='29' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedAsList' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedAsList.java' sourcefile='ImmutableSortedAsList.java' end='103'><Message>At ImmutableSortedAsList.java:[lines 29-103]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedAsList</Message></Class><SourceLine start='29' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedAsList' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedAsList.java' synthetic='true' sourcefile='ImmutableSortedAsList.java' end='103'><Message>At ImmutableSortedAsList.java:[lines 29-103]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='b049e76bd12faa776a4bc7f608b9a096' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap.comparator is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap' primary='true'><SourceLine start='60' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMap.java' sourcefile='ImmutableSortedMap.java' end='748'><Message>At ImmutableSortedMap.java:[lines 60-748]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap' name='comparator' primary='true' signature='Ljava/util/Comparator;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMap.java' sourcefile='ImmutableSortedMap.java'><Message>In ImmutableSortedMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap.comparator</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMap.java' synthetic='true' sourcefile='ImmutableSortedMap.java'><Message>In ImmutableSortedMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='be75a43c0c8d183a67502353523ba27e' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap.entries is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap' primary='true'><SourceLine start='60' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMap.java' sourcefile='ImmutableSortedMap.java' end='748'><Message>At ImmutableSortedMap.java:[lines 60-748]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap' name='entries' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$ImmutableList;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMap.java' sourcefile='ImmutableSortedMap.java'><Message>In ImmutableSortedMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap.entries</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMap.java' synthetic='true' sourcefile='ImmutableSortedMap.java'><Message>In ImmutableSortedMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='e9d6859030ea7419e9e5a4b1d444a76' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySet is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySet' primary='true'><SourceLine start='462' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMap.java' sourcefile='ImmutableSortedMap.java' end='493'><Message>At ImmutableSortedMap.java:[lines 462-493]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySet</Message></Class><SourceLine start='462' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMap.java' synthetic='true' sourcefile='ImmutableSortedMap.java' end='493'><Message>At ImmutableSortedMap.java:[lines 462-493]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='228700ad0472fd56dd4f4bfef42a8226' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySet.map is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySet' primary='true'><SourceLine start='462' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMap.java' sourcefile='ImmutableSortedMap.java' end='493'><Message>At ImmutableSortedMap.java:[lines 462-493]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySet</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySet' name='map' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$ImmutableSortedMap;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMap.java' sourcefile='ImmutableSortedMap.java'><Message>In ImmutableSortedMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySet.map</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMap.java' synthetic='true' sourcefile='ImmutableSortedMap.java'><Message>In ImmutableSortedMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='de18cfa355ce2c44a833ecbc2081b7ac' instanceOccurrenceNum='0' priority='2' abbrev='It' type='IT_NO_SUCH_ELEMENT' instanceOccurrenceMax='0'><ShortMessage>Iterator next() method can't throw NoSuchElementException</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$ValueForKeyIterator.next() can't throw NoSuchElementException</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$ValueForKeyIterator' primary='true'><SourceLine start='400' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$ValueForKeyIterator' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/LinkedListMultimap.java' sourcefile='LinkedListMultimap.java' end='496'><Message>At LinkedListMultimap.java:[lines 400-496]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$ValueForKeyIterator</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$ValueForKeyIterator' name='next' primary='true' signature='()Ljava/lang/Object;'><SourceLine endBytecode='124' startBytecode='0' start='440' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$ValueForKeyIterator' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/LinkedListMultimap.java' sourcefile='LinkedListMultimap.java' end='444'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$ValueForKeyIterator.next()</Message></Method><SourceLine endBytecode='124' startBytecode='0' start='440' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$ValueForKeyIterator' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/LinkedListMultimap.java' synthetic='true' sourcefile='LinkedListMultimap.java' end='444'><Message>At LinkedListMultimap.java:[lines 440-444]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='a88505aa595d55a95a0948db7caf611e' instanceOccurrenceNum='0' priority='2' abbrev='Eq' type='EQ_UNUSUAL' instanceOccurrenceMax='0'><ShortMessage>Unusual equals method </ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedAsMapEntries.equals(Object) is unusual</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedAsMapEntries' primary='true'><SourceLine start='638' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedAsMapEntries' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/MapConstraints.java' sourcefile='MapConstraints.java' end='700'><Message>At MapConstraints.java:[lines 638-700]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedAsMapEntries</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedAsMapEntries' name='equals' primary='true' signature='(Ljava/lang/Object;)Z'><SourceLine endBytecode='75' startBytecode='0' start='684' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedAsMapEntries' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/MapConstraints.java' sourcefile='MapConstraints.java' end='684'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedAsMapEntries.equals(Object)</Message></Method><SourceLine endBytecode='75' startBytecode='0' start='684' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedAsMapEntries' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/MapConstraints.java' synthetic='true' sourcefile='MapConstraints.java' end='684'><Message>At MapConstraints.java:[line 684]</Message></SourceLine></BugInstance><BugInstance category='CORRECTNESS' instanceHash='44a5b0aef4599397abcbac64aeccacbf' instanceOccurrenceNum='0' priority='2' abbrev='UwF' type='UWF_UNWRITTEN_FIELD' instanceOccurrenceMax='0'><ShortMessage>Unwritten field</ShortMessage><LongMessage>Unwritten field: com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker.ticker</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker' primary='true'><SourceLine start='114' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/MapMaker.java' sourcefile='MapMaker.java' end='765'><Message>At MapMaker.java:[lines 114-765]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker' name='ticker' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/base/$Ticker;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/MapMaker.java' sourcefile='MapMaker.java'><Message>In MapMaker.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker.ticker</Message></Field><SourceLine endBytecode='1' startBytecode='1' start='532' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/MapMaker.java' sourcefile='MapMaker.java' end='532'><Message>At MapMaker.java:[line 532]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='14d1713aed8a10e727408bdf662980d6' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$UnmodifiableBiMap.inverse is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$UnmodifiableBiMap' primary='true'><SourceLine start='754' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$UnmodifiableBiMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Maps.java' sourcefile='Maps.java' end='787'><Message>At Maps.java:[lines 754-787]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$UnmodifiableBiMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$UnmodifiableBiMap' name='inverse' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$BiMap;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$UnmodifiableBiMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Maps.java' sourcefile='Maps.java'><Message>In Maps.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$UnmodifiableBiMap.inverse</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$UnmodifiableBiMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Maps.java' synthetic='true' sourcefile='Maps.java'><Message>In Maps.java</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='44c2d948f07beaef9cc1c4d50219363b' instanceOccurrenceNum='0' priority='2' abbrev='BC' type='BC_BAD_CAST_TO_ABSTRACT_COLLECTION' instanceOccurrenceMax='0'><ShortMessage>Questionable cast to abstract collection </ShortMessage><LongMessage>Questionable cast from Collection to abstract class java.util.List in com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesListMultimap.transform(Object, Collection)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesListMultimap' primary='true'><SourceLine start='1701' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesListMultimap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Multimaps.java' sourcefile='Multimaps.java' end='1729'><Message>At Multimaps.java:[lines 1701-1729]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesListMultimap</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesListMultimap' name='transform' primary='true' signature='(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/List;'><SourceLine endBytecode='8' startBytecode='0' start='1711' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesListMultimap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Multimaps.java' sourcefile='Multimaps.java' end='1711'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesListMultimap.transform(Object, Collection)</Message></Method><Type descriptor='Ljava/util/Collection;' typeParameters='&lt;V1&gt;' role='TYPE_FOUND'><SourceLine classname='java.util.Collection' sourcepath='java/util/Collection.java' sourcefile='Collection.java'><Message>In Collection.java</Message></SourceLine><Message>Actual type java.util.Collection&lt;V1&gt;</Message></Type><Type descriptor='Ljava/util/List;' role='TYPE_EXPECTED'><SourceLine classname='java.util.List' sourcepath='java/util/List.java' sourcefile='List.java'><Message>In List.java</Message></SourceLine><Message>Expected java.util.List</Message></Type><LocalVariable register='2' name='values' pc='0' role='LOCAL_VARIABLE_VALUE_OF'><Message>Value loaded from values</Message></LocalVariable><SourceLine endBytecode='1' startBytecode='1' start='1711' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesListMultimap' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Multimaps.java' sourcefile='Multimaps.java' end='1711'><Message>At Multimaps.java:[line 1711]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='6e3d954f2ef7b179ace45ca2999f5119' instanceOccurrenceNum='0' priority='2' abbrev='Eq' type='EQ_UNUSUAL' instanceOccurrenceMax='0'><ShortMessage>Unusual equals method </ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries.equals(Object) is unusual</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries' primary='true'><SourceLine start='954' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Multimaps.java' sourcefile='Multimaps.java' end='994'><Message>At Multimaps.java:[lines 954-994]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries' name='equals' primary='true' signature='(Ljava/lang/Object;)Z'><SourceLine endBytecode='75' startBytecode='0' start='994' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Multimaps.java' sourcefile='Multimaps.java' end='994'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries.equals(Object)</Message></Method><SourceLine endBytecode='75' startBytecode='0' start='994' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Multimaps.java' synthetic='true' sourcefile='Multimaps.java' end='994'><Message>At Multimaps.java:[line 994]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='377680e4a9af8cff38c209c575986c5a' instanceOccurrenceNum='0' priority='2' abbrev='HE' type='HE_EQUALS_NO_HASHCODE' instanceOccurrenceMax='0'><ShortMessage>Class defines equals() but not hashCode()</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries defines equals but not hashCode</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries' primary='true'><SourceLine start='954' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Multimaps.java' sourcefile='Multimaps.java' end='994'><Message>At Multimaps.java:[lines 954-994]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries' name='equals' primary='true' signature='(Ljava/lang/Object;)Z'><SourceLine endBytecode='75' startBytecode='0' start='994' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Multimaps.java' sourcefile='Multimaps.java' end='994'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries.equals(Object)</Message></Method><SourceLine endBytecode='75' startBytecode='0' start='994' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Multimaps.java' synthetic='true' sourcefile='Multimaps.java' end='994'><Message>At Multimaps.java:[line 994]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='b579615b276cb767736a3d7bc89a8b22' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap' primary='true'><SourceLine start='26' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableBiMap.java' sourcefile='RegularImmutableBiMap.java' end='58'><Message>At RegularImmutableBiMap.java:[lines 26-58]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap</Message></Class><SourceLine start='26' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableBiMap.java' synthetic='true' sourcefile='RegularImmutableBiMap.java' end='58'><Message>At RegularImmutableBiMap.java:[lines 26-58]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='21fd9bfeb057d64ec60e9b635de7903d' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap.delegate is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap' primary='true'><SourceLine start='26' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableBiMap.java' sourcefile='RegularImmutableBiMap.java' end='58'><Message>At RegularImmutableBiMap.java:[lines 26-58]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap' name='delegate' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$ImmutableMap;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableBiMap.java' sourcefile='RegularImmutableBiMap.java'><Message>In RegularImmutableBiMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap.delegate</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableBiMap.java' synthetic='true' sourcefile='RegularImmutableBiMap.java'><Message>In RegularImmutableBiMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='d26d5bf4939a6ff06ed9f41185571e83' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap.inverse is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap' primary='true'><SourceLine start='26' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableBiMap.java' sourcefile='RegularImmutableBiMap.java' end='58'><Message>At RegularImmutableBiMap.java:[lines 26-58]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap' name='inverse' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$ImmutableBiMap;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableBiMap.java' sourcefile='RegularImmutableBiMap.java'><Message>In RegularImmutableBiMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap.inverse</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableBiMap.java' synthetic='true' sourcefile='RegularImmutableBiMap.java'><Message>In RegularImmutableBiMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='89c4d53b952ef450fb76e630b81d7006' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableList is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableList' primary='true'><SourceLine start='31' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableList' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableList.java' sourcefile='RegularImmutableList.java' end='183'><Message>At RegularImmutableList.java:[lines 31-183]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableList</Message></Class><SourceLine start='31' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableList' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableList.java' synthetic='true' sourcefile='RegularImmutableList.java' end='183'><Message>At RegularImmutableList.java:[lines 31-183]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='209eaa49f2a56e90d1fc4becd7d850b9' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap.entries is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' primary='true'><SourceLine start='35' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' sourcefile='RegularImmutableMap.java' end='287'><Message>At RegularImmutableMap.java:[lines 35-287]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' name='entries' primary='true' signature='[Lcom/lexicalscope/fluentreflection/internal/guava/collect/$RegularImmutableMap$LinkedEntry;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' sourcefile='RegularImmutableMap.java'><Message>In RegularImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap.entries</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' synthetic='true' sourcefile='RegularImmutableMap.java'><Message>In RegularImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='82e4480e717eab2c4c49cae96f22d59f' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap.keySetHashCode is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' primary='true'><SourceLine start='35' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' sourcefile='RegularImmutableMap.java' end='287'><Message>At RegularImmutableMap.java:[lines 35-287]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' name='keySetHashCode' primary='true' signature='I'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' sourcefile='RegularImmutableMap.java'><Message>In RegularImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap.keySetHashCode</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' synthetic='true' sourcefile='RegularImmutableMap.java'><Message>In RegularImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='138d39b0ed86477c584fb2475dd61769' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap.mask is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' primary='true'><SourceLine start='35' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' sourcefile='RegularImmutableMap.java' end='287'><Message>At RegularImmutableMap.java:[lines 35-287]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' name='mask' primary='true' signature='I'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' sourcefile='RegularImmutableMap.java'><Message>In RegularImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap.mask</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' synthetic='true' sourcefile='RegularImmutableMap.java'><Message>In RegularImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='b3efbf3c534d9020d48c4822dc5eac04' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap.table is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' primary='true'><SourceLine start='35' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' sourcefile='RegularImmutableMap.java' end='287'><Message>At RegularImmutableMap.java:[lines 35-287]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' name='table' primary='true' signature='[Lcom/lexicalscope/fluentreflection/internal/guava/collect/$RegularImmutableMap$LinkedEntry;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' sourcefile='RegularImmutableMap.java'><Message>In RegularImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap.table</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' synthetic='true' sourcefile='RegularImmutableMap.java'><Message>In RegularImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='3b5d0b161b895ae4eea0bec231e965dd' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$EntrySet is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$EntrySet' primary='true'><SourceLine start='202' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' sourcefile='RegularImmutableMap.java' end='212'><Message>At RegularImmutableMap.java:[lines 202-212]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$EntrySet</Message></Class><SourceLine start='202' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' synthetic='true' sourcefile='RegularImmutableMap.java' end='212'><Message>At RegularImmutableMap.java:[lines 202-212]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='6fb56592ae69cc6d94d6c659a5fb3bec' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$EntrySet.map is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$EntrySet' primary='true'><SourceLine start='202' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' sourcefile='RegularImmutableMap.java' end='212'><Message>At RegularImmutableMap.java:[lines 202-212]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$EntrySet</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$EntrySet' name='map' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$RegularImmutableMap;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' sourcefile='RegularImmutableMap.java'><Message>In RegularImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$EntrySet.map</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$EntrySet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' synthetic='true' sourcefile='RegularImmutableMap.java'><Message>In RegularImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='2eb2ce366bf3486b44ec1ce21f20bd7a' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset' primary='true'><SourceLine start='32' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMultiset.java' sourcefile='RegularImmutableMultiset.java' end='95'><Message>At RegularImmutableMultiset.java:[lines 32-95]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset</Message></Class><SourceLine start='32' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMultiset.java' synthetic='true' sourcefile='RegularImmutableMultiset.java' end='95'><Message>At RegularImmutableMultiset.java:[lines 32-95]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='522decccffbe6b698582a46c1ce20bc0' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset.map is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset' primary='true'><SourceLine start='32' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMultiset.java' sourcefile='RegularImmutableMultiset.java' end='95'><Message>At RegularImmutableMultiset.java:[lines 32-95]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset' name='map' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$ImmutableMap;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMultiset.java' sourcefile='RegularImmutableMultiset.java'><Message>In RegularImmutableMultiset.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset.map</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMultiset.java' synthetic='true' sourcefile='RegularImmutableMultiset.java'><Message>In RegularImmutableMultiset.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='872b40a12b75a28167a8d114800f4768' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset.size is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset' primary='true'><SourceLine start='32' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMultiset.java' sourcefile='RegularImmutableMultiset.java' end='95'><Message>At RegularImmutableMultiset.java:[lines 32-95]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset' name='size' primary='true' signature='I'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMultiset.java' sourcefile='RegularImmutableMultiset.java'><Message>In RegularImmutableMultiset.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset.size</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMultiset.java' synthetic='true' sourcefile='RegularImmutableMultiset.java'><Message>In RegularImmutableMultiset.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='c073acef8780af8614229639ad12ce20' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' primary='true'><SourceLine start='39' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSet.java' sourcefile='RegularImmutableSet.java' end='65'><Message>At RegularImmutableSet.java:[lines 39-65]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet</Message></Class><SourceLine start='39' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSet.java' synthetic='true' sourcefile='RegularImmutableSet.java' end='65'><Message>At RegularImmutableSet.java:[lines 39-65]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='912e15b694993443284bc2b43ec37c1' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet.hashCode is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' primary='true'><SourceLine start='39' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSet.java' sourcefile='RegularImmutableSet.java' end='65'><Message>At RegularImmutableSet.java:[lines 39-65]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' name='hashCode' primary='true' signature='I'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSet.java' sourcefile='RegularImmutableSet.java'><Message>In RegularImmutableSet.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet.hashCode</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSet.java' synthetic='true' sourcefile='RegularImmutableSet.java'><Message>In RegularImmutableSet.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='be1e9cf8b36aec0892de3754d5cbcff3' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet.mask is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' primary='true'><SourceLine start='39' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSet.java' sourcefile='RegularImmutableSet.java' end='65'><Message>At RegularImmutableSet.java:[lines 39-65]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' name='mask' primary='true' signature='I'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSet.java' sourcefile='RegularImmutableSet.java'><Message>In RegularImmutableSet.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet.mask</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSet.java' synthetic='true' sourcefile='RegularImmutableSet.java'><Message>In RegularImmutableSet.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='dfa6f24f2ad1912c6354e6f5dd390e72' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet.table is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' primary='true'><SourceLine start='39' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSet.java' sourcefile='RegularImmutableSet.java' end='65'><Message>At RegularImmutableSet.java:[lines 39-65]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' name='table' primary='true' signature='[Ljava/lang/Object;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSet.java' sourcefile='RegularImmutableSet.java'><Message>In RegularImmutableSet.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet.table</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSet.java' synthetic='true' sourcefile='RegularImmutableSet.java'><Message>In RegularImmutableSet.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='67fc4d7d99c4d0a42c27022042b7d312' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset' primary='true'><SourceLine start='35' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSortedMultiset.java' sourcefile='RegularImmutableSortedMultiset.java' end='194'><Message>At RegularImmutableSortedMultiset.java:[lines 35-194]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset</Message></Class><SourceLine start='35' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSortedMultiset.java' synthetic='true' sourcefile='RegularImmutableSortedMultiset.java' end='194'><Message>At RegularImmutableSortedMultiset.java:[lines 35-194]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='b4f25ce646a4618cdd9b1a30deff0921' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset.entries is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset' primary='true'><SourceLine start='35' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSortedMultiset.java' sourcefile='RegularImmutableSortedMultiset.java' end='194'><Message>At RegularImmutableSortedMultiset.java:[lines 35-194]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset' name='entries' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$ImmutableList;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSortedMultiset.java' sourcefile='RegularImmutableSortedMultiset.java'><Message>In RegularImmutableSortedMultiset.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset.entries</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSortedMultiset.java' synthetic='true' sourcefile='RegularImmutableSortedMultiset.java'><Message>In RegularImmutableSortedMultiset.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='b504d69686ac039fdb4718c60e79166' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedSet is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedSet' primary='true'><SourceLine start='45' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSortedSet.java' sourcefile='RegularImmutableSortedSet.java' end='273'><Message>At RegularImmutableSortedSet.java:[lines 45-273]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedSet</Message></Class><SourceLine start='45' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSortedSet.java' synthetic='true' sourcefile='RegularImmutableSortedSet.java' end='273'><Message>At RegularImmutableSortedSet.java:[lines 45-273]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='2a78aef98e2bd69ef26a865771af6460' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableList is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableList' primary='true'><SourceLine start='34' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableList' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableList.java' sourcefile='SingletonImmutableList.java' end='167'><Message>At SingletonImmutableList.java:[lines 34-167]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableList</Message></Class><SourceLine start='34' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableList' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableList.java' synthetic='true' sourcefile='SingletonImmutableList.java' end='167'><Message>At SingletonImmutableList.java:[lines 34-167]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='2ce0148e58a285044cc5498ecff1a4ac' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' primary='true'><SourceLine start='31' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableMap.java' sourcefile='SingletonImmutableMap.java' end='154'><Message>At SingletonImmutableMap.java:[lines 31-154]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap</Message></Class><SourceLine start='31' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableMap.java' synthetic='true' sourcefile='SingletonImmutableMap.java' end='154'><Message>At SingletonImmutableMap.java:[lines 31-154]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='39eb4b35c13999b393eb94fb0bc0bf48' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap.entry is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' primary='true'><SourceLine start='31' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableMap.java' sourcefile='SingletonImmutableMap.java' end='154'><Message>At SingletonImmutableMap.java:[lines 31-154]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' name='entry' primary='true' signature='Ljava/util/Map$Entry;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableMap.java' sourcefile='SingletonImmutableMap.java'><Message>In SingletonImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap.entry</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableMap.java' synthetic='true' sourcefile='SingletonImmutableMap.java'><Message>In SingletonImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='7f04b52223bf439b6397999159a67b70' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap.singleKey is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' primary='true'><SourceLine start='31' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableMap.java' sourcefile='SingletonImmutableMap.java' end='154'><Message>At SingletonImmutableMap.java:[lines 31-154]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' name='singleKey' primary='true' signature='Ljava/lang/Object;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableMap.java' sourcefile='SingletonImmutableMap.java'><Message>In SingletonImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap.singleKey</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableMap.java' synthetic='true' sourcefile='SingletonImmutableMap.java'><Message>In SingletonImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='77bd4d78192585be372ff2339b4da2aa' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap.singleValue is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' primary='true'><SourceLine start='31' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableMap.java' sourcefile='SingletonImmutableMap.java' end='154'><Message>At SingletonImmutableMap.java:[lines 31-154]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' name='singleValue' primary='true' signature='Ljava/lang/Object;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableMap.java' sourcefile='SingletonImmutableMap.java'><Message>In SingletonImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap.singleValue</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableMap.java' synthetic='true' sourcefile='SingletonImmutableMap.java'><Message>In SingletonImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='e00b614e1612dff755d0e2c62f78ad56' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet' primary='true'><SourceLine start='32' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableSet.java' sourcefile='SingletonImmutableSet.java' end='115'><Message>At SingletonImmutableSet.java:[lines 32-115]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet</Message></Class><SourceLine start='32' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableSet.java' synthetic='true' sourcefile='SingletonImmutableSet.java' end='115'><Message>At SingletonImmutableSet.java:[lines 32-115]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='d4eb9a637817019240b22c5ffa8ced84' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet.cachedHashCode is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet' primary='true'><SourceLine start='32' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableSet.java' sourcefile='SingletonImmutableSet.java' end='115'><Message>At SingletonImmutableSet.java:[lines 32-115]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet' name='cachedHashCode' primary='true' signature='Ljava/lang/Integer;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableSet.java' sourcefile='SingletonImmutableSet.java'><Message>In SingletonImmutableSet.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet.cachedHashCode</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableSet.java' synthetic='true' sourcefile='SingletonImmutableSet.java'><Message>In SingletonImmutableSet.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='3b8fc2e37387ea57ec7f77e682d3342a' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet.element is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet' primary='true'><SourceLine start='32' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableSet.java' sourcefile='SingletonImmutableSet.java' end='115'><Message>At SingletonImmutableSet.java:[lines 32-115]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet' name='element' primary='true' signature='Ljava/lang/Object;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableSet.java' sourcefile='SingletonImmutableSet.java'><Message>In SingletonImmutableSet.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet.element</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableSet.java' synthetic='true' sourcefile='SingletonImmutableSet.java'><Message>In SingletonImmutableSet.java</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='2d4b9f87c2451c8df47dd808b344a182' instanceOccurrenceNum='0' priority='2' abbrev='Eq' type='EQ_UNUSUAL' instanceOccurrenceMax='0'><ShortMessage>Unusual equals method </ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Row$RowEntrySet$1$1.equals(Object) is unusual</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Row$RowEntrySet$1$1' primary='true'><SourceLine start='468' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Row$RowEntrySet$1$1' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/StandardTable.java' sourcefile='StandardTable.java' end='478'><Message>At StandardTable.java:[lines 468-478]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Row$RowEntrySet$1$1</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Row$RowEntrySet$1$1' name='equals' primary='true' signature='(Ljava/lang/Object;)Z'><SourceLine endBytecode='75' startBytecode='0' start='478' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Row$RowEntrySet$1$1' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/StandardTable.java' sourcefile='StandardTable.java' end='478'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Row$RowEntrySet$1$1.equals(Object)</Message></Method><SourceLine endBytecode='75' startBytecode='0' start='478' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Row$RowEntrySet$1$1' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/StandardTable.java' synthetic='true' sourcefile='StandardTable.java' end='478'><Message>At StandardTable.java:[line 478]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='a91db7b7bcb6576a4d45561cf1ed9c28' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedBiMap.inverse is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedBiMap' primary='true'><SourceLine start='1106' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedBiMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Synchronized.java' sourcefile='Synchronized.java' end='1145'><Message>At Synchronized.java:[lines 1106-1145]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedBiMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedBiMap' name='inverse' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guava/collect/$BiMap;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedBiMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Synchronized.java' sourcefile='Synchronized.java'><Message>In Synchronized.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedBiMap.inverse</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedBiMap' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Synchronized.java' synthetic='true' sourcefile='Synchronized.java'><Message>In Synchronized.java</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='ca241162d577422d2e7da86cf8109d17' instanceOccurrenceNum='0' priority='2' abbrev='IA' type='IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD' instanceOccurrenceMax='0'><ShortMessage>Ambiguous invocation of either an inherited or outer method</ShortMessage><LongMessage>Ambiguous invocation of either an outer or inherited method com.lexicalscope.fluentreflection.internal.guava.collect.$Collections2$TransformedCollection.size() in com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransposeTable$CellSet.equals(Object)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransposeTable$CellSet' primary='true'><SourceLine start='277' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransposeTable$CellSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Tables.java' sourcefile='Tables.java' end='314'><Message>At Tables.java:[lines 277-314]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransposeTable$CellSet</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransposeTable$CellSet' name='equals' primary='true' signature='(Ljava/lang/Object;)Z'><SourceLine endBytecode='159' startBytecode='0' start='282' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransposeTable$CellSet' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Tables.java' sourcefile='Tables.java' end='292'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransposeTable$CellSet.equals(Object)</Message></Method><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Collections2$TransformedCollection' name='size' role='METHOD_INHERITED' signature='()I'><SourceLine endBytecode='69' startBytecode='0' start='288' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Collections2$TransformedCollection' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Collections2.java' sourcefile='Collections2.java' end='288'></SourceLine><Message>Inherited method com.lexicalscope.fluentreflection.internal.guava.collect.$Collections2$TransformedCollection.size()</Message></Method><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransposeTable' name='size' role='METHOD_ALTERNATIVE_TARGET' signature='()I'><SourceLine endBytecode='69' startBytecode='0' start='228' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransposeTable' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Tables.java' sourcefile='Tables.java' end='228'></SourceLine><Message>Did you intend to invoke com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransposeTable.size()</Message></Method><SourceLine endBytecode='28' startBytecode='28' start='289' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransposeTable$CellSet' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/Tables.java' sourcefile='Tables.java' end='289'><Message>At Tables.java:[line 289]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='9ba774014ba7cf8d00a49fc3f50055cb' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_LOAD_OF_KNOWN_NULL_VALUE' instanceOccurrenceMax='0'><ShortMessage>Load of known null value</ShortMessage><LongMessage>Load of known null value in com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset.add(Object, int)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset' primary='true'><SourceLine start='52' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/TreeMultiset.java' sourcefile='TreeMultiset.java' end='264'><Message>At TreeMultiset.java:[lines 52-264]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset' name='add' primary='true' signature='(Ljava/lang/Object;I)I'><SourceLine endBytecode='12' startBytecode='0' start='168' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/TreeMultiset.java' sourcefile='TreeMultiset.java' end='171'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset.add(Object, int)</Message></Method><SourceLine endBytecode='8' startBytecode='8' start='169' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/TreeMultiset.java' sourcefile='TreeMultiset.java' end='169'><Message>At TreeMultiset.java:[line 169]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='5dbe27c8a3e9317a9a649936cd3a01ff' instanceOccurrenceNum='0' priority='1' abbrev='NP' type='NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE' instanceOccurrenceMax='0'><ShortMessage>Parameter must be nonnull but is marked as nullable</ShortMessage><LongMessage>comparator must be nonnull but is marked as nullable</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset' primary='true'><SourceLine start='52' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/TreeMultiset.java' sourcefile='TreeMultiset.java' end='264'><Message>At TreeMultiset.java:[lines 52-264]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset' name='&lt;init&gt;' primary='true' signature='(Ljava/util/Comparator;)V'><SourceLine endBytecode='111' startBytecode='0' start='132' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/TreeMultiset.java' sourcefile='TreeMultiset.java' end='134'></SourceLine><Message>In method new com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset(Comparator)</Message></Method><LocalVariable register='1' name='comparator' pc='0' role='LOCAL_VARIABLE_NAMED'><Message>Local variable named comparator</Message></LocalVariable><SourceLine endBytecode='111' startBytecode='0' start='132' classname='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset' sourcepath='com/lexicalscope/fluentreflection/internal/guava/collect/TreeMultiset.java' synthetic='true' sourcefile='TreeMultiset.java' end='134'><Message>At TreeMultiset.java:[lines 132-134]</Message></SourceLine></BugInstance><BugInstance category='EXPERIMENTAL' instanceHash='973fdfb4fe970907abb4938905c15027' instanceOccurrenceNum='0' priority='2' abbrev='OBL' type='OBL_UNSATISFIED_OBLIGATION' instanceOccurrenceMax='0'><ShortMessage>Method may fail to clean up stream or resource</ShortMessage><LongMessage>Method com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream.update(int) may fail to clean up java.io.OutputStream</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream' primary='true'><SourceLine start='41' classname='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream' sourcepath='com/lexicalscope/fluentreflection/internal/guava/io/FileBackedOutputStream.java' sourcefile='FileBackedOutputStream.java' end='209'><Message>At FileBackedOutputStream.java:[lines 41-209]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream' name='update' primary='true' signature='(I)V'><SourceLine endBytecode='200' startBytecode='0' start='193' classname='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream' sourcepath='com/lexicalscope/fluentreflection/internal/guava/io/FileBackedOutputStream.java' sourcefile='FileBackedOutputStream.java' end='209'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream.update(int)</Message></Method><Class classname='java.io.OutputStream' role='CLASS_REFTYPE'><SourceLine start='46' classname='java.io.OutputStream' sourcepath='java/io/OutputStream.java' sourcefile='OutputStream.java' end='152'><Message>At OutputStream.java:[lines 46-152]</Message></SourceLine><Message>Reference type java.io.OutputStream</Message></Class><Int value='1' role='INT_OBLIGATIONS_REMAINING'><Message>1 instances of obligation remaining</Message></Int><SourceLine endBytecode='46' startBytecode='46' start='200' classname='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/io/FileBackedOutputStream.java' role='SOURCE_LINE_OBLIGATION_CREATED' sourcefile='FileBackedOutputStream.java' end='200'><Message>Obligation to clean up resource created at FileBackedOutputStream.java:[line 200] is not discharged</Message></SourceLine><SourceLine endBytecode='50' startBytecode='50' start='201' classname='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream' sourcepath='com/lexicalscope/fluentreflection/internal/guava/io/FileBackedOutputStream.java' role='SOURCE_LINE_PATH_CONTINUES' sourcefile='FileBackedOutputStream.java' end='201'><Message>Path continues at FileBackedOutputStream.java:[line 201]</Message></SourceLine><String value='{OutputStream x 1}' role='STRING_REMAINING_OBLIGATIONS'><Message>Remaining obligations: {OutputStream x 1}</Message></String></BugInstance><BugInstance category='CORRECTNESS' instanceHash='1fcc7fa9dca2a9f12b9f6d2d6d972acb' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS' instanceOccurrenceMax='0'><ShortMessage>Method call passes null for nonnull parameter</ShortMessage><LongMessage>Method call in com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream$1.finalize() passes null for nonnull parameter of Throwable.printStackTrace(PrintStream)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream$1' primary='true'><SourceLine start='97' classname='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream$1' sourcepath='com/lexicalscope/fluentreflection/internal/guava/io/FileBackedOutputStream.java' sourcefile='FileBackedOutputStream.java' end='109'><Message>At FileBackedOutputStream.java:[lines 97-109]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream$1</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream$1' name='finalize' primary='true' signature='()V'><SourceLine endBytecode='94' startBytecode='0' start='105' classname='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream$1' sourcepath='com/lexicalscope/fluentreflection/internal/guava/io/FileBackedOutputStream.java' sourcefile='FileBackedOutputStream.java' end='109'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream$1.finalize()</Message></Method><Method isStatic='false' classname='java.lang.Throwable' name='printStackTrace' role='METHOD_CALLED' signature='(Ljava/io/PrintStream;)V'><SourceLine endBytecode='224' startBytecode='0' start='477' classname='java.lang.Throwable' sourcepath='java/lang/Throwable.java' sourcefile='Throwable.java' end='487'></SourceLine><Message>Called method Throwable.printStackTrace(PrintStream)</Message></Method><SourceLine endBytecode='15' startBytecode='15' start='107' classname='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream$1' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/io/FileBackedOutputStream.java' sourcefile='FileBackedOutputStream.java' end='107'><Message>At FileBackedOutputStream.java:[line 107]</Message></SourceLine><Field isStatic='true' classname='java.lang.System' name='err' role='FIELD_VALUE_OF' signature='Ljava/io/PrintStream;'><SourceLine classname='java.lang.System' sourcepath='java/lang/System.java' sourcefile='System.java'><Message>In System.java</Message></SourceLine><Message>Value loaded from field java.lang.System.err</Message></Field><Int value='1' role='INT_NULL_ARG'><Message>Argument 1 is definitely null but must not be null</Message></Int><Method isStatic='false' classname='java.lang.Throwable' name='printStackTrace' role='METHOD_DANGEROUS_TARGET_ACTUAL_GUARANTEED_NULL' signature='(Ljava/io/PrintStream;)V'><SourceLine endBytecode='224' startBytecode='0' start='477' classname='java.lang.Throwable' sourcepath='java/lang/Throwable.java' sourcefile='Throwable.java' end='487'></SourceLine><Message>Definite null passed to dangerous method call target Throwable.printStackTrace(PrintStream)</Message></Method><Property name='edu.umd.cs.findbugs.detect.NullArgumentWarningProperty.ALL_DANGEROUS_TARGETS' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.NullArgumentWarningProperty.ARG_DEFINITELY_NULL' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.NullArgumentWarningProperty.MONOMORPHIC_CALL_SITE' value='true'></Property><Property name='edu.umd.cs.findbugs.detect.NullArgumentWarningProperty.ACTUAL_PARAMETER_GUARANTEED_NULL' value='true'></Property></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='566ef881d7694f80f71cb265677b393d' instanceOccurrenceNum='0' priority='2' abbrev='RV' type='RV_RETURN_VALUE_IGNORED_BAD_PRACTICE' instanceOccurrenceMax='0'><ShortMessage>Method ignores exceptional return value</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.io.$Files.createParentDirs(File) ignores exceptional return value of java.io.File.mkdirs()</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.io.$Files' primary='true'><SourceLine start='57' classname='com.lexicalscope.fluentreflection.internal.guava.io.$Files' sourcepath='com/lexicalscope/fluentreflection/internal/guava/io/Files.java' sourcefile='Files.java' end='742'><Message>At Files.java:[lines 57-742]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.io.$Files</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.guava.io.$Files' name='createParentDirs' primary='true' signature='(Ljava/io/File;)V'><SourceLine endBytecode='129' startBytecode='0' start='450' classname='com.lexicalscope.fluentreflection.internal.guava.io.$Files' sourcepath='com/lexicalscope/fluentreflection/internal/guava/io/Files.java' sourcefile='Files.java' end='465'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.io.$Files.createParentDirs(File)</Message></Method><Method isStatic='false' classname='java.io.File' name='mkdirs' role='METHOD_CALLED' signature='()Z'><SourceLine endBytecode='186' startBytecode='0' start='1195' classname='java.io.File' sourcepath='java/io/File.java' sourcefile='File.java' end='1209'></SourceLine><Message>Called method java.io.File.mkdirs()</Message></Method><SourceLine endBytecode='14' startBytecode='14' start='461' classname='com.lexicalscope.fluentreflection.internal.guava.io.$Files' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/io/Files.java' sourcefile='Files.java' end='461'><Message>At Files.java:[line 461]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='7db8119a007b3f899b59076b64162ab7' instanceOccurrenceNum='0' priority='2' abbrev='BC' type='BC_UNCONFIRMED_CAST' instanceOccurrenceMax='0'><ShortMessage>Unchecked/unconfirmed cast</ShortMessage><LongMessage>Unchecked/unconfirmed cast from java.net.InetAddress to java.net.Inet6Address in com.lexicalscope.fluentreflection.internal.guava.net.$InetAddresses.getCoercedIPv4Address(InetAddress)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.net.$InetAddresses' primary='true'><SourceLine start='119' classname='com.lexicalscope.fluentreflection.internal.guava.net.$InetAddresses' sourcepath='com/lexicalscope/fluentreflection/internal/guava/net/InetAddresses.java' sourcefile='InetAddresses.java' end='1122'><Message>At InetAddresses.java:[lines 119-1122]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.net.$InetAddresses</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.guava.net.$InetAddresses' name='getCoercedIPv4Address' primary='true' signature='(Ljava/net/InetAddress;)Ljava/net/Inet4Address;'><SourceLine endBytecode='78' startBytecode='0' start='942' classname='com.lexicalscope.fluentreflection.internal.guava.net.$InetAddresses' sourcepath='com/lexicalscope/fluentreflection/internal/guava/net/InetAddresses.java' sourcefile='InetAddresses.java' end='983'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.net.$InetAddresses.getCoercedIPv4Address(InetAddress)</Message></Method><Type descriptor='Ljava/net/InetAddress;' role='TYPE_FOUND'><SourceLine start='182' classname='java.net.InetAddress' sourcepath='java/net/InetAddress.java' sourcefile='InetAddress.java' end='1511'><Message>At InetAddress.java:[lines 182-1511]</Message></SourceLine><Message>Actual type java.net.InetAddress</Message></Type><Type descriptor='Ljava/net/Inet6Address;' role='TYPE_EXPECTED'><SourceLine start='168' classname='java.net.Inet6Address' sourcepath='java/net/Inet6Address.java' sourcefile='Inet6Address.java' end='760'><Message>At Inet6Address.java:[lines 168-760]</Message></SourceLine><Message>Expected java.net.Inet6Address</Message></Type><LocalVariable register='0' name='ip' pc='75' role='LOCAL_VARIABLE_VALUE_OF'><Message>Value loaded from ip</Message></LocalVariable><SourceLine endBytecode='76' startBytecode='76' start='961' classname='com.lexicalscope.fluentreflection.internal.guava.net.$InetAddresses' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/net/InetAddresses.java' sourcefile='InetAddresses.java' end='961'><Message>At InetAddresses.java:[line 961]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='45a3ddddd2be6122f30df200ca24e835' instanceOccurrenceNum='0' priority='2' abbrev='DE' type='DE_MIGHT_IGNORE' instanceOccurrenceMax='0'><ShortMessage>Method might ignore exception</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractListeningExecutorService.invokeAll(Collection, long, TimeUnit) might ignore java.util.concurrent.ExecutionException</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractListeningExecutorService' primary='true'><SourceLine start='40' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractListeningExecutorService' sourcepath='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/AbstractListeningExecutorService.java' sourcefile='AbstractListeningExecutorService.java' end='230'><Message>At AbstractListeningExecutorService.java:[lines 40-230]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractListeningExecutorService</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractListeningExecutorService' name='invokeAll' primary='true' signature='(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;'><SourceLine endBytecode='1212' startBytecode='0' start='182' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractListeningExecutorService' sourcepath='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/AbstractListeningExecutorService.java' sourcefile='AbstractListeningExecutorService.java' end='230'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractListeningExecutorService.invokeAll(Collection, long, TimeUnit)</Message></Method><Class classname='java.util.concurrent.ExecutionException' role='CLASS_EXCEPTION'><SourceLine start='55' classname='java.util.concurrent.ExecutionException' sourcepath='java/util/concurrent/ExecutionException.java' sourcefile='ExecutionException.java' end='93'><Message>At ExecutionException.java:[lines 55-93]</Message></SourceLine><Message>Exception class java.util.concurrent.ExecutionException</Message></Class><SourceLine endBytecode='338' startBytecode='338' start='216' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractListeningExecutorService' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/AbstractListeningExecutorService.java' sourcefile='AbstractListeningExecutorService.java' end='216'><Message>At AbstractListeningExecutorService.java:[line 216]</Message></SourceLine></BugInstance><BugInstance category='MT_CORRECTNESS' instanceHash='b32aca57ea34f041d8cb23dd52ca5627' instanceOccurrenceNum='0' priority='1' abbrev='UL' type='UL_UNRELEASED_LOCK' instanceOccurrenceMax='0'><ShortMessage>Method does not release lock on all paths</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor.enterIf($Monitor$Guard) does not release lock on all paths</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor' primary='true'><SourceLine start='197' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor' sourcepath='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/Monitor.java' sourcefile='Monitor.java' end='966'><Message>At Monitor.java:[lines 197-966]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor' name='enterIf' primary='true' signature='(Lcom/lexicalscope/fluentreflection/internal/guava/util/concurrent/$Monitor$Guard;)Z'><SourceLine endBytecode='30' startBytecode='0' start='473' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor' sourcepath='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/Monitor.java' sourcefile='Monitor.java' end='489'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor.enterIf($Monitor$Guard)</Message></Method><SourceLine endBytecode='22' startBytecode='22' start='477' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/Monitor.java' sourcefile='Monitor.java' end='477'><Message>At Monitor.java:[line 477]</Message></SourceLine></BugInstance><BugInstance category='MT_CORRECTNESS' instanceHash='7db0dacef9460de838bd14aae567109a' instanceOccurrenceNum='0' priority='1' abbrev='UL' type='UL_UNRELEASED_LOCK' instanceOccurrenceMax='0'><ShortMessage>Method does not release lock on all paths</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor.enterWhenUninterruptibly($Monitor$Guard) does not release lock on all paths</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor' primary='true'><SourceLine start='197' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor' sourcepath='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/Monitor.java' sourcefile='Monitor.java' end='966'><Message>At Monitor.java:[lines 197-966]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor' name='enterWhenUninterruptibly' primary='true' signature='(Lcom/lexicalscope/fluentreflection/internal/guava/util/concurrent/$Monitor$Guard;)V'><SourceLine endBytecode='27' startBytecode='0' start='369' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor' sourcepath='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/Monitor.java' sourcefile='Monitor.java' end='381'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor.enterWhenUninterruptibly($Monitor$Guard)</Message></Method><SourceLine endBytecode='27' startBytecode='27' start='374' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/Monitor.java' sourcefile='Monitor.java' end='374'><Message>At Monitor.java:[line 374]</Message></SourceLine></BugInstance><BugInstance category='CORRECTNESS' instanceHash='b67c3f4a5c823a469fd42430f4a96db8' instanceOccurrenceNum='0' priority='1' abbrev='RV' type='RV_RETURN_VALUE_IGNORED' instanceOccurrenceMax='0'><ShortMessage>Method ignores return value</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ThreadFactoryBuilder.setNameFormat(String) ignores return value of String.format(String, Object[])</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ThreadFactoryBuilder' primary='true'><SourceLine start='46' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ThreadFactoryBuilder' sourcepath='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ThreadFactoryBuilder.java' sourcefile='ThreadFactoryBuilder.java' end='157'><Message>At ThreadFactoryBuilder.java:[lines 46-157]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ThreadFactoryBuilder</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ThreadFactoryBuilder' name='setNameFormat' primary='true' signature='(Ljava/lang/String;)Lcom/lexicalscope/fluentreflection/internal/guava/util/concurrent/$ThreadFactoryBuilder;'><SourceLine endBytecode='82' startBytecode='0' start='68' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ThreadFactoryBuilder' sourcepath='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ThreadFactoryBuilder.java' sourcefile='ThreadFactoryBuilder.java' end='70'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ThreadFactoryBuilder.setNameFormat(String)</Message></Method><Method isStatic='true' classname='java.lang.String' name='format' role='METHOD_CALLED' signature='(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;'><SourceLine endBytecode='67' startBytecode='0' start='2781' classname='java.lang.String' sourcepath='java/lang/String.java' sourcefile='String.java' end='2781'></SourceLine><Message>Called method String.format(String, Object[])</Message></Method><SourceLine endBytecode='12' startBytecode='12' start='68' classname='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ThreadFactoryBuilder' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ThreadFactoryBuilder.java' sourcefile='ThreadFactoryBuilder.java' end='68'><Message>At ThreadFactoryBuilder.java:[line 68]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='7687b7734e7087a45db9cdc6410c8117' instanceOccurrenceNum='0' priority='2' abbrev='DP' type='DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED' instanceOccurrenceMax='0'><ShortMessage>Classloaders should only be created inside doPrivileged block</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$SystemBridgeHolder.&lt;static initializer&gt;() creates a com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$BridgeClassLoader classloader, which should be performed within a doPrivileged block</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$SystemBridgeHolder' primary='true'><SourceLine start='69' classname='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$SystemBridgeHolder' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/BytecodeGen.java' sourcefile='BytecodeGen.java' end='70'><Message>At BytecodeGen.java:[lines 69-70]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$SystemBridgeHolder</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$SystemBridgeHolder' name='&lt;clinit&gt;' primary='true' signature='()V'><SourceLine endBytecode='34' startBytecode='0' start='70' classname='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$SystemBridgeHolder' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/BytecodeGen.java' sourcefile='BytecodeGen.java' end='70'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$SystemBridgeHolder.&lt;static initializer&gt;()</Message></Method><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$BridgeClassLoader'><SourceLine start='296' classname='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$BridgeClassLoader' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/BytecodeGen.java' sourcefile='BytecodeGen.java' end='334'><Message>At BytecodeGen.java:[lines 296-334]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$BridgeClassLoader</Message></Class><SourceLine endBytecode='0' startBytecode='0' start='70' classname='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$SystemBridgeHolder' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/BytecodeGen.java' sourcefile='BytecodeGen.java' end='70'><Message>At BytecodeGen.java:[line 70]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='815ba1c5556d9fb89ffa8cb971971e9f' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$ComputingImpl defines non-transient non-serializable instance field computer</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$ComputingImpl' primary='true'><SourceLine start='1986' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$ComputingImpl' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='2074'><Message>At CustomConcurrentHashMap.java:[lines 1986-2074]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$ComputingImpl</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$ComputingImpl' name='computer' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guice/internal/util/$$Function;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$ComputingImpl' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$ComputingImpl.computer</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$ComputingImpl' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java'><Message>In CustomConcurrentHashMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='780ff272e2f2a8cff6e5bf344d0c2951' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_INNER_CLASS' instanceOccurrenceMax='0'><ShortMessage>Serializable inner class</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$InternalsImpl is serializable and an inner class</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$InternalsImpl' primary='true'><SourceLine start='632' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$InternalsImpl' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/CustomConcurrentHashMap.java' sourcefile='CustomConcurrentHashMap.java' end='657'><Message>At CustomConcurrentHashMap.java:[lines 632-657]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$InternalsImpl</Message></Class><SourceLine start='632' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$InternalsImpl' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/CustomConcurrentHashMap.java' synthetic='true' sourcefile='CustomConcurrentHashMap.java' end='657'><Message>At CustomConcurrentHashMap.java:[lines 632-657]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='97f42cd9049e09ccca28dc0dcd284459' instanceOccurrenceNum='0' priority='2' abbrev='DP' type='DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED' instanceOccurrenceMax='0'><ShortMessage>Classloaders should only be created inside doPrivileged block</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableReferenceQueue$DecoupledLoader.newLoader(URL) creates a java.net.URLClassLoader classloader, which should be performed within a doPrivileged block</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableReferenceQueue$DecoupledLoader' primary='true'><SourceLine start='230' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableReferenceQueue$DecoupledLoader' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/FinalizableReferenceQueue.java' sourcefile='FinalizableReferenceQueue.java' end='284'><Message>At FinalizableReferenceQueue.java:[lines 230-284]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableReferenceQueue$DecoupledLoader</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableReferenceQueue$DecoupledLoader' name='newLoader' primary='true' signature='(Ljava/net/URL;)Ljava/net/URLClassLoader;'><SourceLine endBytecode='67' startBytecode='0' start='284' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableReferenceQueue$DecoupledLoader' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/FinalizableReferenceQueue.java' sourcefile='FinalizableReferenceQueue.java' end='284'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableReferenceQueue$DecoupledLoader.newLoader(URL)</Message></Method><Class classname='java.net.URLClassLoader'><SourceLine start='73' classname='java.net.URLClassLoader' sourcepath='java/net/URLClassLoader.java' sourcefile='URLClassLoader.java' end='590'><Message>At URLClassLoader.java:[lines 73-590]</Message></SourceLine><Message>In class java.net.URLClassLoader</Message></Class><SourceLine endBytecode='0' startBytecode='0' start='284' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableReferenceQueue$DecoupledLoader' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/FinalizableReferenceQueue.java' sourcefile='FinalizableReferenceQueue.java' end='284'><Message>At FinalizableReferenceQueue.java:[line 284]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='d42cd0456456a67cd60abdc1599fe142' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' primary='true'><SourceLine start='559' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java' end='744'><Message>At ImmutableMap.java:[lines 559-744]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap</Message></Class><SourceLine start='559' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' synthetic='true' sourcefile='ImmutableMap.java' end='744'><Message>At ImmutableMap.java:[lines 559-744]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='953967028722e9d81ae1497fbfb0c52a' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap.entries is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' primary='true'><SourceLine start='559' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java' end='744'><Message>At ImmutableMap.java:[lines 559-744]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' name='entries' primary='true' signature='[Ljava/util/Map$Entry;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java'><Message>In ImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap.entries</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' synthetic='true' sourcefile='ImmutableMap.java'><Message>In ImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='ca7f9ca4a994af02458d473a034a5fc0' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap.keySetHashCode is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' primary='true'><SourceLine start='559' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java' end='744'><Message>At ImmutableMap.java:[lines 559-744]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' name='keySetHashCode' primary='true' signature='I'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java'><Message>In ImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap.keySetHashCode</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' synthetic='true' sourcefile='ImmutableMap.java'><Message>In ImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='a54454b58f7ad4c15c89f24640abdf94' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap.mask is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' primary='true'><SourceLine start='559' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java' end='744'><Message>At ImmutableMap.java:[lines 559-744]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' name='mask' primary='true' signature='I'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java'><Message>In ImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap.mask</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' synthetic='true' sourcefile='ImmutableMap.java'><Message>In ImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='72b7783685c2ff3f8d23a0cee75f7f03' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap.table is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' primary='true'><SourceLine start='559' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java' end='744'><Message>At ImmutableMap.java:[lines 559-744]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' name='table' primary='true' signature='[Ljava/lang/Object;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java'><Message>In ImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap.table</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' synthetic='true' sourcefile='ImmutableMap.java'><Message>In ImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='8b92a4ed6a8508e5b874801ac48f0e80' instanceOccurrenceNum='0' priority='2' abbrev='SnVI' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' primary='true'><SourceLine start='440' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java' end='549'><Message>At ImmutableMap.java:[lines 440-549]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap</Message></Class><SourceLine start='440' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' synthetic='true' sourcefile='ImmutableMap.java' end='549'><Message>At ImmutableMap.java:[lines 440-549]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='3a32cd210a7f72c60317c886212f1f06' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap.entry is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' primary='true'><SourceLine start='440' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java' end='549'><Message>At ImmutableMap.java:[lines 440-549]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' name='entry' primary='true' signature='Ljava/util/Map$Entry;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java'><Message>In ImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap.entry</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' synthetic='true' sourcefile='ImmutableMap.java'><Message>In ImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='5ffac60fe6890ed06256108293b4986' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap.singleKey is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' primary='true'><SourceLine start='440' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java' end='549'><Message>At ImmutableMap.java:[lines 440-549]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' name='singleKey' primary='true' signature='Ljava/lang/Object;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java'><Message>In ImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap.singleKey</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' synthetic='true' sourcefile='ImmutableMap.java'><Message>In ImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='2f2406d556fbcffe691776b64ff97f34' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED' instanceOccurrenceMax='0'><ShortMessage>Transient field that isn't set by deserialization. </ShortMessage><LongMessage>The field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap.singleValue is transient but isn't set by deserialization</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' primary='true'><SourceLine start='440' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java' end='549'><Message>At ImmutableMap.java:[lines 440-549]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' name='singleValue' primary='true' signature='Ljava/lang/Object;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' sourcefile='ImmutableMap.java'><Message>In ImmutableMap.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap.singleValue</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' synthetic='true' sourcefile='ImmutableMap.java'><Message>In ImmutableMap.java</Message></SourceLine></BugInstance><BugInstance category='MT_CORRECTNESS' instanceHash='f7e86f3b2a830b23e27054806aa5f57a' instanceOccurrenceNum='0' priority='2' abbrev='NN' type='NN_NAKED_NOTIFY' instanceOccurrenceMax='0'><ShortMessage>Naked notify</ShortMessage><LongMessage>Naked notify in com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$StrategyImpl.setValueReference($$MapMaker$ReferenceEntry, $$MapMaker$ValueReference)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$StrategyImpl' primary='true'><SourceLine start='419' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$StrategyImpl' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/MapMaker.java' sourcefile='MapMaker.java' end='703'><Message>At MapMaker.java:[lines 419-703]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$StrategyImpl</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$StrategyImpl' name='setValueReference' primary='true' signature='(Lcom/lexicalscope/fluentreflection/internal/guice/internal/util/$$MapMaker$ReferenceEntry;Lcom/lexicalscope/fluentreflection/internal/guice/internal/util/$$MapMaker$ValueReference;)V'><SourceLine endBytecode='202' startBytecode='0' start='574' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$StrategyImpl' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/MapMaker.java' sourcefile='MapMaker.java' end='581'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$StrategyImpl.setValueReference($$MapMaker$ReferenceEntry, $$MapMaker$ValueReference)</Message></Method><SourceLine endBytecode='35' startBytecode='35' start='578' classname='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$StrategyImpl' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guice/internal/util/MapMaker.java' sourcefile='MapMaker.java' end='578'><Message>At MapMaker.java:[line 578]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='5b416ac07f4303bbdd5ff077413043d6' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher defines non-transient non-serializable instance field a</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher' primary='true'><SourceLine start='39' classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/AbstractMatcher.java' sourcefile='AbstractMatcher.java' end='59'><Message>At AbstractMatcher.java:[lines 39-59]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher' name='a' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guice/matcher/$Matcher;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/AbstractMatcher.java' sourcefile='AbstractMatcher.java'><Message>In AbstractMatcher.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher.a</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/AbstractMatcher.java' synthetic='true' sourcefile='AbstractMatcher.java'><Message>In AbstractMatcher.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='c776478850c2fa8c249fb97f77cc456b' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher defines non-transient non-serializable instance field b</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher' primary='true'><SourceLine start='39' classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/AbstractMatcher.java' sourcefile='AbstractMatcher.java' end='59'><Message>At AbstractMatcher.java:[lines 39-59]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher' name='b' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guice/matcher/$Matcher;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/AbstractMatcher.java' sourcefile='AbstractMatcher.java'><Message>In AbstractMatcher.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher.b</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/AbstractMatcher.java' synthetic='true' sourcefile='AbstractMatcher.java'><Message>In AbstractMatcher.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='30dfe0287c8f3bd20c293ac68e2137d7' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher defines non-transient non-serializable instance field a</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher' primary='true'><SourceLine start='68' classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/AbstractMatcher.java' sourcefile='AbstractMatcher.java' end='88'><Message>At AbstractMatcher.java:[lines 68-88]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher' name='a' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guice/matcher/$Matcher;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/AbstractMatcher.java' sourcefile='AbstractMatcher.java'><Message>In AbstractMatcher.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher.a</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/AbstractMatcher.java' synthetic='true' sourcefile='AbstractMatcher.java'><Message>In AbstractMatcher.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='aebb08854c65505d653d6abd68891b15' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher defines non-transient non-serializable instance field b</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher' primary='true'><SourceLine start='68' classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/AbstractMatcher.java' sourcefile='AbstractMatcher.java' end='88'><Message>At AbstractMatcher.java:[lines 68-88]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher' name='b' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guice/matcher/$Matcher;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/AbstractMatcher.java' sourcefile='AbstractMatcher.java'><Message>In AbstractMatcher.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher.b</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/AbstractMatcher.java' synthetic='true' sourcefile='AbstractMatcher.java'><Message>In AbstractMatcher.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='24121230f201d24ac7cecf0a82dd61d8' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Not defines non-transient non-serializable instance field delegate</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Not' primary='true'><SourceLine start='68' classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Not' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/Matchers.java' sourcefile='Matchers.java' end='89'><Message>At Matchers.java:[lines 68-89]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Not</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Not' name='delegate' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guice/matcher/$Matcher;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Not' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/Matchers.java' sourcefile='Matchers.java'><Message>In Matchers.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Not.delegate</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Not' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/Matchers.java' synthetic='true' sourcefile='Matchers.java'><Message>In Matchers.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='d154049edb218b7fd2cc9d5ed1392b73' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Returns defines non-transient non-serializable instance field returnType</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Returns' primary='true'><SourceLine start='373' classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Returns' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/Matchers.java' sourcefile='Matchers.java' end='394'><Message>At Matchers.java:[lines 373-394]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Returns</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Returns' name='returnType' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/guice/matcher/$Matcher;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Returns' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/Matchers.java' sourcefile='Matchers.java'><Message>In Matchers.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Returns.returnType</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Returns' sourcepath='com/lexicalscope/fluentreflection/internal/guice/matcher/Matchers.java' synthetic='true' sourcefile='Matchers.java'><Message>In Matchers.java</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='1f6939013dea3d008d31f95a5537831c' instanceOccurrenceNum='0' priority='1' abbrev='NS' type='NS_DANGEROUS_NON_SHORT_CIRCUIT' instanceOccurrenceMax='0'><ShortMessage>Potentially dangerous use of non-short-circuit logic</ShortMessage><LongMessage>Potentially dangerous use of non-short-circuit logic in com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint.getInjectionPoints($TypeLiteral, boolean, $Errors)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint' primary='true'><SourceLine start='58' classname='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint' sourcepath='com/lexicalscope/fluentreflection/internal/guice/spi/InjectionPoint.java' sourcefile='InjectionPoint.java' end='774'><Message>At InjectionPoint.java:[lines 58-774]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint' name='getInjectionPoints' primary='true' signature='(Lcom/lexicalscope/fluentreflection/internal/guice/$TypeLiteral;ZLcom/lexicalscope/fluentreflection/internal/guice/internal/$Errors;)Ljava/util/Set;'><SourceLine endBytecode='1065' startBytecode='0' start='632' classname='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint' sourcepath='com/lexicalscope/fluentreflection/internal/guice/spi/InjectionPoint.java' sourcefile='InjectionPoint.java' end='730'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint.getInjectionPoints($TypeLiteral, boolean, $Errors)</Message></Method><SourceLine endBytecode='288' startBytecode='288' start='668' classname='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/guice/spi/InjectionPoint.java' sourcefile='InjectionPoint.java' end='668'><Message>At InjectionPoint.java:[line 668]</Message></SourceLine></BugInstance><BugInstance category='CORRECTNESS' instanceHash='f5f8187fcb6747d937fcb31feed2f0eb' instanceOccurrenceNum='0' priority='2' abbrev='UMAC' type='UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS' instanceOccurrenceMax='0'><ShortMessage>Uncallable method defined in anonymous class</ShortMessage><LongMessage>Uncallable method com.lexicalscope.fluentreflection.internal.guice.util.$Providers$3.initialize($Injector) defined in anonymous class</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.guice.util.$Providers$3' primary='true'><SourceLine start='97' classname='com.lexicalscope.fluentreflection.internal.guice.util.$Providers$3' sourcepath='com/lexicalscope/fluentreflection/internal/guice/util/Providers.java' sourcefile='Providers.java' end='113'><Message>At Providers.java:[lines 97-113]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.guice.util.$Providers$3</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.guice.util.$Providers$3' name='initialize' primary='true' signature='(Lcom/lexicalscope/fluentreflection/internal/guice/$Injector;)V'><SourceLine endBytecode='66' startBytecode='0' start='101' classname='com.lexicalscope.fluentreflection.internal.guice.util.$Providers$3' sourcepath='com/lexicalscope/fluentreflection/internal/guice/util/Providers.java' sourcefile='Providers.java' end='102'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.guice.util.$Providers$3.initialize($Injector)</Message></Method><Class classname='com.lexicalscope.fluentreflection.internal.guice.spi.$ProviderWithDependencies' role='CLASS_IMPLEMENTED_INTERFACE'><SourceLine classname='com.lexicalscope.fluentreflection.internal.guice.spi.$ProviderWithDependencies' sourcepath='com/lexicalscope/fluentreflection/internal/guice/spi/ProviderWithDependencies.java' sourcefile='ProviderWithDependencies.java'><Message>In ProviderWithDependencies.java</Message></SourceLine><Message>implements interface com.lexicalscope.fluentreflection.internal.guice.spi.$ProviderWithDependencies</Message></Class><SourceLine endBytecode='66' startBytecode='0' start='101' classname='com.lexicalscope.fluentreflection.internal.guice.util.$Providers$3' sourcepath='com/lexicalscope/fluentreflection/internal/guice/util/Providers.java' synthetic='true' sourcefile='Providers.java' end='102'><Message>At Providers.java:[lines 101-102]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='12bd083ea718e9a35b60d571b8d0dc42' instanceOccurrenceNum='0' priority='1' abbrev='CN' type='CN_IDIOM_NO_SUPER_CALL' instanceOccurrenceMax='0'><ShortMessage>clone method does not call super.clone()</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaCollection.clone() does not call super.clone()</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaCollection' primary='true'><SourceLine start='19' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaCollection' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaCollection.java' sourcefile='LambdaCollection.java' end='213'><Message>At LambdaCollection.java:[lines 19-213]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaCollection</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaCollection' name='clone' primary='true' signature='()Ljava/lang/Object;'><SourceLine endBytecode='64' startBytecode='0' start='19' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaCollection' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaCollection.java' sourcefile='LambdaCollection.java' end='19'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaCollection.clone()</Message></Method><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaList' role='CLASS_SUBCLASS'><SourceLine start='18' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaList' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaList.java' sourcefile='LambdaList.java' end='178'><Message>At LambdaList.java:[lines 18-178]</Message></SourceLine><Message>has subclass com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaList</Message></Class><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaSet' role='CLASS_SUBCLASS'><SourceLine start='16' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaSet' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaSet.java' sourcefile='LambdaSet.java' end='52'><Message>At LambdaSet.java:[lines 16-52]</Message></SourceLine><Message>has subclass com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaSet</Message></Class><SourceLine endBytecode='64' startBytecode='0' start='19' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaCollection' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaCollection.java' synthetic='true' sourcefile='LambdaCollection.java' end='19'><Message>At LambdaCollection.java:[line 19]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='e965b65a53e4b9d287f4afae296737d6' instanceOccurrenceNum='0' priority='1' abbrev='CN' type='CN_IDIOM_NO_SUPER_CALL' instanceOccurrenceMax='0'><ShortMessage>clone method does not call super.clone()</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaIterable.clone() does not call super.clone()</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaIterable' primary='true'><SourceLine start='23' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaIterable' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaIterable.java' sourcefile='LambdaIterable.java' end='237'><Message>At LambdaIterable.java:[lines 23-237]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaIterable</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaIterable' name='clone' primary='true' signature='()Ljava/lang/Object;'><SourceLine endBytecode='64' startBytecode='0' start='23' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaIterable' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaIterable.java' sourcefile='LambdaIterable.java' end='23'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaIterable.clone()</Message></Method><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaCollection' role='CLASS_SUBCLASS'><SourceLine start='19' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaCollection' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaCollection.java' sourcefile='LambdaCollection.java' end='213'><Message>At LambdaCollection.java:[lines 19-213]</Message></SourceLine><Message>has subclass com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaCollection</Message></Class><SourceLine endBytecode='64' startBytecode='0' start='23' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaIterable' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaIterable.java' synthetic='true' sourcefile='LambdaIterable.java' end='23'><Message>At LambdaIterable.java:[line 23]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='c5b2787852a2981ca04c6d551aad8e5b' instanceOccurrenceNum='0' priority='2' abbrev='CN' type='CN_IDIOM_NO_SUPER_CALL' instanceOccurrenceMax='0'><ShortMessage>clone method does not call super.clone()</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaList.clone() does not call super.clone()</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaList' primary='true'><SourceLine start='18' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaList' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaList.java' sourcefile='LambdaList.java' end='178'><Message>At LambdaList.java:[lines 18-178]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaList</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaList' name='clone' primary='true' signature='()Ljava/lang/Object;'><SourceLine endBytecode='64' startBytecode='0' start='18' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaList' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaList.java' sourcefile='LambdaList.java' end='18'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaList.clone()</Message></Method><SourceLine endBytecode='64' startBytecode='0' start='18' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaList' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaList.java' synthetic='true' sourcefile='LambdaList.java' end='18'><Message>At LambdaList.java:[line 18]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='17729fdba8f1f6873ecf99821d89f949' instanceOccurrenceNum='0' priority='2' abbrev='CN' type='CN_IDIOM_NO_SUPER_CALL' instanceOccurrenceMax='0'><ShortMessage>clone method does not call super.clone()</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaMap.clone() does not call super.clone()</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaMap' primary='true'><SourceLine start='21' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaMap' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaMap.java' sourcefile='LambdaMap.java' end='218'><Message>At LambdaMap.java:[lines 21-218]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaMap</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaMap' name='clone' primary='true' signature='()Ljava/lang/Object;'><SourceLine endBytecode='64' startBytecode='0' start='21' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaMap' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaMap.java' sourcefile='LambdaMap.java' end='21'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaMap.clone()</Message></Method><SourceLine endBytecode='64' startBytecode='0' start='21' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaMap' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaMap.java' synthetic='true' sourcefile='LambdaMap.java' end='21'><Message>At LambdaMap.java:[line 21]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='3d3dada07e99278cd90585a54874b4ea' instanceOccurrenceNum='0' priority='2' abbrev='CN' type='CN_IDIOM_NO_SUPER_CALL' instanceOccurrenceMax='0'><ShortMessage>clone method does not call super.clone()</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaSet.clone() does not call super.clone()</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaSet' primary='true'><SourceLine start='16' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaSet' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaSet.java' sourcefile='LambdaSet.java' end='52'><Message>At LambdaSet.java:[lines 16-52]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaSet</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaSet' name='clone' primary='true' signature='()Ljava/lang/Object;'><SourceLine endBytecode='64' startBytecode='0' start='16' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaSet' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaSet.java' sourcefile='LambdaSet.java' end='16'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaSet.clone()</Message></Method><SourceLine endBytecode='64' startBytecode='0' start='16' classname='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaSet' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaSet.java' synthetic='true' sourcefile='LambdaSet.java' end='16'><Message>At LambdaSet.java:[line 16]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='545fb83e40a06ce99a9e6b5c0827f2ee' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE' instanceOccurrenceMax='0'><ShortMessage>Possible null pointer dereference due to return value of called method</ShortMessage><LongMessage>Possible null pointer dereference in com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$ProxyArgument.invoke(Object, Method, Object[]) due to return value of called method</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$ProxyArgument' primary='true'><SourceLine start='23' classname='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$ProxyArgument' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/function/argument/ProxyArgument.java' sourcefile='ProxyArgument.java' end='36'><Message>At ProxyArgument.java:[lines 23-36]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$ProxyArgument</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$ProxyArgument' name='invoke' primary='true' signature='(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;'><SourceLine endBytecode='166' startBytecode='0' start='32' classname='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$ProxyArgument' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/function/argument/ProxyArgument.java' sourcefile='ProxyArgument.java' end='36'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$ProxyArgument.invoke(Object, Method, Object[])</Message></Method><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$InvocationSequence' name='&lt;init&gt;' role='METHOD_CALLED' signature='(Lcom/lexicalscope/fluentreflection/internal/lamdaj/function/argument/$InvocationSequence;Lcom/lexicalscope/fluentreflection/internal/lamdaj/function/argument/$Invocation;)V'><SourceLine endBytecode='81' startBytecode='0' start='31' classname='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$InvocationSequence' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/function/argument/InvocationSequence.java' sourcefile='InvocationSequence.java' end='33'></SourceLine><Message>Called method new com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$InvocationSequence($InvocationSequence, $Invocation)</Message></Method><Int value='1' role='INT_MAYBE_NULL_ARG'><Message>Argument 1 might be null but must not be null</Message></Int><LocalVariable register='-1' name='?' pc='80' role='LOCAL_VARIABLE_UNKNOWN'><Message>Local variable stored in JVM register ?</Message></LocalVariable><SourceLine endBytecode='80' startBytecode='80' start='36' classname='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$ProxyArgument' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/function/argument/ProxyArgument.java' role='SOURCE_LINE_INVOKED' sourcefile='ProxyArgument.java' end='36'><Message>Method invoked at ProxyArgument.java:[line 36]</Message></SourceLine><SourceLine endBytecode='80' startBytecode='80' start='36' classname='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$ProxyArgument' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/function/argument/ProxyArgument.java' role='SOURCE_LINE_KNOWN_NULL' sourcefile='ProxyArgument.java' end='36'><Message>Known null at ProxyArgument.java:[line 36]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='d6d5c66be5b6b5a6a95d45bea5ead57c' instanceOccurrenceNum='0' priority='1' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.lamdaj.function.compare.$ArgumentComparator defines non-transient non-serializable instance field argument</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.function.compare.$ArgumentComparator' primary='true'><SourceLine start='29' classname='com.lexicalscope.fluentreflection.internal.lamdaj.function.compare.$ArgumentComparator' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/function/compare/ArgumentComparator.java' sourcefile='ArgumentComparator.java' end='64'><Message>At ArgumentComparator.java:[lines 29-64]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lamdaj.function.compare.$ArgumentComparator</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lamdaj.function.compare.$ArgumentComparator' name='argument' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/lamdaj/function/argument/$Argument;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.lamdaj.function.compare.$ArgumentComparator' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/function/compare/ArgumentComparator.java' sourcefile='ArgumentComparator.java'><Message>In ArgumentComparator.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.lamdaj.function.compare.$ArgumentComparator.argument</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.lamdaj.function.compare.$ArgumentComparator' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/function/compare/ArgumentComparator.java' synthetic='true' sourcefile='ArgumentComparator.java'><Message>In ArgumentComparator.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='16e6ae80175ad753638ac04d59f43753' instanceOccurrenceNum='0' priority='1' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupComparator defines non-transient non-serializable instance field argument</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupComparator' primary='true'><SourceLine start='20' classname='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupComparator' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/group/GroupComparator.java' sourcefile='GroupComparator.java' end='44'><Message>At GroupComparator.java:[lines 20-44]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupComparator</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupComparator' name='argument' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/lamdaj/function/argument/$Argument;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupComparator' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/group/GroupComparator.java' sourcefile='GroupComparator.java'><Message>In GroupComparator.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupComparator.argument</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupComparator' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/group/GroupComparator.java' synthetic='true' sourcefile='GroupComparator.java'><Message>In GroupComparator.java</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='37c775cfa2eac09d2497741102949fbf' instanceOccurrenceNum='0' priority='2' abbrev='Se' type='SE_BAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Non-transient non-serializable instance field in serializable class</ShortMessage><LongMessage>Class com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupImpl defines non-transient non-serializable instance field groupCondition</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupImpl' primary='true'><SourceLine start='17' classname='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupImpl' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/group/GroupImpl.java' sourcefile='GroupImpl.java' end='155'><Message>At GroupImpl.java:[lines 17-155]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupImpl</Message></Class><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupImpl' name='groupCondition' primary='true' signature='Lcom/lexicalscope/fluentreflection/internal/lamdaj/group/$GroupCondition;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupImpl' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/group/GroupImpl.java' sourcefile='GroupImpl.java'><Message>In GroupImpl.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupImpl.groupCondition</Message></Field><SourceLine classname='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupImpl' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/group/GroupImpl.java' synthetic='true' sourcefile='GroupImpl.java'><Message>In GroupImpl.java</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='6996d63a6e44cd117c5771dc56ed1e8c' instanceOccurrenceNum='0' priority='2' abbrev='REC' type='REC_CATCH_EXCEPTION' instanceOccurrenceMax='0'><ShortMessage>Exception is caught when Exception is not thrown</ShortMessage><LongMessage>Exception is caught when Exception is not thrown in com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil.getBooleanPropertyValue(Object, String, String)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil' primary='true'><SourceLine start='16' classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/util/IntrospectionUtil.java' sourcefile='IntrospectionUtil.java' end='166'><Message>At IntrospectionUtil.java:[lines 16-166]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil' name='getBooleanPropertyValue' primary='true' signature='(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;'><SourceLine endBytecode='133' startBytecode='0' start='51' classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/util/IntrospectionUtil.java' sourcefile='IntrospectionUtil.java' end='53'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil.getBooleanPropertyValue(Object, String, String)</Message></Method><SourceLine endBytecode='39' startBytecode='39' start='52' classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/util/IntrospectionUtil.java' sourcefile='IntrospectionUtil.java' end='52'><Message>At IntrospectionUtil.java:[line 52]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='7505f68d3bea1fde7e4ec99c8dc22b6b' instanceOccurrenceNum='0' priority='2' abbrev='REC' type='REC_CATCH_EXCEPTION' instanceOccurrenceMax='0'><ShortMessage>Exception is caught when Exception is not thrown</ShortMessage><LongMessage>Exception is caught when Exception is not thrown in com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil.getPropertyValue(Object, String)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil' primary='true'><SourceLine start='16' classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/util/IntrospectionUtil.java' sourcefile='IntrospectionUtil.java' end='166'><Message>At IntrospectionUtil.java:[lines 16-166]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil' name='getPropertyValue' primary='true' signature='(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;'><SourceLine endBytecode='233' startBytecode='0' start='37' classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/util/IntrospectionUtil.java' sourcefile='IntrospectionUtil.java' end='45'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil.getPropertyValue(Object, String)</Message></Method><SourceLine endBytecode='111' startBytecode='111' start='44' classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/util/IntrospectionUtil.java' sourcefile='IntrospectionUtil.java' end='44'><Message>At IntrospectionUtil.java:[line 44]</Message></SourceLine></BugInstance><BugInstance category='MALICIOUS_CODE' instanceHash='85087014123d1cf55c5ba6387d903c94' instanceOccurrenceNum='0' priority='2' abbrev='EI2' type='EI_EXPOSE_REP2' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage><LongMessage>new com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIteratorOnArray(Object[]) may expose internal representation by storing an externally mutable object into $ResettableIteratorOnArray.array</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIteratorOnArray' primary='true'><SourceLine start='16' classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIteratorOnArray' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/util/iterator/ResettableIteratorOnArray.java' sourcefile='ResettableIteratorOnArray.java' end='46'><Message>At ResettableIteratorOnArray.java:[lines 16-46]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIteratorOnArray</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIteratorOnArray' name='&lt;init&gt;' primary='true' signature='([Ljava/lang/Object;)V'><SourceLine endBytecode='106' startBytecode='0' start='22' classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIteratorOnArray' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/util/iterator/ResettableIteratorOnArray.java' sourcefile='ResettableIteratorOnArray.java' end='24'></SourceLine><Message>In method new com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIteratorOnArray(Object[])</Message></Method><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIteratorOnArray' name='array' primary='true' signature='[Ljava/lang/Object;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIteratorOnArray' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/util/iterator/ResettableIteratorOnArray.java' sourcefile='ResettableIteratorOnArray.java'><Message>In ResettableIteratorOnArray.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIteratorOnArray.array</Message></Field><LocalVariable register='1' name='array' pc='11' role='LOCAL_VARIABLE_NAMED'><Message>Local variable named array</Message></LocalVariable><SourceLine endBytecode='11' startBytecode='11' start='23' classname='com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIteratorOnArray' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lamdaj/util/iterator/ResettableIteratorOnArray.java' sourcefile='ResettableIteratorOnArray.java' end='23'><Message>At ResettableIteratorOnArray.java:[line 23]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='2b47a22fcf950900ce0936a1e9ac8a66' instanceOccurrenceNum='0' priority='1' abbrev='ES' type='ES_COMPARING_PARAMETER_STRING_WITH_EQ' instanceOccurrenceMax='0'><ShortMessage>Comparison of String parameter using == or !=</ShortMessage><LongMessage>Comparison of String parameter using == or != in com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.toBooleanObject(String) </LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true'><SourceLine start='42' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='1078'><Message>At BooleanUtils.java:[lines 42-1078]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' name='toBooleanObject' primary='true' signature='(Ljava/lang/String;)Ljava/lang/Boolean;'><SourceLine endBytecode='227' startBytecode='0' start='545' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='623'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.toBooleanObject(String)</Message></Method><Type descriptor='Ljava/lang/String;' role='TYPE_FOUND'><SourceLine start='109' classname='java.lang.String' sourcepath='java/lang/String.java' sourcefile='String.java' end='2985'><Message>At String.java:[lines 109-2985]</Message></SourceLine><Message>Actual type String</Message></Type><SourceLine endBytecode='3' startBytecode='3' start='545' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='545'><Message>At BooleanUtils.java:[line 545]</Message></SourceLine><Property name='edu.umd.cs.findbugs.detect.RefComparisonWarningProperty.STATIC_AND_PARAMETER_IN_PUBLIC_METHOD' value='true'></Property></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='7be4928d55b33e9e390e8737985778ef' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_BOOLEAN_RETURN_NULL' instanceOccurrenceMax='0'><ShortMessage>Method with Boolean return type returns explicit null</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.negate(Boolean) has Boolean return type and returns explicit null</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true'><SourceLine start='42' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='1078'><Message>At BooleanUtils.java:[lines 42-1078]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' name='negate' primary='true' signature='(Ljava/lang/Boolean;)Ljava/lang/Boolean;'><SourceLine endBytecode='72' startBytecode='0' start='64' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='67'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.negate(Boolean)</Message></Method><SourceLine endBytecode='5' startBytecode='5' start='65' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='65'><Message>At BooleanUtils.java:[line 65]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='2a66b0f08106dba63a1c5a0d16fb3f5f' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_BOOLEAN_RETURN_NULL' instanceOccurrenceMax='0'><ShortMessage>Method with Boolean return type returns explicit null</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.toBooleanObject(int, int, int, int) has Boolean return type and returns explicit null</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true'><SourceLine start='42' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='1078'><Message>At BooleanUtils.java:[lines 42-1078]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' name='toBooleanObject' primary='true' signature='(IIII)Ljava/lang/Boolean;'><SourceLine endBytecode='130' startBytecode='0' start='325' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='335'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.toBooleanObject(int, int, int, int)</Message></Method><SourceLine endBytecode='24' startBytecode='24' start='332' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='332'><Message>At BooleanUtils.java:[line 332]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='3af0854588670c63e571370347bd138b' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_BOOLEAN_RETURN_NULL' instanceOccurrenceMax='0'><ShortMessage>Method with Boolean return type returns explicit null</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.toBooleanObject(Integer) has Boolean return type and returns explicit null</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true'><SourceLine start='42' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='1078'><Message>At BooleanUtils.java:[lines 42-1078]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' name='toBooleanObject' primary='true' signature='(Ljava/lang/Integer;)Ljava/lang/Boolean;'><SourceLine endBytecode='72' startBytecode='0' start='239' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='242'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.toBooleanObject(Integer)</Message></Method><SourceLine endBytecode='5' startBytecode='5' start='240' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='240'><Message>At BooleanUtils.java:[line 240]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='14ae26d1e32da106f8c6e8d1476fdb01' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_BOOLEAN_RETURN_NULL' instanceOccurrenceMax='0'><ShortMessage>Method with Boolean return type returns explicit null</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.toBooleanObject(Integer, Integer, Integer, Integer) has Boolean return type and returns explicit null</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true'><SourceLine start='42' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='1078'><Message>At BooleanUtils.java:[lines 42-1078]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' name='toBooleanObject' primary='true' signature='(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Boolean;'><SourceLine endBytecode='193' startBytecode='0' start='357' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='375'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.toBooleanObject(Integer, Integer, Integer, Integer)</Message></Method><SourceLine endBytecode='25' startBytecode='25' start='365' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='365'><Message>At BooleanUtils.java:[line 365]</Message></SourceLine><SourceLine endBytecode='59' startBytecode='59' start='372' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' role='SOURCE_LINE_ANOTHER_INSTANCE' sourcefile='BooleanUtils.java' end='372'><Message>Another occurrence at BooleanUtils.java:[line 372]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='5f6e33470e5e4710e9225f8b1f8c2b2b' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_BOOLEAN_RETURN_NULL' instanceOccurrenceMax='0'><ShortMessage>Method with Boolean return type returns explicit null</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.toBooleanObject(String) has Boolean return type and returns explicit null</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true'><SourceLine start='42' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='1078'><Message>At BooleanUtils.java:[lines 42-1078]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' name='toBooleanObject' primary='true' signature='(Ljava/lang/String;)Ljava/lang/Boolean;'><SourceLine endBytecode='800' startBytecode='0' start='545' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='623'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.toBooleanObject(String)</Message></Method><SourceLine endBytecode='15' startBytecode='15' start='549' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='549'><Message>At BooleanUtils.java:[line 549]</Message></SourceLine><SourceLine endBytecode='464' startBytecode='464' start='623' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' role='SOURCE_LINE_ANOTHER_INSTANCE' sourcefile='BooleanUtils.java' end='623'><Message>Another occurrence at BooleanUtils.java:[line 623]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='68ffc4911427a569121cbde29744eb99' instanceOccurrenceNum='0' priority='2' abbrev='NP' type='NP_BOOLEAN_RETURN_NULL' instanceOccurrenceMax='0'><ShortMessage>Method with Boolean return type returns explicit null</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.toBooleanObject(String, String, String, String) has Boolean return type and returns explicit null</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true'><SourceLine start='42' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='1078'><Message>At BooleanUtils.java:[lines 42-1078]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' name='toBooleanObject' primary='true' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;'><SourceLine endBytecode='193' startBytecode='0' start='646' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='664'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.toBooleanObject(String, String, String, String)</Message></Method><SourceLine endBytecode='25' startBytecode='25' start='654' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='654'><Message>At BooleanUtils.java:[line 654]</Message></SourceLine><SourceLine endBytecode='59' startBytecode='59' start='661' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' role='SOURCE_LINE_ANOTHER_INSTANCE' sourcefile='BooleanUtils.java' end='661'><Message>Another occurrence at BooleanUtils.java:[line 661]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='4b2236e67066b4c8c08b4db73aa719dd' instanceOccurrenceNum='0' priority='2' abbrev='RC' type='RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN' instanceOccurrenceMax='0'><ShortMessage>Suspicious reference comparison of Boolean values</ShortMessage><LongMessage>Suspicious comparison of Boolean references in com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.toBoolean(String)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true'><SourceLine start='42' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='1078'><Message>At BooleanUtils.java:[lines 42-1078]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' name='toBoolean' primary='true' signature='(Ljava/lang/String;)Z'><SourceLine endBytecode='7' startBytecode='0' start='695' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='695'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils.toBoolean(String)</Message></Method><Type descriptor='Ljava/lang/Boolean;' role='TYPE_FOUND'><SourceLine start='43' classname='java.lang.Boolean' sourcepath='java/lang/Boolean.java' sourcefile='Boolean.java' end='262'><Message>At Boolean.java:[lines 43-262]</Message></SourceLine><Message>Actual type Boolean</Message></Type><Field isStatic='true' classname='java.lang.Boolean' name='TRUE' role='FIELD_VALUE_OF' signature='Ljava/lang/Boolean;'><SourceLine classname='java.lang.Boolean' sourcepath='java/lang/Boolean.java' sourcefile='Boolean.java'><Message>In Boolean.java</Message></SourceLine><Message>Value loaded from field java.lang.Boolean.TRUE</Message></Field><SourceLine endBytecode='7' startBytecode='7' start='695' classname='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' sourcefile='BooleanUtils.java' end='695'><Message>At BooleanUtils.java:[line 695]</Message></SourceLine></BugInstance><BugInstance category='CORRECTNESS' instanceHash='4ba2dea1d12b9f6c93b698c7823b3650' instanceOccurrenceNum='0' priority='1' abbrev='NP' type='NP_NULL_ON_SOME_PATH' instanceOccurrenceMax='0'><ShortMessage>Possible null pointer dereference</ShortMessage><LongMessage>Possible null pointer dereference of constants in com.lexicalscope.fluentreflection.internal.lang3.$EnumUtils.checkBitVectorable(Class)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lang3.$EnumUtils' primary='true'><SourceLine start='40' classname='com.lexicalscope.fluentreflection.internal.lang3.$EnumUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/EnumUtils.java' sourcefile='EnumUtils.java' end='206'><Message>At EnumUtils.java:[lines 40-206]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lang3.$EnumUtils</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.lang3.$EnumUtils' name='checkBitVectorable' primary='true' signature='(Ljava/lang/Class;)Ljava/lang/Class;'><SourceLine endBytecode='182' startBytecode='0' start='199' classname='com.lexicalscope.fluentreflection.internal.lang3.$EnumUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/EnumUtils.java' sourcefile='EnumUtils.java' end='206'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lang3.$EnumUtils.checkBitVectorable(Class)</Message></Method><LocalVariable register='1' name='constants' pc='41' role='LOCAL_VARIABLE_VALUE_OF'><Message>Value loaded from constants</Message></LocalVariable><SourceLine endBytecode='42' startBytecode='42' start='203' classname='com.lexicalscope.fluentreflection.internal.lang3.$EnumUtils' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/EnumUtils.java' role='SOURCE_LINE_DEREF' sourcefile='EnumUtils.java' end='203'><Message>Dereferenced at EnumUtils.java:[line 203]</Message></SourceLine><SourceLine endBytecode='27' startBytecode='27' start='202' classname='com.lexicalscope.fluentreflection.internal.lang3.$EnumUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/EnumUtils.java' role='SOURCE_LINE_KNOWN_NULL' sourcefile='EnumUtils.java' end='202'><Message>Known null at EnumUtils.java:[line 202]</Message></SourceLine></BugInstance><BugInstance category='CORRECTNESS' instanceHash='d4b9454ed492634e0798946ecccb77b6' instanceOccurrenceNum='0' priority='1' abbrev='NP' type='NP_ALWAYS_NULL' instanceOccurrenceMax='0'><ShortMessage>Null pointer dereference</ShortMessage><LongMessage>Null pointer dereference of System.err in com.lexicalscope.fluentreflection.internal.lang3.$SystemUtils.getSystemProperty(String)</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lang3.$SystemUtils' primary='true'><SourceLine start='89' classname='com.lexicalscope.fluentreflection.internal.lang3.$SystemUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/SystemUtils.java' sourcefile='SystemUtils.java' end='1381'><Message>At SystemUtils.java:[lines 89-1381]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lang3.$SystemUtils</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.lang3.$SystemUtils' name='getSystemProperty' primary='true' signature='(Ljava/lang/String;)Ljava/lang/String;'><SourceLine endBytecode='109' startBytecode='0' start='1244' classname='com.lexicalscope.fluentreflection.internal.lang3.$SystemUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/SystemUtils.java' sourcefile='SystemUtils.java' end='1249'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lang3.$SystemUtils.getSystemProperty(String)</Message></Method><Field isStatic='true' classname='java.lang.System' name='err' role='FIELD_VALUE_OF' signature='Ljava/io/PrintStream;'><SourceLine classname='java.lang.System' sourcepath='java/lang/System.java' sourcefile='System.java'><Message>In System.java</Message></SourceLine><Message>Value loaded from field java.lang.System.err</Message></Field><SourceLine endBytecode='33' startBytecode='33' start='1247' classname='com.lexicalscope.fluentreflection.internal.lang3.$SystemUtils' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/SystemUtils.java' role='SOURCE_LINE_DEREF' sourcefile='SystemUtils.java' end='1247'><Message>Dereferenced at SystemUtils.java:[line 1247]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='a52d221a3609e47a41add7873381ad72' instanceOccurrenceNum='0' priority='2' abbrev='SF' type='SF_SWITCH_FALLTHROUGH' instanceOccurrenceMax='0'><ShortMessage>Switch statement found where one case falls through to the next case</ShortMessage><LongMessage>Switch statement found in com.lexicalscope.fluentreflection.internal.lang3.math.$NumberUtils.createNumber(String) where one case falls through to the next case</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lang3.math.$NumberUtils' primary='true'><SourceLine start='33' classname='com.lexicalscope.fluentreflection.internal.lang3.math.$NumberUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/math/NumberUtils.java' sourcefile='NumberUtils.java' end='1410'><Message>At NumberUtils.java:[lines 33-1410]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lang3.math.$NumberUtils</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.lang3.math.$NumberUtils' name='createNumber' primary='true' signature='(Ljava/lang/String;)Ljava/lang/Number;'><SourceLine endBytecode='1396' startBytecode='0' start='445' classname='com.lexicalscope.fluentreflection.internal.lang3.math.$NumberUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/math/NumberUtils.java' sourcefile='NumberUtils.java' end='590'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lang3.math.$NumberUtils.createNumber(String)</Message></Method><SourceLine endBytecode='496' startBytecode='494' start='524' classname='com.lexicalscope.fluentreflection.internal.lang3.math.$NumberUtils' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/math/NumberUtils.java' sourcefile='NumberUtils.java' end='531'><Message>At NumberUtils.java:[lines 524-531]</Message></SourceLine></BugInstance><BugInstance category='CORRECTNESS' instanceHash='e0552ab92dc5eb1792b16d278995f2bc' instanceOccurrenceNum='0' priority='2' abbrev='UR' type='UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR' instanceOccurrenceMax='0'><ShortMessage>Uninitialized read of field method called from constructor of superclass</ShortMessage><LongMessage>registry isn't initialized in com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat.applyPattern(String) when invoked from constructor for superclass</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat' primary='true'><SourceLine start='91' classname='com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/text/ExtendedMessageFormat.java' sourcefile='ExtendedMessageFormat.java' end='533'><Message>At ExtendedMessageFormat.java:[lines 91-533]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat' name='applyPattern' primary='true' signature='(Ljava/lang/String;)V'><SourceLine endBytecode='865' startBytecode='0' start='146' classname='com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/text/ExtendedMessageFormat.java' sourcefile='ExtendedMessageFormat.java' end='209'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat.applyPattern(String)</Message></Method><Field isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat' name='registry' primary='true' signature='Ljava/util/Map;'><SourceLine classname='com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/text/ExtendedMessageFormat.java' sourcefile='ExtendedMessageFormat.java'><Message>In ExtendedMessageFormat.java</Message></SourceLine><Message>Field com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat.registry</Message></Field><Method isStatic='false' classname='java.text.MessageFormat' name='&lt;init&gt;' role='METHOD_SUPERCLASS_CONSTRUCTOR' signature='(Ljava/lang/String;)V'><SourceLine endBytecode='136' startBytecode='0' start='365' classname='java.text.MessageFormat' sourcepath='java/text/MessageFormat.java' sourcefile='MessageFormat.java' end='368'></SourceLine><Message>Superclass constructor is new java.text.MessageFormat(String)</Message></Method><SourceLine endBytecode='49' startBytecode='49' start='367' classname='java.text.MessageFormat' sourcepath='java/text/MessageFormat.java' role='SOURCE_LINE_CALLED_FROM_SUPERCLASS_AT' sourcefile='MessageFormat.java' end='367'><Message>Call from superclass constructor at MessageFormat.java:[line 367]</Message></SourceLine><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat' name='&lt;init&gt;' role='METHOD_CONSTRUCTOR' signature='(Ljava/lang/String;Ljava/util/Locale;Ljava/util/Map;)V'><SourceLine endBytecode='127' startBytecode='0' start='125' classname='com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/text/ExtendedMessageFormat.java' sourcefile='ExtendedMessageFormat.java' end='129'></SourceLine><Message>Constructor is new com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat(String, Locale, Map)</Message></Method><SourceLine endBytecode='13' startBytecode='13' start='127' classname='com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/text/ExtendedMessageFormat.java' role='SOURCE_LINE_FIELD_SET_TOO_LATE_AT' sourcefile='ExtendedMessageFormat.java' end='127'><Message>Field set (too late) at ExtendedMessageFormat.java:[line 127]</Message></SourceLine><SourceLine endBytecode='1' startBytecode='1' start='146' classname='com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/text/ExtendedMessageFormat.java' sourcefile='ExtendedMessageFormat.java' end='146'><Message>At ExtendedMessageFormat.java:[line 146]</Message></SourceLine></BugInstance><BugInstance category='BAD_PRACTICE' instanceHash='6e15cb6dbb8725e61ac5c13ab299a002' instanceOccurrenceNum='0' priority='1' abbrev='CN' type='CN_IDIOM_NO_SUPER_CALL' instanceOccurrenceMax='0'><ShortMessage>clone method does not call super.clone()</ShortMessage><LongMessage>com.lexicalscope.fluentreflection.internal.lang3.text.$StrTokenizer.clone() does not call super.clone()</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lang3.text.$StrTokenizer' primary='true'><SourceLine start='87' classname='com.lexicalscope.fluentreflection.internal.lang3.text.$StrTokenizer' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/text/StrTokenizer.java' sourcefile='StrTokenizer.java' end='1101'><Message>At StrTokenizer.java:[lines 87-1101]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lang3.text.$StrTokenizer</Message></Class><Method isStatic='false' classname='com.lexicalscope.fluentreflection.internal.lang3.text.$StrTokenizer' name='clone' primary='true' signature='()Ljava/lang/Object;'><SourceLine endBytecode='75' startBytecode='0' start='1067' classname='com.lexicalscope.fluentreflection.internal.lang3.text.$StrTokenizer' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/text/StrTokenizer.java' sourcefile='StrTokenizer.java' end='1069'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lang3.text.$StrTokenizer.clone()</Message></Method><Class classname='com.lexicalscope.fluentreflection.internal.lang3.text.$StrBuilder$StrBuilderTokenizer' role='CLASS_SUBCLASS'><SourceLine start='2675' classname='com.lexicalscope.fluentreflection.internal.lang3.text.$StrBuilder$StrBuilderTokenizer' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/text/StrBuilder.java' sourcefile='StrBuilder.java' end='2696'><Message>At StrBuilder.java:[lines 2675-2696]</Message></SourceLine><Message>has subclass com.lexicalscope.fluentreflection.internal.lang3.text.$StrBuilder$StrBuilderTokenizer</Message></Class><SourceLine endBytecode='75' startBytecode='0' start='1067' classname='com.lexicalscope.fluentreflection.internal.lang3.text.$StrTokenizer' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/text/StrTokenizer.java' synthetic='true' sourcefile='StrTokenizer.java' end='1069'><Message>At StrTokenizer.java:[lines 1067-1069]</Message></SourceLine></BugInstance><BugInstance category='STYLE' instanceHash='bbe05930201e25aa857b07adb2a3db07' instanceOccurrenceNum='0' priority='2' abbrev='SF' type='SF_SWITCH_FALLTHROUGH' instanceOccurrenceMax='0'><ShortMessage>Switch statement found where one case falls through to the next case</ShortMessage><LongMessage>Switch statement found in com.lexicalscope.fluentreflection.internal.lang3.time.$DateUtils.getFragment(Calendar, int, int) where one case falls through to the next case</LongMessage><Class classname='com.lexicalscope.fluentreflection.internal.lang3.time.$DateUtils' primary='true'><SourceLine start='74' classname='com.lexicalscope.fluentreflection.internal.lang3.time.$DateUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/time/DateUtils.java' sourcefile='DateUtils.java' end='1774'><Message>At DateUtils.java:[lines 74-1774]</Message></SourceLine><Message>In class com.lexicalscope.fluentreflection.internal.lang3.time.$DateUtils</Message></Class><Method isStatic='true' classname='com.lexicalscope.fluentreflection.internal.lang3.time.$DateUtils' name='getFragment' primary='true' signature='(Ljava/util/Calendar;II)J'><SourceLine endBytecode='414' startBytecode='0' start='1629' classname='com.lexicalscope.fluentreflection.internal.lang3.time.$DateUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/time/DateUtils.java' sourcefile='DateUtils.java' end='1667'></SourceLine><Message>In method com.lexicalscope.fluentreflection.internal.lang3.time.$DateUtils.getFragment(Calendar, int, int)</Message></Method><SourceLine endBytecode='174' startBytecode='172' start='1653' classname='com.lexicalscope.fluentreflection.internal.lang3.time.$DateUtils' primary='true' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/time/DateUtils.java' sourcefile='DateUtils.java' end='1656'><Message>At DateUtils.java:[lines 1653-1656]</Message></SourceLine><SourceLine endBytecode='192' startBytecode='190' start='1656' classname='com.lexicalscope.fluentreflection.internal.lang3.time.$DateUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/time/DateUtils.java' role='SOURCE_LINE_ANOTHER_INSTANCE' sourcefile='DateUtils.java' end='1659'><Message>Another occurrence at DateUtils.java:[lines 1656-1659]</Message></SourceLine><SourceLine endBytecode='210' startBytecode='208' start='1659' classname='com.lexicalscope.fluentreflection.internal.lang3.time.$DateUtils' sourcepath='com/lexicalscope/fluentreflection/internal/lang3/time/DateUtils.java' role='SOURCE_LINE_ANOTHER_INSTANCE' sourcefile='DateUtils.java' end='1662'><Message>Another occurrence at DateUtils.java:[lines 1659-1662]</Message></SourceLine></BugInstance><BugCategory category='MALICIOUS_CODE'><Description>Malicious code vulnerability</Description></BugCategory><BugCategory category='STYLE'><Description>Dodgy</Description></BugCategory><BugCategory category='BAD_PRACTICE'><Description>Bad practice</Description></BugCategory><BugCategory category='CORRECTNESS'><Description>Correctness</Description></BugCategory><BugCategory category='MT_CORRECTNESS'><Description>Multithreaded correctness</Description></BugCategory><BugCategory category='EXPERIMENTAL'><Description>Experimental</Description></BugCategory><BugPattern category='STYLE' abbrev='NP' type='NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE'><ShortDescription>Parameter must be nonnull but is marked as nullable</ShortDescription><Details>

&lt;p&gt; This parameter is always used in a way that requires it to be nonnull,
but the parameter is explicitly annotated as being Nullable. Either the use
of the parameter or the annotation is wrong.
&lt;/p&gt;

    </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='NP' type='NP_BOOLEAN_RETURN_NULL'><ShortDescription>Method with Boolean return type returns explicit null</ShortDescription><Details>
  	 
  	 &lt;p&gt;
	A method that returns either Boolean.TRUE, Boolean.FALSE or null is an accident waiting to happen.
	This method can be invoked as though it returned a value of type boolean, and
	the compiler will insert automatic unboxing of the Boolean value. If a null value is returned,
	this will result in a NullPointerException.
  	 &lt;/p&gt;
  	 
  	 </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='Nm' type='NM_CLASS_NOT_EXCEPTION'><ShortDescription>Class is not derived from an Exception, even though it is named as such</ShortDescription><Details>

&lt;p&gt; This class is not derived from another exception, but ends with 'Exception'. This will
be confusing to users of this class.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='STYLE' abbrev='BC' type='BC_BAD_CAST_TO_ABSTRACT_COLLECTION'><ShortDescription>Questionable cast to abstract collection </ShortDescription><Details>

&lt;p&gt;
This code casts a Collection to an abstract collection
(such as &lt;code&gt;List&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, or &lt;code&gt;Map&lt;/code&gt;).
Ensure that you are guaranteed that the object is of the type
you are casting to. If all you need is to be able
to iterate through a collection, you don't need to cast it to a Set or List.
&lt;/p&gt;

    </Details></BugPattern><BugPattern category='CORRECTNESS' abbrev='NP' type='NP_ALWAYS_NULL'><ShortDescription>Null pointer dereference</ShortDescription><Details>

&lt;p&gt; A null pointer is dereferenced here.&amp;nbsp; This will lead to a
&lt;code&gt;NullPointerException&lt;/code&gt; when the code is executed.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='It' type='IT_NO_SUCH_ELEMENT'><ShortDescription>Iterator next() method can't throw NoSuchElementException</ShortDescription><Details>

  &lt;p&gt; This class implements the &lt;code&gt;java.util.Iterator&lt;/code&gt; interface.&amp;nbsp;
  However, its &lt;code&gt;next()&lt;/code&gt; method is not capable of throwing
  &lt;code&gt;java.util.NoSuchElementException&lt;/code&gt;.&amp;nbsp; The &lt;code&gt;next()&lt;/code&gt;
  method should be changed so it throws &lt;code&gt;NoSuchElementException&lt;/code&gt;
  if is called when there are no more elements to return.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='Se' type='SE_TRANSIENT_FIELD_NOT_RESTORED'><ShortDescription>Transient field that isn't set by deserialization. </ShortDescription><Details>

  &lt;p&gt; This class contains a field that is updated at multiple places in the class, thus it seems to be part of the state of the class. However, since the field is marked as transient and not set in readObject or readResolve, it will contain the default value in any 
deserialized instance of the class.
&lt;/p&gt;

    </Details></BugPattern><BugPattern category='STYLE' abbrev='Eq' type='EQ_DOESNT_OVERRIDE_EQUALS'><ShortDescription>Class doesn't override equals in superclass</ShortDescription><Details>

  &lt;p&gt; This class extends a class that defines an equals method and adds fields, but doesn't
define an equals method itself. Thus, equality on instances of this class will
ignore the identity of the subclass and the added fields. Be sure this is what is intended,
and that you don't need to override the equals method. Even if you don't need to override
the equals method, consider overriding it anyway to document the fact
that the equals method for the subclass just return the result of
invoking super.equals(o).
  &lt;/p&gt;

    </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='HE' type='HE_EQUALS_NO_HASHCODE'><ShortDescription>Class defines equals() but not hashCode()</ShortDescription><Details>

  &lt;p&gt; This class overrides &lt;code&gt;equals(Object)&lt;/code&gt;, but does not
  override &lt;code&gt;hashCode()&lt;/code&gt;.&amp;nbsp; Therefore, the class may violate the
  invariant that equal objects must have equal hashcodes.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='MALICIOUS_CODE' abbrev='EI2' type='EI_EXPOSE_REP2' cweid='374'><ShortDescription>May expose internal representation by incorporating reference to mutable object</ShortDescription><Details>

  &lt;p&gt; This code stores a reference to an externally mutable object into the
  internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Storing a copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='EXPERIMENTAL' abbrev='OBL' type='OBL_UNSATISFIED_OBLIGATION'><ShortDescription>Method may fail to clean up stream or resource</ShortDescription><Details>
		  
		  &lt;p&gt;
		  This method may fail to clean up (close, dispose of) a stream,
		  database object, or other
		  resource requiring an explicit cleanup operation.
		  &lt;/p&gt;
		  
		  &lt;p&gt;
		  In general, if a method opens a stream or other resource,
		  the method should use a try/finally block to ensure that
		  the stream or resource is cleaned up before the method
		  returns.
		  &lt;/p&gt;
		  
		  &lt;p&gt;
		  This bug pattern is essentially the same as the
		  OS_OPEN_STREAM and ODR_OPEN_DATABASE_RESOURCE
		  bug patterns, but is based on a different
		  (and hopefully better) static analysis technique.
		  We are interested is getting feedback about the
		  usefulness of this bug pattern.
		  To send feedback, either:
		  &lt;/p&gt;
		  &lt;ul&gt;
			&lt;li&gt;send email to findbugs@cs.umd.edu&lt;/li&gt;
			&lt;li&gt;file a bug report: &lt;a href="http://findbugs.sourceforge.net/reportingBugs.html"&gt;http://findbugs.sourceforge.net/reportingBugs.html&lt;/a&gt;&lt;/li&gt;
		  &lt;/ul&gt;
		  
		  &lt;p&gt;
		  In particular,
		  the false-positive suppression heuristics for this
		  bug pattern have not been extensively tuned, so
		  reports about false positives are helpful to us.
		  &lt;/p&gt;
		  
		  &lt;p&gt;
		  See Weimer and Necula, &lt;i&gt;Finding and Preventing Run-Time Error Handling Mistakes&lt;/i&gt;, for
		  a description of the analysis technique.
		  &lt;/p&gt;
		  
	  </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='RC' type='RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN'><ShortDescription>Suspicious reference comparison of Boolean values</ShortDescription><Details>

&lt;p&gt; This method compares two Boolean values using the == or != operator. 
Normally, there are only two Boolean values (Boolean.TRUE and Boolean.FALSE),
but it is possible to create other Boolean objects using the &lt;code&gt;new Boolean(b)&lt;/code&gt;
constructor. It is best to avoid such objects, but if they do exist,
then checking Boolean objects for equality using == or != will give results
than are different than you would get using &lt;code&gt;.equals(...)&lt;/code&gt;
&lt;/p&gt;

    </Details></BugPattern><BugPattern category='CORRECTNESS' abbrev='NP' type='NP_NULL_ON_SOME_PATH'><ShortDescription>Possible null pointer dereference</ShortDescription><Details>

&lt;p&gt; There is a branch of statement that, &lt;em&gt;if executed,&lt;/em&gt;  guarantees that
a null value will be dereferenced, which
would generate a &lt;code&gt;NullPointerException&lt;/code&gt; when the code is executed.
Of course, the problem might be that the branch or statement is infeasible and that
the null pointer exception can't ever be executed; deciding that is beyond the ability of FindBugs.
&lt;/p&gt;

    </Details></BugPattern><BugPattern category='STYLE' abbrev='NP' type='NP_LOAD_OF_KNOWN_NULL_VALUE'><ShortDescription>Load of known null value</ShortDescription><Details>

  &lt;p&gt; The variable referenced at this point is known to be null due to an earlier
   check against null. Although this is valid, it might be a mistake (perhaps you
intended to refer to a different variable, or perhaps the earlier check to see if the
variable is null should have been a check to see if it was nonnull).
&lt;/p&gt;

    </Details></BugPattern><BugPattern category='STYLE' abbrev='DLS' type='DLS_DEAD_LOCAL_STORE'><ShortDescription>Dead store to local variable</ShortDescription><Details>

&lt;p&gt;
This instruction assigns a value to a local variable,
but the value is not read or used in any subsequent instruction.
Often, this indicates an error, because the value computed is never
used.
&lt;/p&gt;
&lt;p&gt;
Note that Sun's javac compiler often generates dead stores for
final local variables.  Because FindBugs is a bytecode-based tool,
there is no easy way to eliminate these false positives.
&lt;/p&gt;

    </Details></BugPattern><BugPattern category='STYLE' abbrev='IA' type='IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD'><ShortDescription>Ambiguous invocation of either an inherited or outer method</ShortDescription><Details>

  &lt;p&gt; An inner class is invoking a method that could be resolved to either a inherited method or a method defined in an outer class. By the Java semantics,
it will be resolved to invoke the inherited method, but this may not be want
you intend. If you really intend to invoke the inherited method,
invoke it by invoking the method on super (e.g., invoke super.foo(17)), and
thus it will be clear to other readers of your code and to FindBugs
that you want to invoke the inherited method, not the method in the outer class.
&lt;/p&gt;

    </Details></BugPattern><BugPattern category='MT_CORRECTNESS' abbrev='IS' type='IS2_INCONSISTENT_SYNC'><ShortDescription>Inconsistent synchronization</ShortDescription><Details>

  &lt;p&gt; The fields of this class appear to be accessed inconsistently with respect
  to synchronization.&amp;nbsp; This bug report indicates that the bug pattern detector
  judged that
  &lt;/p&gt;
  &lt;ul&gt;
  &lt;li&gt; The class contains a mix of locked and unlocked accesses,&lt;/li&gt;
  &lt;li&gt; At least one locked access was performed by one of the class's own methods, and&lt;/li&gt;
  &lt;li&gt; The number of unsynchronized field accesses (reads and writes) was no more than
       one third of all accesses, with writes being weighed twice as high as reads&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt; A typical bug matching this bug pattern is forgetting to synchronize
  one of the methods in a class that is intended to be thread-safe.&lt;/p&gt;

  &lt;p&gt; You can select the nodes labeled "Unsynchronized access" to show the
  code locations where the detector believed that a field was accessed
  without synchronization.&lt;/p&gt;

  &lt;p&gt; Note that there are various sources of inaccuracy in this detector;
  for example, the detector cannot statically detect all situations in which
  a lock is held.&amp;nbsp; Also, even when the detector is accurate in
  distinguishing locked vs. unlocked accesses, the code in question may still
  be correct.&lt;/p&gt;


    </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='ES' type='ES_COMPARING_PARAMETER_STRING_WITH_EQ'><ShortDescription>Comparison of String parameter using == or !=</ShortDescription><Details>

  &lt;p&gt;This code compares a &lt;code&gt;java.lang.String&lt;/code&gt; parameter for reference
equality using the == or != operators. Requiring callers to 
pass only String constants or interned strings to a method is unnecessarily
fragile, and rarely leads to measurable performance gains. Consider
using the &lt;code&gt;equals(Object)&lt;/code&gt; method instead.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='STYLE' abbrev='NS' type='NS_DANGEROUS_NON_SHORT_CIRCUIT'><ShortDescription>Potentially dangerous use of non-short-circuit logic</ShortDescription><Details>

  &lt;p&gt; This code seems to be using non-short-circuit logic (e.g., &amp;amp;
or |)
rather than short-circuit logic (&amp;amp;&amp;amp; or ||). In addition, 
it seem possible that, depending on the value of the left hand side, you might not
want to evaluate the right hand side (because it would have side effects, could cause an exception
or could be expensive.&lt;/p&gt;
&lt;p&gt;
Non-short-circuit logic causes both sides of the expression
to be evaluated even when the result can be inferred from
knowing the left-hand side. This can be less efficient and
can result in errors if the left-hand side guards cases
when evaluating the right-hand side can generate an error.
&lt;/p&gt;

&lt;p&gt;See &lt;a href="http://java.sun.com/docs/books/jls/third_edition/html/expressions.html#15.22.2"&gt;the Java
Language Specification&lt;/a&gt; for details

&lt;/p&gt;

    </Details></BugPattern><BugPattern category='STYLE' abbrev='BC' type='BC_UNCONFIRMED_CAST'><ShortDescription>Unchecked/unconfirmed cast</ShortDescription><Details>

&lt;p&gt;
This cast is unchecked, and not all instances of the type casted from can be cast to
the type it is being cast to. Ensure that your program logic ensures that this
cast will not fail.
&lt;/p&gt;

    </Details></BugPattern><BugPattern category='MT_CORRECTNESS' abbrev='UL' type='UL_UNRELEASED_LOCK'><ShortDescription>Method does not release lock on all paths</ShortDescription><Details>

&lt;p&gt; This method acquires a JSR-166 (&lt;code&gt;java.util.concurrent&lt;/code&gt;) lock,
but does not release it on all paths out of the method.  In general, the correct idiom
for using a JSR-166 lock is:
&lt;/p&gt;
&lt;pre&gt;
    Lock l = ...;
    l.lock();
    try {
        // do something
    } finally {
        l.unlock();
    }
&lt;/pre&gt;

    </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='DE' type='DE_MIGHT_IGNORE'><ShortDescription>Method might ignore exception</ShortDescription><Details>

  &lt;p&gt; This method might ignore an exception.&amp;nbsp; In general, exceptions
  should be handled or reported in some way, or they should be thrown
  out of the method.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='SnVI' type='SE_NO_SERIALVERSIONID'><ShortDescription>Class is Serializable, but doesn't define serialVersionUID</ShortDescription><Details>

  &lt;p&gt; This class implements the &lt;code&gt;Serializable&lt;/code&gt; interface, but does
  not define a &lt;code&gt;serialVersionUID&lt;/code&gt; field.&amp;nbsp;
  A change as simple as adding a reference to a .class object
    will add synthetic fields to the class,
   which will unfortunately change the implicit
   serialVersionUID (e.g., adding a reference to &lt;code&gt;String.class&lt;/code&gt;
   will generate a static field &lt;code&gt;class$java$lang$String&lt;/code&gt;).
   Also, different source code to bytecode compilers may use different
   naming conventions for synthetic variables generated for
   references to class objects or inner classes.
   To ensure interoperability of Serializable across versions,
   consider adding an explicit serialVersionUID.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='RV' type='RV_RETURN_VALUE_IGNORED_BAD_PRACTICE' cweid='253'><ShortDescription>Method ignores exceptional return value</ShortDescription><Details>

   &lt;p&gt; This method returns a value that is not checked. The return value should be checked
since it can indicate an unusual or unexpected function execution. For
example, the &lt;code&gt;File.delete()&lt;/code&gt; method returns false
if the file could not be successfully deleted (rather than 
throwing an Exception).
If you don't check the result, you won't notice if the method invocation
signals unexpected behavior by returning an atypical return value.
&lt;/p&gt;

    </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='Se' type='SE_BAD_FIELD_STORE'><ShortDescription>Non-serializable value stored into instance field of a serializable class</ShortDescription><Details>

&lt;p&gt; A non-serializable value is stored into a non-transient field
of a serializable class.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='CORRECTNESS' abbrev='RV' type='RV_RETURN_VALUE_IGNORED'><ShortDescription>Method ignores return value</ShortDescription><Details>

   &lt;p&gt; The return value of this method should be checked. One common
cause of this warning is to invoke a method on an immutable object,
thinking that it updates the object. For example, in the following code
fragment,&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;
String dateString = getHeaderField(name);
dateString.trim();
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;the programmer seems to be thinking that the trim() method will update
the String referenced by dateString. But since Strings are immutable, the trim()
function returns a new String value, which is being ignored here. The code
should be corrected to: &lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;
String dateString = getHeaderField(name);
dateString = dateString.trim();
&lt;/pre&gt;
&lt;/blockquote&gt;

    </Details></BugPattern><BugPattern category='CORRECTNESS' abbrev='NP' type='NP_GUARANTEED_DEREF'><ShortDescription>Null value is guaranteed to be dereferenced</ShortDescription><Details>
		  
			  &lt;p&gt;
			  There is a statement or branch that if executed guarantees that
			  a value is null at this point, and that 
			  value that is guaranteed to be dereferenced
			  (except on forward paths involving runtime exceptions).
			  &lt;/p&gt;
		  
	  </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='DP' type='DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED'><ShortDescription>Classloaders should only be created inside doPrivileged block</ShortDescription><Details>

  &lt;p&gt; This code creates a classloader,  which requires a security manager.
  If this code will be granted security permissions, but might be invoked by code that does not
  have security permissions, then the classloader creation needs to occur inside a doPrivileged block.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='STYLE' abbrev='NP' type='NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE'><ShortDescription>Possible null pointer dereference due to return value of called method</ShortDescription><Details>
      
&lt;p&gt; The return value from a method is dereferenced without a null check,
and the return value of that method is one that should generally be checked
for null.  This may lead to a &lt;code&gt;NullPointerException&lt;/code&gt; when the code is executed.
&lt;/p&gt;
      
   </Details></BugPattern><BugPattern category='STYLE' abbrev='SF' type='SF_SWITCH_FALLTHROUGH' cweid='484'><ShortDescription>Switch statement found where one case falls through to the next case</ShortDescription><Details>

  &lt;p&gt; This method contains a switch statement where one case branch will fall through to the next case.
  Usually you need to end this case with a break or return.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='STYLE' abbrev='Eq' type='EQ_UNUSUAL'><ShortDescription>Unusual equals method </ShortDescription><Details>

  &lt;p&gt; This class doesn't do any of the patterns we recognize for checking that the type of the argument 
is compatible with the type of the &lt;code&gt;this&lt;/code&gt; object. There might not be anything wrong with
this code, but it is worth reviewing.
&lt;/p&gt;

    </Details></BugPattern><BugPattern category='CORRECTNESS' abbrev='UMAC' type='UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS'><ShortDescription>Uncallable method defined in anonymous class</ShortDescription><Details>

&lt;p&gt; This anonymous class defined a method that is not directly invoked and does not override
a method in a superclass. Since methods in other classes cannot directly invoke methods
declared in an anonymous class, it seems that this method is uncallable. The method
might simply be dead code, but it is also possible that the method is intended to
override a method declared in a superclass, and due to an typo or other error the method does not,
in fact, override the method it is intended to.
&lt;/p&gt;

</Details></BugPattern><BugPattern category='CORRECTNESS' abbrev='UR' type='UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR'><ShortDescription>Uninitialized read of field method called from constructor of superclass</ShortDescription><Details>

  &lt;p&gt; This method is invoked in the constructor of of the superclass. At this point,
	the fields of the class have not yet initialized.&lt;/p&gt;
&lt;p&gt;To make this more concrete, consider the following classes:&lt;/p&gt;
&lt;pre&gt;abstract class A {
  int hashCode;
  abstract Object getValue();
  A() {
    hashCode = getValue().hashCode();
    }
  }
class B extends A {
  Object value;
  B(Object v) {
    this.value = v;
    }
  Object getValue() {
    return value;
  }
  }&lt;/pre&gt;
&lt;p&gt;When a &lt;code&gt;B&lt;/code&gt; is constructed,
the constructor for the &lt;code&gt;A&lt;/code&gt; class is invoked
&lt;em&gt;before&lt;/em&gt; the constructor for &lt;code&gt;B&lt;/code&gt; sets &lt;code&gt;value&lt;/code&gt;.
Thus, when the constructor for &lt;code&gt;A&lt;/code&gt; invokes &lt;code&gt;getValue&lt;/code&gt;,
an uninitialized value is read for &lt;code&gt;value&lt;/code&gt;
&lt;/p&gt;

    </Details></BugPattern><BugPattern category='MT_CORRECTNESS' abbrev='NN' type='NN_NAKED_NOTIFY'><ShortDescription>Naked notify</ShortDescription><Details>

  &lt;p&gt; A call to &lt;code&gt;notify()&lt;/code&gt; or &lt;code&gt;notifyAll()&lt;/code&gt;
  was made without any (apparent) accompanying
  modification to mutable object state.&amp;nbsp; In general, calling a notify
  method on a monitor is done because some condition another thread is
  waiting for has become true.&amp;nbsp; However, for the condition to be meaningful,
  it must involve a heap object that is visible to both threads.&lt;/p&gt;

  &lt;p&gt; This bug does not necessarily indicate an error, since the change to
  mutable object state may have taken place in a method which then called
  the method containing the notification.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='Se' type='SE_INNER_CLASS'><ShortDescription>Serializable inner class</ShortDescription><Details>

&lt;p&gt; This Serializable class is an inner class.  Any attempt to serialize
it will also serialize the associated outer instance. The outer instance is serializable,
so this won't fail, but it might serialize a lot more data than intended.
If possible, making the inner class a static inner class (also known as a nested class) should solve the 
problem. 

    </Details></BugPattern><BugPattern category='CORRECTNESS' abbrev='UwF' type='UWF_UNWRITTEN_FIELD'><ShortDescription>Unwritten field</ShortDescription><Details>

  &lt;p&gt; This field is never written.&amp;nbsp; All reads of it will return the default
value. Check for errors (should it have been initialized?), or remove it if it is useless.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='CN' type='CN_IDIOM_NO_SUPER_CALL'><ShortDescription>clone method does not call super.clone()</ShortDescription><Details>

&lt;p&gt; This non-final class defines a clone() method that does not call super.clone().
If this class ("&lt;i&gt;A&lt;/i&gt;") is extended by a subclass ("&lt;i&gt;B&lt;/i&gt;"),
and the subclass &lt;i&gt;B&lt;/i&gt; calls super.clone(), then it is likely that
&lt;i&gt;B&lt;/i&gt;'s clone() method will return an object of type &lt;i&gt;A&lt;/i&gt;,
which violates the standard contract for clone().&lt;/p&gt;

&lt;p&gt; If all clone() methods call super.clone(), then they are guaranteed
to use Object.clone(), which always returns an object of the correct type.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='Se' type='SE_BAD_FIELD'><ShortDescription>Non-transient non-serializable instance field in serializable class</ShortDescription><Details>

&lt;p&gt; This Serializable class defines a non-primitive instance field which is neither transient,
Serializable, or &lt;code&gt;java.lang.Object&lt;/code&gt;, and does not appear to implement
the &lt;code&gt;Externalizable&lt;/code&gt; interface or the
&lt;code&gt;readObject()&lt;/code&gt; and &lt;code&gt;writeObject()&lt;/code&gt; methods.&amp;nbsp;
Objects of this class will not be deserialized correctly if a non-Serializable
object is stored in this field.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='CORRECTNESS' abbrev='NP' type='NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS'><ShortDescription>Method call passes null for nonnull parameter</ShortDescription><Details>
      
      &lt;p&gt;
      A possibly-null value is passed at a call site where all known
      target methods require the parameter to be nonnull.
	Either the parameter is annotated as a parameter that should
	always be nonnull, or analysis has shown that it will always be 
	dereferenced.
      &lt;/p&gt;
      
   </Details></BugPattern><BugPattern category='BAD_PRACTICE' abbrev='HE' type='HE_INHERITS_EQUALS_USE_HASHCODE'><ShortDescription>Class inherits equals() and uses Object.hashCode()</ShortDescription><Details>

  &lt;p&gt; This class inherits &lt;code&gt;equals(Object)&lt;/code&gt; from an abstract
  superclass, and &lt;code&gt;hashCode()&lt;/code&gt; from
&lt;code&gt;java.lang.Object&lt;/code&gt; (which returns
  the identity hash code, an arbitrary value assigned to the object
  by the VM).&amp;nbsp; Therefore, the class is very likely to violate the
  invariant that equal objects must have equal hashcodes.&lt;/p&gt;

  &lt;p&gt;If you don't want to define a hashCode method, and/or don't
   believe the object will ever be put into a HashMap/Hashtable,
   define the &lt;code&gt;hashCode()&lt;/code&gt; method
   to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.&lt;/p&gt;

    </Details></BugPattern><BugPattern category='STYLE' abbrev='REC' type='REC_CATCH_EXCEPTION' cweid='396'><ShortDescription>Exception is caught when Exception is not thrown</ShortDescription><Details>
  
  &lt;p&gt;
  This method uses a try-catch block that catches Exception objects, but Exception is not
  thrown within the try block, and RuntimeException is not explicitly caught.  It is a common bug pattern to
  say try { ... } catch (Exception e) { something } as a shorthand for catching a number of types of exception
  each of whose catch blocks is identical, but this construct also accidentally catches RuntimeException as well,
  masking potential bugs.
  &lt;/p&gt;
  
     </Details></BugPattern><BugCode abbrev='Se'><Description>Incorrect definition of Serializable class</Description></BugCode><BugCode abbrev='RC'><Description>Questionable use of reference equality rather than calling equals</Description></BugCode><BugCode abbrev='DLS' cweid='563'><Description>Dead local store</Description></BugCode><BugCode abbrev='EI2'><Description>Storing reference to mutable object</Description></BugCode><BugCode abbrev='NS'><Description>Suspicious use of non-short-circuit boolean operator</Description></BugCode><BugCode abbrev='It'><Description>Incorrect definition of Iterator</Description></BugCode><BugCode abbrev='NP' cweid='476'><Description>Null pointer dereference</Description></BugCode><BugCode abbrev='NN'><Description>Naked notify</Description></BugCode><BugCode abbrev='Eq'><Description>Problems with implementation of equals()</Description></BugCode><BugCode abbrev='Nm'><Description>Confusing method name</Description></BugCode><BugCode abbrev='DP'><Description>Use doPrivileged</Description></BugCode><BugCode abbrev='BC'><Description>Bad casts of object references</Description></BugCode><BugCode abbrev='UwF'><Description>Unwritten field</Description></BugCode><BugCode abbrev='DE' cweid='391'><Description>Dropped or ignored exception</Description></BugCode><BugCode abbrev='SnVI'><Description>Serializable class with no Version ID</Description></BugCode><BugCode abbrev='IA'><Description>Ambiguous invocation</Description></BugCode><BugCode abbrev='REC'><Description>RuntimeException capture</Description></BugCode><BugCode abbrev='UR'><Description>Uninitialized read of field in constructor</Description></BugCode><BugCode abbrev='SF'><Description>Switch case falls through</Description></BugCode><BugCode abbrev='HE'><Description>Equal objects must have equal hashcodes</Description></BugCode><BugCode abbrev='OBL'><Description>Unsatisfied obligation to clean up stream or resource</Description></BugCode><BugCode abbrev='IS' cweid='366'><Description>Inconsistent synchronization</Description></BugCode><BugCode abbrev='UL'><Description>Lock not released on all paths</Description></BugCode><BugCode abbrev='RV' cweid='440'><Description>Bad use of return value from method</Description></BugCode><BugCode abbrev='UMAC'><Description>Uncallable method of anonymous class</Description></BugCode><BugCode abbrev='ES' cweid='597'><Description>Checking String equality using == or !=</Description></BugCode><BugCode abbrev='CN' cweid='580'><Description>Bad implementation of cloneable idiom</Description></BugCode><Errors errors='0' missingClasses='0'></Errors><FindBugsSummary alloc_mbytes='455.12' priority_2='129' priority_1='19' gc_seconds='111.28' peak_mbytes='399.60' total_bugs='148' referenced_classes='2397' timestamp='Fri, 29 Jun 2012 21:21:24 +0100' total_classes='1976' num_packages='52' total_size='59868' cpu_seconds='114.09' clock_seconds='354.37' vm_version='20.0-b11'><FileStats path='com/google/common/base/package-info.java' bugCount='0' size='1'></FileStats><FileStats path='com/google/common/cache/package-info.java' bugCount='0' size='1'></FileStats><FileStats path='com/google/common/collect/package-info.java' bugCount='0' size='1'></FileStats><FileStats path='com/google/common/io/package-info.java' bugCount='0' size='1'></FileStats><FileStats path='com/google/common/net/package-info.java' bugCount='0' size='1'></FileStats><FileStats path='com/google/common/primitives/package-info.java' bugCount='0' size='1'></FileStats><FileStats path='com/google/common/util/concurrent/package-info.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/AbstractCall.java' bugCount='0' size='11'></FileStats><FileStats path='com/lexicalscope/fluentreflection/AbstractFluentAnnotated.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/BoundFluentFieldImpl.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/BoundFluentMemberImpl.java' bugCount='0' size='67'></FileStats><FileStats path='com/lexicalscope/fluentreflection/BoundFluentMethodImpl.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/Call.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ClassNotFoundRuntimeException.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ConstructorNotFoundRuntimeException.java' bugCount='0' size='17'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ConvertAnnotationToClass.java' bugCount='0' size='7'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ConvertClassToReflectedType.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ConvertClassToReflectedTypeAssignableMatcher.java' bugCount='0' size='9'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ConvertClassToReflectedTypeMatcher.java' bugCount='0' size='7'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ConvertClassToSimpleName.java' bugCount='0' size='9'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ConvertConstructorToReflectedConstructor.java' bugCount='0' size='15'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ConvertObjectToClass.java' bugCount='0' size='9'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ConvertReflectedFieldToBoundReflectedField.java' bugCount='0' size='12'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ConvertReflectedMethodToBoundReflectedMethod.java' bugCount='0' size='12'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ConvertReflectedTypeToClass.java' bugCount='0' size='7'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ConvertReflectedTypeToReflectedTypeAssignableMatcher.java' bugCount='0' size='9'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ConvertTypeLiteralToReflectedType.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FieldNotFoundException.java' bugCount='0' size='25'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FluentAnnotated.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FluentAnnotatedImpl.java' bugCount='0' size='20'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FluentClass.java' bugCount='0' size='8'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FluentClassImpl.java' bugCount='0' size='115'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FluentConstructor.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FluentConstructorImpl.java' bugCount='0' size='57'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FluentFieldImpl.java' bugCount='0' size='93'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FluentMember.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FluentMethod.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FluentMethodImpl.java' bugCount='0' size='124'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FluentObject.java' bugCount='0' size='4'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FluentObjectImpl.java' bugCount='0' size='98'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FluentReflection.java' bugCount='0' size='18'></FileStats><FileStats path='com/lexicalscope/fluentreflection/FluentType.java' bugCount='0' size='27'></FileStats><FileStats path='com/lexicalscope/fluentreflection/IllegalAccessRuntimeException.java' bugCount='0' size='17'></FileStats><FileStats path='com/lexicalscope/fluentreflection/IllegalArgumentRuntimeException.java' bugCount='0' size='27'></FileStats><FileStats path='com/lexicalscope/fluentreflection/InstantiationRuntimeException.java' bugCount='0' size='17'></FileStats><FileStats path='com/lexicalscope/fluentreflection/InvocationTargetRuntimeException.java' bugCount='0' size='12'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ListBuilder.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherAnd.java' bugCount='0' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherAnyReflectedType.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherArgumentCount.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherArgumentTypes.java' bugCount='0' size='27'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherAssignableFrom.java' bugCount='0' size='16'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherCallableAnnotatedWith.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherConstructorReflectingOn.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherDeclaredBy.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherFieldReflectingOn.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherFinalMember.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherHasInterface.java' bugCount='0' size='15'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherHasNameContaining.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherHasNameEndingWith.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherHasNameMatching.java' bugCount='0' size='15'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherHasNameStartingWith.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherHasNoInterfaces.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherHasNoSuperclasses.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherHasSimpleName.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherIsInterface.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherIsStatic.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherNamed.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherOr.java' bugCount='0' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherPropertyName.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherPublic.java' bugCount='0' size='9'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherReflectingOn.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherReturnType.java' bugCount='0' size='24'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherStrictSubtypeOf.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MatcherVisibility.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/MethodNotFoundException.java' bugCount='0' size='25'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectedConstructors.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectedConstructorsImpl.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectedField.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectedFields.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectedFieldsImpl.java' bugCount='0' size='31'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectedMembers.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectedMembersImpl.java' bugCount='0' size='47'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectedMethods.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectedMethodsImpl.java' bugCount='0' size='30'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectedSuperclassesAndInterfaces.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectedSuperclassesAndInterfacesImpl.java' bugCount='0' size='15'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectedTypeFactory.java' bugCount='0' size='8'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectedTypeFactoryImpl.java' bugCount='0' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectionMatcher.java' bugCount='0' size='18'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectionMatchers.java' bugCount='0' size='134'></FileStats><FileStats path='com/lexicalscope/fluentreflection/ReflectionRuntimeException.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/SecurityException.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/StringHelpers.java' bugCount='0' size='9'></FileStats><FileStats path='com/lexicalscope/fluentreflection/TypeHierarchyCalculation.java' bugCount='0' size='35'></FileStats><FileStats path='com/lexicalscope/fluentreflection/TypeToken.java' bugCount='0' size='9'></FileStats><FileStats path='com/lexicalscope/fluentreflection/Visibility.java' bugCount='0' size='30'></FileStats><FileStats path='com/lexicalscope/fluentreflection/bean/BeanMap.java' bugCount='0' size='199'></FileStats><FileStats path='com/lexicalscope/fluentreflection/bean/BeanMapBuilder.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/bean/BeanMapBuilderImpl.java' bugCount='0' size='32'></FileStats><FileStats path='com/lexicalscope/fluentreflection/bean/MapBean.java' bugCount='0' size='90'></FileStats><FileStats path='com/lexicalscope/fluentreflection/dynamicproxy/CallIfUnmatchedException.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/dynamicproxy/CannotProxyThisException.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/dynamicproxy/FluentProxy.java' bugCount='0' size='8'></FileStats><FileStats path='com/lexicalscope/fluentreflection/dynamicproxy/Implementing.java' bugCount='0' size='188'></FileStats><FileStats path='com/lexicalscope/fluentreflection/dynamicproxy/MethodBinding.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/dynamicproxy/MethodBody.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/dynamicproxy/ProxyImplementation.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/dynamicproxy/QueryMethod.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/annotations/Beta.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/annotations/GwtCompatible.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/annotations/GwtIncompatible.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/annotations/VisibleForTesting.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Ascii.java' bugCount='0' size='63'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/CaseFormat.java' bugCount='0' size='77'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/CharMatcher.java' bugCount='0' size='504'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Charsets.java' bugCount='0' size='16'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Defaults.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Enums.java' bugCount='0' size='26'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Equivalence.java' bugCount='0' size='71'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Equivalences.java' bugCount='0' size='35'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/FinalizablePhantomReference.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/FinalizableReference.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/FinalizableReferenceQueue.java' bugCount='1' bugHash='8d5b277f9438e86ac9604a723ec488bb' size='92'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/FinalizableSoftReference.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/FinalizableWeakReference.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Function.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/FunctionalEquivalence.java' bugCount='0' size='24'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Functions.java' bugCount='0' size='168'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Joiner.java' bugCount='0' size='153'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Objects.java' bugCount='0' size='49'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Optional.java' bugCount='0' size='81'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/PairwiseEquivalence.java' bugCount='0' size='31'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Platform.java' bugCount='0' size='18'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Preconditions.java' bugCount='1' bugHash='9aaa43564bf60ecbebd5533826f70dc0' size='95'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Predicate.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Predicates.java' bugCount='0' size='287'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Splitter.java' bugCount='0' size='248'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Stopwatch.java' bugCount='0' size='61'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Strings.java' bugCount='0' size='34'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Supplier.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Suppliers.java' bugCount='1' bugHash='0c61acbdce46a66d4c1651c9ec83e8b3' size='104'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Throwables.java' bugCount='0' size='54'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/Ticker.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/base/internal/Finalizer.java' bugCount='0' size='63'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/cache/AbstractCache.java' bugCount='0' size='73'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/cache/Cache.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/cache/CacheBuilder.java' bugCount='1' bugHash='983fee08bf54022530e85543e0a2bd21' size='308'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/cache/CacheLoader.java' bugCount='0' size='27'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/cache/CacheStats.java' bugCount='0' size='61'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/cache/ComputingCache.java' bugCount='2' bugHash='91a05f7e8dcce743d486c70c399c744f' size='56'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/cache/CustomConcurrentHashMap.java' bugCount='11' bugHash='c823c42cf6c943324a1a73d9c781dc59' size='2116'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/cache/ForwardingCache.java' bugCount='0' size='37'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/cache/RemovalCause.java' bugCount='0' size='45'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/cache/RemovalListener.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/cache/RemovalListeners.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/cache/RemovalNotification.java' bugCount='0' size='32'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractBiMap.java' bugCount='0' size='256'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractIndexedListIterator.java' bugCount='0' size='29'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractIterator.java' bugCount='0' size='51'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractLinkedIterator.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractListMultimap.java' bugCount='0' size='23'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractMapBasedMultiset.java' bugCount='0' size='210'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractMapEntry.java' bugCount='0' size='18'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractMultimap.java' bugCount='2' bugHash='bc77cd014959934bf2f8b8a38ca86de4' size='700'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractMultiset.java' bugCount='0' size='77'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractSetMultimap.java' bugCount='0' size='26'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractSortedMultiset.java' bugCount='0' size='65'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/AbstractSortedSetMultimap.java' bugCount='0' size='25'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ArrayListMultimap.java' bugCount='0' size='67'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ArrayTable.java' bugCount='0' size='389'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/AsynchronousComputationException.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BiMap.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BoundType.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstAggregate.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstBalancePolicy.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstCountBasedBalancePolicies.java' bugCount='0' size='109'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstInOrderPath.java' bugCount='0' size='61'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstModificationResult.java' bugCount='0' size='33'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstModifier.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstMutationResult.java' bugCount='0' size='54'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstMutationRule.java' bugCount='0' size='18'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstNode.java' bugCount='0' size='35'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstNodeFactory.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstOperations.java' bugCount='1' bugHash='c5f623a3b4ce49a351bb29d4bcf9bc98' size='100'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstPath.java' bugCount='0' size='17'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstPathFactory.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstRangeOps.java' bugCount='0' size='77'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/BstSide.java' bugCount='0' size='24'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ByFunctionOrdering.java' bugCount='0' size='22'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ClassToInstanceMap.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Collections2.java' bugCount='0' size='127'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ComparatorOrdering.java' bugCount='0' size='26'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ComparisonChain.java' bugCount='0' size='68'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/CompoundOrdering.java' bugCount='0' size='33'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ComputationException.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ComputingConcurrentHashMap.java' bugCount='2' bugHash='43b007ef33a95052e1049d2558502bd3' size='209'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ConcurrentHashMultiset.java' bugCount='2' bugHash='f227c4d1714b0c41844cfd885c6a9740' size='262'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Constraint.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Constraints.java' bugCount='0' size='190'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ContiguousSet.java' bugCount='0' size='45'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Count.java' bugCount='0' size='30'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/CustomConcurrentHashMap.java' bugCount='13' bugHash='d2dcb690461cc452202a1ebb5bbcc09a' size='1976'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Cut.java' bugCount='2' bugHash='89410e5d9aab10b5a18c8050bea7477c' size='203'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/DescendingImmutableSortedMultiset.java' bugCount='2' bugHash='2ba73c99f5a57c821c82e390a2559f36' size='36'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/DiscreteDomain.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/DiscreteDomains.java' bugCount='0' size='91'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/EmptyContiguousSet.java' bugCount='0' size='62'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/EmptyImmutableList.java' bugCount='0' size='77'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/EmptyImmutableListMultimap.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/EmptyImmutableMap.java' bugCount='0' size='40'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/EmptyImmutableMultiset.java' bugCount='0' size='23'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/EmptyImmutableSet.java' bugCount='0' size='42'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/EmptyImmutableSetMultimap.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/EmptyImmutableSortedMultiset.java' bugCount='0' size='35'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/EmptyImmutableSortedSet.java' bugCount='0' size='48'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/EnumBiMap.java' bugCount='0' size='52'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/EnumHashBiMap.java' bugCount='0' size='41'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/EnumMultiset.java' bugCount='0' size='44'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/EvictionListeners.java' bugCount='0' size='22'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ExplicitOrdering.java' bugCount='0' size='32'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingCollection.java' bugCount='0' size='68'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingConcurrentMap.java' bugCount='0' size='15'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingIterator.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingList.java' bugCount='0' size='53'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingListIterator.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingListMultimap.java' bugCount='0' size='16'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingMap.java' bugCount='0' size='98'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingMapEntry.java' bugCount='0' size='27'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingMultimap.java' bugCount='0' size='47'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingMultiset.java' bugCount='0' size='71'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingObject.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingQueue.java' bugCount='0' size='29'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingSet.java' bugCount='0' size='15'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingSetMultimap.java' bugCount='0' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingSortedMap.java' bugCount='0' size='51'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingSortedSet.java' bugCount='0' size='49'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingSortedSetMultimap.java' bugCount='0' size='22'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ForwardingTable.java' bugCount='0' size='50'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/GeneralRange.java' bugCount='1' bugHash='f6d9be5d0f4bece89ba1af2f5963c565' size='124'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/GenericMapMaker.java' bugCount='0' size='35'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/HashBasedTable.java' bugCount='0' size='56'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/HashBiMap.java' bugCount='0' size='39'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/HashMultimap.java' bugCount='0' size='61'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/HashMultiset.java' bugCount='0' size='47'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Hashing.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableAsList.java' bugCount='1' bugHash='eeb0076bbe8b843dc2626b378885ea52' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableBiMap.java' bugCount='0' size='110'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableClassToInstanceMap.java' bugCount='0' size='42'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableCollection.java' bugCount='0' size='117'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableEntry.java' bugCount='0' size='15'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableEnumSet.java' bugCount='2' bugHash='bcdcd5ed1c090d736ed08f1e249ab0ec' size='43'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableList.java' bugCount='1' bugHash='0720bf5379ae34afe5d9ed1ee73fa814' size='211'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableListMultimap.java' bugCount='0' size='131'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableMap.java' bugCount='0' size='111'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableMultimap.java' bugCount='0' size='217'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableMultiset.java' bugCount='1' bugHash='049d7d4ea6ecb8a99d6d366ccfbdeb26' size='220'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSet.java' bugCount='0' size='224'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSetMultimap.java' bugCount='0' size='173'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedAsList.java' bugCount='1' bugHash='8665ec4d9d1b0dba02ebc1204ce44cbc' size='42'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMap.java' bugCount='4' bugHash='f4a5603cd57bf688562d4038eaf2b25d' size='284'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMapFauxverideShim.java' bugCount='0' size='15'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMultiset.java' bugCount='0' size='181'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedMultisetFauxverideShim.java' bugCount='0' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedSet.java' bugCount='0' size='159'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ImmutableSortedSetFauxverideShim.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Interner.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Interners.java' bugCount='0' size='56'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Iterables.java' bugCount='0' size='352'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Iterators.java' bugCount='0' size='456'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/LexicographicalOrdering.java' bugCount='0' size='33'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/LinkedHashMultimap.java' bugCount='0' size='174'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/LinkedHashMultiset.java' bugCount='0' size='47'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/LinkedListMultimap.java' bugCount='1' bugHash='000ceb3232c359cd9ffda00486323c76' size='646'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ListMultimap.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Lists.java' bugCount='0' size='456'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/MapConstraint.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/MapConstraints.java' bugCount='1' bugHash='07c1124edbae55e955e23ae3da655610' size='410'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/MapDifference.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/MapEvictionListener.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/MapMaker.java' bugCount='1' bugHash='13108caa03372b9128d5673a533ef7c2' size='301'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Maps.java' bugCount='1' bugHash='6e7e4f6d842e4a5610c91ecf4adfebca' size='741'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/MinMaxPriorityQueue.java' bugCount='0' size='382'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Multimap.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Multimaps.java' bugCount='3' bugHash='7e52a0e4ae7351131cf7efc10f1ddbbe' size='942'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Multiset.java' bugCount='0' size='24'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Multisets.java' bugCount='0' size='388'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/MutableClassToInstanceMap.java' bugCount='0' size='29'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/NaturalOrdering.java' bugCount='0' size='27'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/NullsFirstOrdering.java' bugCount='0' size='32'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/NullsLastOrdering.java' bugCount='0' size='32'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ObjectArrays.java' bugCount='0' size='45'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Ordering.java' bugCount='0' size='164'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/PeekingIterator.java' bugCount='0' size='4'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Platform.java' bugCount='0' size='16'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Range.java' bugCount='0' size='92'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Ranges.java' bugCount='0' size='58'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/RegularContiguousSet.java' bugCount='0' size='96'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableBiMap.java' bugCount='3' bugHash='c82be4040e4d5b230ef43f81b600df15' size='25'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableList.java' bugCount='1' bugHash='2c31054ba4ec0a8701318d10f96a7df1' size='96'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMap.java' bugCount='6' bugHash='78906ccbc3ef0eb22639243c38f51640' size='148'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableMultiset.java' bugCount='3' bugHash='10f34a89a7bafbb665ddb69917da79e3' size='39'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSet.java' bugCount='4' bugHash='585906f010ae324c43b6c79ebc4995bb' size='23'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSortedMultiset.java' bugCount='2' bugHash='fd725f14c1ee02d16cb19529a3ca4733' size='96'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/RegularImmutableSortedSet.java' bugCount='1' bugHash='659be79fde6ec83017e86cd677750762' size='108'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ReverseNaturalOrdering.java' bugCount='0' size='38'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/ReverseOrdering.java' bugCount='0' size='34'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/RowSortedTable.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Serialization.java' bugCount='0' size='86'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/SetMultimap.java' bugCount='0' size='7'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Sets.java' bugCount='0' size='426'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableList.java' bugCount='1' bugHash='b21abb4f580d64892efcff442b4d98b2' size='82'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableMap.java' bugCount='4' bugHash='61c11ebf12153b2d7e747f19ecc962e6' size='78'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/SingletonImmutableSet.java' bugCount='3' bugHash='bd27a27d8bc7c165d7d11e223f097ac6' size='51'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/SortedIterable.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/SortedIterables.java' bugCount='0' size='95'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/SortedLists.java' bugCount='0' size='122'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/SortedMapDifference.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/SortedMaps.java' bugCount='0' size='130'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/SortedMultiset.java' bugCount='0' size='12'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/SortedMultisets.java' bugCount='0' size='96'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/SortedSetMultimap.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/SortedTreeMultiset.java' bugCount='0' size='254'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/StandardRowSortedTable.java' bugCount='0' size='63'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/StandardTable.java' bugCount='1' bugHash='7c44194e3a97ccc2cb0645dd3af7f353' size='767'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Synchronized.java' bugCount='1' bugHash='c5d40b07ea19bd276620184bcf97ca76' size='763'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Table.java' bugCount='0' size='28'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/Tables.java' bugCount='1' bugHash='f89c976f1c10151114ed32762bb2622c' size='255'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/TransformedImmutableList.java' bugCount='0' size='67'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/TreeBasedTable.java' bugCount='0' size='183'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/TreeMultimap.java' bugCount='0' size='66'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/TreeMultiset.java' bugCount='2' bugHash='ba9e4b5c966594fc8c8de716febdf90f' size='91'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/UnmodifiableIterator.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/UnmodifiableListIterator.java' bugCount='0' size='7'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/UsingToStringOrdering.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/collect/WellBehavedMap.java' bugCount='0' size='42'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/eventbus/AllowConcurrentEvents.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/eventbus/AnnotatedHandlerFinder.java' bugCount='0' size='25'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/eventbus/AsyncEventBus.java' bugCount='0' size='36'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/eventbus/DeadEvent.java' bugCount='0' size='12'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/eventbus/EventBus.java' bugCount='0' size='123'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/eventbus/EventHandler.java' bugCount='0' size='37'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/eventbus/HandlerFindingStrategy.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/eventbus/Subscribe.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/eventbus/SynchronizedEventHandler.java' bugCount='0' size='7'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/AppendableWriter.java' bugCount='0' size='53'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/ByteArrayDataInput.java' bugCount='0' size='16'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/ByteArrayDataOutput.java' bugCount='0' size='16'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/ByteProcessor.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/ByteStreams.java' bugCount='0' size='392'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/CharStreams.java' bugCount='0' size='145'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/Closeables.java' bugCount='0' size='22'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/CountingInputStream.java' bugCount='0' size='35'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/CountingOutputStream.java' bugCount='0' size='15'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/FileBackedOutputStream.java' bugCount='2' bugHash='da1e57decbf08dc15791dd2cedf046fe' size='100'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/Files.java' bugCount='1' bugHash='d5aff9995787aa233cc64f3abf1f019c' size='172'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/Flushables.java' bugCount='0' size='20'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/InputSupplier.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/LimitInputStream.java' bugCount='0' size='44'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/LineBuffer.java' bugCount='0' size='36'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/LineProcessor.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/LineReader.java' bugCount='0' size='36'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/LittleEndianDataInputStream.java' bugCount='0' size='58'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/LittleEndianDataOutputStream.java' bugCount='0' size='46'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/MultiInputStream.java' bugCount='0' size='50'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/MultiReader.java' bugCount='0' size='39'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/NullOutputStream.java' bugCount='0' size='7'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/OutputSupplier.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/PatternFilenameFilter.java' bugCount='0' size='11'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/io/Resources.java' bugCount='0' size='34'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/net/HostAndPort.java' bugCount='0' size='79'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/net/HostSpecifier.java' bugCount='0' size='42'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/net/InetAddresses.java' bugCount='1' bugHash='54f6d84dac862611ae987bb937c8cb1a' size='330'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/net/InternetDomainName.java' bugCount='0' size='116'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/net/TldPatterns.java' bugCount='0' size='11'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/primitives/Booleans.java' bugCount='0' size='177'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/primitives/Bytes.java' bugCount='0' size='147'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/primitives/Chars.java' bugCount='0' size='210'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/primitives/Doubles.java' bugCount='0' size='192'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/primitives/Floats.java' bugCount='0' size='192'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/primitives/Ints.java' bugCount='0' size='210'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/primitives/Longs.java' bugCount='0' size='200'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/primitives/Primitives.java' bugCount='0' size='38'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/primitives/Shorts.java' bugCount='0' size='210'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/primitives/SignedBytes.java' bugCount='0' size='58'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/primitives/UnsignedBytes.java' bugCount='0' size='137'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/primitives/UnsignedLongs.java' bugCount='0' size='131'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/AbstractCheckedFuture.java' bugCount='0' size='23'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/AbstractExecutionThreadService.java' bugCount='0' size='68'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/AbstractFuture.java' bugCount='0' size='97'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/AbstractIdleService.java' bugCount='0' size='68'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/AbstractListenableFuture.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/AbstractListeningExecutorService.java' bugCount='1' bugHash='7134430322eef78aaa3b216e06938fcf' size='124'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/AbstractService.java' bugCount='0' size='104'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/Atomics.java' bugCount='0' size='11'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/Callables.java' bugCount='0' size='11'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/CheckedFuture.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ExecutionError.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ExecutionList.java' bugCount='0' size='51'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/FakeTimeLimiter.java' bugCount='0' size='7'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ForwardingBlockingQueue.java' bugCount='0' size='23'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ForwardingCheckedFuture.java' bugCount='0' size='25'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ForwardingExecutorService.java' bugCount='0' size='34'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ForwardingFuture.java' bugCount='0' size='26'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ForwardingListenableFuture.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ForwardingListeningExecutorService.java' bugCount='0' size='16'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ForwardingService.java' bugCount='0' size='22'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/FutureCallback.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/Futures.java' bugCount='0' size='446'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/JdkFutureAdapters.java' bugCount='0' size='61'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ListenableFuture.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ListenableFutureTask.java' bugCount='0' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ListeningExecutorService.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ListeningScheduledExecutorService.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/Monitor.java' bugCount='2' bugHash='309a763a39fe86493e71ffce0b25b045' size='364'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/MoreExecutors.java' bugCount='0' size='132'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/Service.java' bugCount='0' size='27'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/SettableFuture.java' bugCount='0' size='9'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/SimpleTimeLimiter.java' bugCount='0' size='84'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/ThreadFactoryBuilder.java' bugCount='1' bugHash='0289b893287f36d1ac52d58967af537a' size='61'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/TimeLimiter.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/UncaughtExceptionHandlers.java' bugCount='0' size='18'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/UncheckedExecutionException.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/UncheckedTimeoutException.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/UninterruptibleFuture.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guava/util/concurrent/Uninterruptibles.java' bugCount='0' size='88'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/AbstractModule.java' bugCount='0' size='65'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/Binder.java' bugCount='0' size='25'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/Binding.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/BindingAnnotation.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/ConfigurationException.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/CreationException.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/Exposed.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/Guice.java' bugCount='0' size='11'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/ImplementedBy.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/Inject.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/Injector.java' bugCount='0' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/Key.java' bugCount='0' size='185'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/MembersInjector.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/Module.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/OutOfScopeException.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/PrivateBinder.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/PrivateModule.java' bugCount='0' size='72'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/ProvidedBy.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/Provider.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/Provides.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/ProvisionException.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/Scope.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/ScopeAnnotation.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/Scopes.java' bugCount='0' size='81'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/Singleton.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/Stage.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/TypeLiteral.java' bugCount='0' size='119'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/binder/AnnotatedBindingBuilder.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/binder/AnnotatedConstantBindingBuilder.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/binder/AnnotatedElementBuilder.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/binder/ConstantBindingBuilder.java' bugCount='0' size='12'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/binder/LinkedBindingBuilder.java' bugCount='0' size='11'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/binder/ScopedBindingBuilder.java' bugCount='0' size='4'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/AbstractBindingBuilder.java' bugCount='0' size='67'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/AbstractBindingProcessor.java' bugCount='0' size='77'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/AbstractProcessor.java' bugCount='0' size='29'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/Annotations.java' bugCount='0' size='82'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/BindingBuilder.java' bugCount='0' size='88'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/BindingImpl.java' bugCount='0' size='51'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/BindingProcessor.java' bugCount='0' size='100'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/BoundProviderFactory.java' bugCount='0' size='25'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/BytecodeGen.java' bugCount='1' bugHash='c9c05c35acc9ee407186ec4a1f532bfe' size='116'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/CircularDependencyProxy.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ConstantBindingBuilderImpl.java' bugCount='0' size='61'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ConstantFactory.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ConstructionContext.java' bugCount='0' size='37'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ConstructionProxy.java' bugCount='0' size='4'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ConstructionProxyFactory.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ConstructorBindingImpl.java' bugCount='0' size='102'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ConstructorInjector.java' bugCount='0' size='39'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ConstructorInjectorStore.java' bugCount='0' size='28'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ContextualCallable.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/CreationListener.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/DefaultConstructionProxyFactory.java' bugCount='0' size='32'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/DeferredLookups.java' bugCount='0' size='20'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/DelegatingInvocationHandler.java' bugCount='0' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/EncounterImpl.java' bugCount='0' size='53'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ErrorHandler.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/Errors.java' bugCount='0' size='333'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ErrorsException.java' bugCount='0' size='8'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/Exceptions.java' bugCount='0' size='17'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ExposedBindingImpl.java' bugCount='0' size='16'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ExposedKeyFactory.java' bugCount='0' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ExposureBuilder.java' bugCount='0' size='30'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/FactoryProxy.java' bugCount='0' size='23'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/FailableCache.java' bugCount='0' size='27'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/InheritingState.java' bugCount='0' size='71'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/Initializable.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/Initializables.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/Initializer.java' bugCount='0' size='66'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/InjectionRequestProcessor.java' bugCount='0' size='67'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/InjectorImpl.java' bugCount='0' size='503'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/InjectorOptionsProcessor.java' bugCount='0' size='23'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/InjectorShell.java' bugCount='0' size='145'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/InstanceBindingImpl.java' bugCount='0' size='42'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/InternalContext.java' bugCount='0' size='18'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/InternalFactory.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/InternalFactoryToProviderAdapter.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/InternalInjectorCreator.java' bugCount='0' size='151'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/LinkedBindingImpl.java' bugCount='0' size='32'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/LinkedProviderBindingImpl.java' bugCount='0' size='32'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/LookupProcessor.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/Lookups.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/MembersInjectorImpl.java' bugCount='0' size='71'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/MembersInjectorStore.java' bugCount='0' size='53'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/MessageProcessor.java' bugCount='0' size='18'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/MoreTypes.java' bugCount='0' size='236'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/Nullability.java' bugCount='0' size='9'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/PrivateElementProcessor.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/PrivateElementsImpl.java' bugCount='0' size='56'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ProcessedBindingData.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ProviderInstanceBindingImpl.java' bugCount='0' size='39'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ProviderMethod.java' bugCount='0' size='54'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ProviderMethodsModule.java' bugCount='0' size='63'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ProviderToInternalFactoryAdapter.java' bugCount='0' size='27'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/ScopeBindingProcessor.java' bugCount='0' size='18'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/Scoping.java' bugCount='0' size='133'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/SingleFieldInjector.java' bugCount='0' size='27'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/SingleMemberInjector.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/SingleMethodInjector.java' bugCount='0' size='40'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/SingleParameterInjector.java' bugCount='0' size='29'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/State.java' bugCount='0' size='55'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/TypeConverterBindingProcessor.java' bugCount='0' size='107'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/TypeListenerBindingProcessor.java' bugCount='0' size='9'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/UniqueAnnotations.java' bugCount='0' size='26'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/UntargettedBindingImpl.java' bugCount='0' size='30'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/UntargettedBindingProcessor.java' bugCount='0' size='30'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/WeakKeySet.java' bugCount='0' size='20'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/AbstractIterator.java' bugCount='0' size='50'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/AbstractMapEntry.java' bugCount='0' size='18'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/AsynchronousComputationException.java' bugCount='0' size='4'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Classes.java' bugCount='0' size='26'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Collections2.java' bugCount='0' size='12'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/ComputationException.java' bugCount='0' size='4'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/CustomConcurrentHashMap.java' bugCount='2' bugHash='8ad2fc804ec8afca5f1df21ddfac108f' size='850'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/ExpirationTimer.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/FinalizablePhantomReference.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/FinalizableReference.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/FinalizableReferenceQueue.java' bugCount='1' bugHash='20a2f04fe1a32fabb1c8053240f1d515' size='92'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/FinalizableSoftReference.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/FinalizableWeakReference.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Finalizer.java' bugCount='0' size='49'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Function.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Hashing.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableCollection.java' bugCount='0' size='131'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableEntry.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableList.java' bugCount='0' size='294'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableMap.java' bugCount='9' bugHash='47e008ba64eb0a9edcfbbfc1f3603177' size='357'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/ImmutableSet.java' bugCount='0' size='296'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Iterables.java' bugCount='0' size='43'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Iterators.java' bugCount='0' size='174'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Join.java' bugCount='0' size='67'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Lists.java' bugCount='0' size='29'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/MapMaker.java' bugCount='1' bugHash='ab3223a2881ac6a15d3f6d4fcd264de4' size='492'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Maps.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/NullOutputException.java' bugCount='0' size='4'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Nullable.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/ObjectArrays.java' bugCount='0' size='7'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Objects.java' bugCount='0' size='7'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Preconditions.java' bugCount='0' size='110'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Sets.java' bugCount='0' size='59'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/SourceProvider.java' bugCount='0' size='24'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/StackTraceElements.java' bugCount='0' size='16'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Stopwatch.java' bugCount='0' size='15'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/Strings.java' bugCount='0' size='9'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/ToStringBuilder.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/internal/util/UnmodifiableIterator.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/matcher/AbstractMatcher.java' bugCount='4' bugHash='72c05f672a1cc1a2ab88c82459099093' size='42'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/matcher/Matcher.java' bugCount='0' size='4'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/matcher/Matchers.java' bugCount='2' bugHash='30e1bb01f27fcd3dca890423b2f2413e' size='201'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/name/Named.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/name/NamedImpl.java' bugCount='0' size='20'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/name/Names.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/BindingScopingVisitor.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/BindingTargetVisitor.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/ConstructorBinding.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/ConvertedConstantBinding.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/DefaultBindingScopingVisitor.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/DefaultBindingTargetVisitor.java' bugCount='0' size='23'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/DefaultElementVisitor.java' bugCount='0' size='29'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/Dependency.java' bugCount='0' size='42'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/DisableCircularProxiesOption.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/Element.java' bugCount='0' size='4'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/ElementVisitor.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/Elements.java' bugCount='0' size='192'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/ExposedBinding.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/HasDependencies.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/InjectionListener.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/InjectionPoint.java' bugCount='1' bugHash='30623524612a67e0981e4e2d439901be' size='377'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/InjectionRequest.java' bugCount='0' size='23'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/InstanceBinding.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/LinkedKeyBinding.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/MembersInjectorLookup.java' bugCount='0' size='39'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/Message.java' bugCount='0' size='46'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/PrivateElements.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/ProviderBinding.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/ProviderInstanceBinding.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/ProviderKeyBinding.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/ProviderLookup.java' bugCount='0' size='38'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/ProviderWithDependencies.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/ProviderWithExtensionVisitor.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/RequireExplicitBindingsOption.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/ScopeBinding.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/StaticInjectionRequest.java' bugCount='0' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/Toolable.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/TypeConverter.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/TypeConverterBinding.java' bugCount='0' size='23'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/TypeEncounter.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/TypeListener.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/TypeListenerBinding.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/spi/UntargettedBinding.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/util/Modules.java' bugCount='0' size='168'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/util/Node.java' bugCount='0' size='43'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/util/Providers.java' bugCount='1' bugHash='b618b9b6e6f4c507187f2843d4eca808' size='47'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/guice/util/Types.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/Lambda.java' bugCount='0' size='234'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/collection/AbstractLambdaCollection.java' bugCount='0' size='67'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaCollection.java' bugCount='1' bugHash='0ed699c37d23a157006db32f14e32af4' size='73'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaCollections.java' bugCount='0' size='17'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaGroup.java' bugCount='0' size='39'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaIterable.java' bugCount='1' bugHash='beacac8cbb9b6531f061382f03b3aab3' size='94'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaIterator.java' bugCount='0' size='36'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaList.java' bugCount='1' bugHash='bf97290b91fbc72d8a7da4d07aab3ae4' size='73'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaMap.java' bugCount='1' bugHash='73409de5f9133254e8496934949e5d61' size='68'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/collection/LambdaSet.java' bugCount='1' bugHash='d5d363c3b4f2be25677b23586dcadfa7' size='22'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/Aggregator.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/Chooser.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/ChooserOnArgument.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/Concat.java' bugCount='0' size='27'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/InitializedPairAggregator.java' bugCount='0' size='8'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/Max.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/MaxOnArgument.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/Min.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/MinOnArgument.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/PairAggregator.java' bugCount='0' size='9'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/ProxyAggregator.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/Sum.java' bugCount='0' size='30'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/SumDouble.java' bugCount='0' size='8'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/SumInteger.java' bugCount='0' size='8'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/aggregate/SumLong.java' bugCount='0' size='8'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/argument/Argument.java' bugCount='0' size='22'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/argument/ArgumentConversionException.java' bugCount='0' size='7'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/argument/ArgumentsFactory.java' bugCount='0' size='112'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/argument/Invocation.java' bugCount='0' size='68'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/argument/InvocationException.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/argument/InvocationSequence.java' bugCount='0' size='41'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/argument/ProxyArgument.java' bugCount='1' bugHash='3445c63460b32df7cde074ab455dbfad' size='12'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/AbstractClosure.java' bugCount='0' size='160'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/Closure.java' bugCount='0' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/Closure0.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/Closure1.java' bugCount='0' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/Closure2.java' bugCount='0' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/Closure3.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/Closure4.java' bugCount='0' size='23'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/ClosureResult.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/ClosuresFactory.java' bugCount='0' size='34'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/DelayedClosure.java' bugCount='0' size='31'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/Invokable.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/InvokableConstructor.java' bugCount='0' size='12'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/InvokableMethod.java' bugCount='0' size='12'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/ProxyClosure.java' bugCount='0' size='18'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/Switcher.java' bugCount='0' size='70'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/closure/WrongClosureInvocationException.java' bugCount='0' size='8'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/compare/ArgumentComparator.java' bugCount='1' bugHash='4edbd50dbb2613a9979ef0bc998aaf42' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/compare/ComparatorUtil.java' bugCount='0' size='16'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/compare/PropertyComparator.java' bugCount='0' size='8'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/convert/AliasedArgumentConverter.java' bugCount='0' size='31'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/convert/ArgumentConverter.java' bugCount='0' size='11'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/convert/ConstructorArgumentConverter.java' bugCount='0' size='28'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/convert/Converter.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/convert/ConverterIterator.java' bugCount='0' size='15'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/convert/DefaultStringConverter.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/convert/ProjectConverter.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/convert/PropertyExtractor.java' bugCount='0' size='8'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/convert/StringConverter.java' bugCount='0' size='1'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/convert/StringLengthConverter.java' bugCount='0' size='4'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/convert/StringPropertyExtractor.java' bugCount='0' size='9'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/matcher/AndMatcher.java' bugCount='0' size='11'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/matcher/HasArgumentWithValue.java' bugCount='0' size='36'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/matcher/HasNestedPropertyWithValue.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/matcher/LambdaJMatcher.java' bugCount='0' size='9'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/function/matcher/OrMatcher.java' bugCount='0' size='11'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/group/ArgumentGroupCondition.java' bugCount='0' size='25'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/group/Group.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/group/GroupComparator.java' bugCount='1' bugHash='9d1d28ac9c801042a64b82db558d541a' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/group/GroupCondition.java' bugCount='0' size='31'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/group/GroupConditions.java' bugCount='0' size='16'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/group/GroupImpl.java' bugCount='1' bugHash='d01913fc4e7902ab389dfc5029823ce1' size='58'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/group/GroupItem.java' bugCount='0' size='45'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/group/Groups.java' bugCount='0' size='22'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/group/LeafGroup.java' bugCount='0' size='37'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/group/StringGroupCondition.java' bugCount='0' size='21'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/proxy/ClassImposterizer.java' bugCount='0' size='62'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/proxy/InvocationInterceptor.java' bugCount='0' size='17'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/proxy/ProxyIterator.java' bugCount='0' size='24'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/proxy/ProxyUtil.java' bugCount='0' size='33'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/proxy/UnproxableClassException.java' bugCount='0' size='5'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/util/IntrospectionException.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/util/IntrospectionUtil.java' bugCount='2' bugHash='98311f2d3cdddd645d3be259c37b7d22' size='66'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/util/NotUniqueItemException.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/util/iterator/IteratorFactory.java' bugCount='0' size='35'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/util/iterator/MatchingIterator.java' bugCount='0' size='29'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/util/iterator/ResettableIterator.java' bugCount='0' size='6'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/util/iterator/ResettableIteratorOnArray.java' bugCount='1' bugHash='56ce8e44a3cbb50501a888a119630291' size='16'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/util/iterator/ResettableIteratorOnIterable.java' bugCount='0' size='15'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lamdaj/util/iterator/ResettableIteratorOnIterator.java' bugCount='0' size='26'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/AnnotationUtils.java' bugCount='0' size='152'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/ArrayUtils.java' bugCount='0' size='1477'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/BitField.java' bugCount='0' size='48'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/BooleanUtils.java' bugCount='8' bugHash='51865528d464ffdf37997fc725459fcb' size='231'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/CharEncoding.java' bugCount='0' size='15'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/CharRange.java' bugCount='0' size='111'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/CharSequenceUtils.java' bugCount='0' size='44'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/CharSet.java' bugCount='0' size='77'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/CharSetUtils.java' bugCount='0' size='54'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/CharUtils.java' bugCount='0' size='87'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/ClassUtils.java' bugCount='0' size='324'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/EnumUtils.java' bugCount='1' bugHash='7c470f3ce3476d07bbaf61b72b825e10' size='47'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/JavaVersion.java' bugCount='0' size='57'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/LocaleUtils.java' bugCount='0' size='95'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/ObjectUtils.java' bugCount='0' size='138'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/RandomStringUtils.java' bugCount='0' size='67'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/Range.java' bugCount='0' size='129'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/SerializationException.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/SerializationUtils.java' bugCount='0' size='72'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/StringEscapeUtils.java' bugCount='0' size='93'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/StringUtils.java' bugCount='0' size='1456'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/SystemUtils.java' bugCount='1' bugHash='c8dd799f990721d7a0618d00fc199974' size='183'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/Validate.java' bugCount='0' size='172'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/builder/Builder.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/builder/CompareToBuilder.java' bugCount='0' size='287'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/builder/EqualsBuilder.java' bugCount='0' size='299'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/builder/HashCodeBuilder.java' bugCount='0' size='194'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/builder/IDKey.java' bugCount='0' size='17'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/builder/ReflectionToStringBuilder.java' bugCount='0' size='113'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/builder/StandardToStringStyle.java' bugCount='0' size='105'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/builder/ToStringBuilder.java' bugCount='0' size='203'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/builder/ToStringStyle.java' bugCount='0' size='671'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/concurrent/AtomicInitializer.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/concurrent/AtomicSafeInitializer.java' bugCount='0' size='13'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/concurrent/BackgroundInitializer.java' bugCount='0' size='61'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/concurrent/BasicThreadFactory.java' bugCount='0' size='94'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/concurrent/CallableBackgroundInitializer.java' bugCount='0' size='18'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/concurrent/ConcurrentException.java' bugCount='0' size='11'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/concurrent/ConcurrentInitializer.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/concurrent/ConcurrentRuntimeException.java' bugCount='0' size='11'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/concurrent/ConcurrentUtils.java' bugCount='0' size='74'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/concurrent/ConstantInitializer.java' bugCount='0' size='22'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/concurrent/LazyInitializer.java' bugCount='0' size='14'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/concurrent/MultiBackgroundInitializer.java' bugCount='0' size='77'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/concurrent/TimedSemaphore.java' bugCount='0' size='90'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/event/EventListenerSupport.java' bugCount='0' size='73'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/event/EventUtils.java' bugCount='0' size='36'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/exception/CloneFailedException.java' bugCount='0' size='11'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/exception/ContextedException.java' bugCount='0' size='48'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/exception/ContextedRuntimeException.java' bugCount='0' size='48'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/exception/DefaultExceptionContext.java' bugCount='0' size='64'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/exception/ExceptionContext.java' bugCount='0' size='8'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/exception/ExceptionUtils.java' bugCount='0' size='172'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/math/Fraction.java' bugCount='0' size='320'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/math/IEEE754rUtils.java' bugCount='0' size='71'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/math/NumberUtils.java' bugCount='1' bugHash='131d7e021ad74d42de84fe3d95cc0a4d' size='441'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/mutable/Mutable.java' bugCount='0' size='3'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/mutable/MutableBoolean.java' bugCount='0' size='45'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/mutable/MutableByte.java' bugCount='0' size='71'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/mutable/MutableDouble.java' bugCount='0' size='72'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/mutable/MutableFloat.java' bugCount='0' size='71'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/mutable/MutableInt.java' bugCount='0' size='69'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/mutable/MutableLong.java' bugCount='0' size='69'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/mutable/MutableObject.java' bugCount='0' size='28'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/mutable/MutableShort.java' bugCount='0' size='71'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/reflect/ConstructorUtils.java' bugCount='0' size='59'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/reflect/FieldUtils.java' bugCount='0' size='159'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/reflect/MemberUtils.java' bugCount='0' size='56'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/reflect/MethodUtils.java' bugCount='0' size='128'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/reflect/TypeUtils.java' bugCount='0' size='306'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/CompositeFormat.java' bugCount='0' size='19'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/ExtendedMessageFormat.java' bugCount='1' bugHash='6feb73d014af50a6b080892d065fe821' size='213'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/FormatFactory.java' bugCount='0' size='2'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/FormattableUtils.java' bugCount='0' size='24'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/StrBuilder.java' bugCount='0' size='895'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/StrLookup.java' bugCount='0' size='37'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/StrMatcher.java' bugCount='0' size='105'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/StrSubstitutor.java' bugCount='0' size='255'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/StrTokenizer.java' bugCount='1' bugHash='f796daffa34a1d54cfe4d4da48fd1c92' size='327'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/WordUtils.java' bugCount='0' size='125'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/translate/AggregateTranslator.java' bugCount='0' size='12'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/translate/CharSequenceTranslator.java' bugCount='0' size='37'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/translate/CodePointTranslator.java' bugCount='0' size='10'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/translate/EntityArrays.java' bugCount='0' size='50'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/translate/LookupTranslator.java' bugCount='0' size='31'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/translate/NumericEntityEscaper.java' bugCount='0' size='31'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/translate/NumericEntityUnescaper.java' bugCount='0' size='54'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/translate/OctalUnescaper.java' bugCount='0' size='18'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/translate/UnicodeEscaper.java' bugCount='0' size='37'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/text/translate/UnicodeUnescaper.java' bugCount='0' size='20'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/time/DateFormatUtils.java' bugCount='0' size='59'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/time/DateUtils.java' bugCount='1' bugHash='c66d504067a131d76e882751a32667e8' size='391'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/time/DurationFormatUtils.java' bugCount='0' size='273'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/time/FastDateFormat.java' bugCount='0' size='505'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/time/FormatCache.java' bugCount='0' size='67'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/time/StopWatch.java' bugCount='0' size='85'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/tuple/ImmutablePair.java' bugCount='0' size='17'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/tuple/MutablePair.java' bugCount='0' size='28'></FileStats><FileStats path='com/lexicalscope/fluentreflection/internal/lang3/tuple/Pair.java' bugCount='0' size='28'></FileStats><FileStats path='com/lexicalscope/fluentreflection/package-info.java' bugCount='0' size='1'></FileStats><PackageStats total_size='1' package='com.google.common.base' total_bugs='0' total_types='1'><ClassStats sourceFile='package-info.java' bugs='0' class='com.google.common.base.package-info' interface='true' size='1'></ClassStats></PackageStats><PackageStats total_size='1' package='com.google.common.cache' total_bugs='0' total_types='1'><ClassStats sourceFile='package-info.java' bugs='0' class='com.google.common.cache.package-info' interface='true' size='1'></ClassStats></PackageStats><PackageStats total_size='1' package='com.google.common.collect' total_bugs='0' total_types='1'><ClassStats sourceFile='package-info.java' bugs='0' class='com.google.common.collect.package-info' interface='true' size='1'></ClassStats></PackageStats><PackageStats total_size='1' package='com.google.common.io' total_bugs='0' total_types='1'><ClassStats sourceFile='package-info.java' bugs='0' class='com.google.common.io.package-info' interface='true' size='1'></ClassStats></PackageStats><PackageStats total_size='1' package='com.google.common.net' total_bugs='0' total_types='1'><ClassStats sourceFile='package-info.java' bugs='0' class='com.google.common.net.package-info' interface='true' size='1'></ClassStats></PackageStats><PackageStats total_size='1' package='com.google.common.primitives' total_bugs='0' total_types='1'><ClassStats sourceFile='package-info.java' bugs='0' class='com.google.common.primitives.package-info' interface='true' size='1'></ClassStats></PackageStats><PackageStats total_size='1' package='com.google.common.util.concurrent' total_bugs='0' total_types='1'><ClassStats sourceFile='package-info.java' bugs='0' class='com.google.common.util.concurrent.package-info' interface='true' size='1'></ClassStats></PackageStats><PackageStats total_size='1843' package='com.lexicalscope.fluentreflection' total_bugs='0' total_types='96'><ClassStats sourceFile='AbstractCall.java' bugs='0' class='com.lexicalscope.fluentreflection.AbstractCall' interface='false' size='11'></ClassStats><ClassStats sourceFile='AbstractFluentAnnotated.java' bugs='0' class='com.lexicalscope.fluentreflection.AbstractFluentAnnotated' interface='false' size='14'></ClassStats><ClassStats sourceFile='BoundFluentFieldImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.BoundFluentFieldImpl' interface='false' size='14'></ClassStats><ClassStats sourceFile='BoundFluentMemberImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.BoundFluentMemberImpl' interface='false' size='59'></ClassStats><ClassStats sourceFile='BoundFluentMemberImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.BoundFluentMemberImpl$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='BoundFluentMethodImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.BoundFluentMethodImpl' interface='false' size='14'></ClassStats><ClassStats sourceFile='Call.java' bugs='0' class='com.lexicalscope.fluentreflection.Call' interface='true' size='3'></ClassStats><ClassStats sourceFile='ClassNotFoundRuntimeException.java' bugs='0' class='com.lexicalscope.fluentreflection.ClassNotFoundRuntimeException' interface='false' size='14'></ClassStats><ClassStats sourceFile='ConstructorNotFoundRuntimeException.java' bugs='0' class='com.lexicalscope.fluentreflection.ConstructorNotFoundRuntimeException' interface='false' size='17'></ClassStats><ClassStats sourceFile='ConvertAnnotationToClass.java' bugs='0' class='com.lexicalscope.fluentreflection.ConvertAnnotationToClass' interface='false' size='7'></ClassStats><ClassStats sourceFile='ConvertClassToReflectedType.java' bugs='0' class='com.lexicalscope.fluentreflection.ConvertClassToReflectedType' interface='false' size='10'></ClassStats><ClassStats sourceFile='ConvertClassToReflectedTypeAssignableMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.ConvertClassToReflectedTypeAssignableMatcher' interface='false' size='9'></ClassStats><ClassStats sourceFile='ConvertClassToReflectedTypeMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.ConvertClassToReflectedTypeMatcher' interface='false' size='7'></ClassStats><ClassStats sourceFile='ConvertClassToSimpleName.java' bugs='0' class='com.lexicalscope.fluentreflection.ConvertClassToSimpleName' interface='false' size='9'></ClassStats><ClassStats sourceFile='ConvertConstructorToReflectedConstructor.java' bugs='0' class='com.lexicalscope.fluentreflection.ConvertConstructorToReflectedConstructor' interface='false' size='15'></ClassStats><ClassStats sourceFile='ConvertObjectToClass.java' bugs='0' class='com.lexicalscope.fluentreflection.ConvertObjectToClass' interface='false' size='9'></ClassStats><ClassStats sourceFile='ConvertReflectedFieldToBoundReflectedField.java' bugs='0' class='com.lexicalscope.fluentreflection.ConvertReflectedFieldToBoundReflectedField' interface='false' size='12'></ClassStats><ClassStats sourceFile='ConvertReflectedMethodToBoundReflectedMethod.java' bugs='0' class='com.lexicalscope.fluentreflection.ConvertReflectedMethodToBoundReflectedMethod' interface='false' size='12'></ClassStats><ClassStats sourceFile='ConvertReflectedTypeToClass.java' bugs='0' class='com.lexicalscope.fluentreflection.ConvertReflectedTypeToClass' interface='false' size='7'></ClassStats><ClassStats sourceFile='ConvertReflectedTypeToReflectedTypeAssignableMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.ConvertReflectedTypeToReflectedTypeAssignableMatcher' interface='false' size='9'></ClassStats><ClassStats sourceFile='ConvertTypeLiteralToReflectedType.java' bugs='0' class='com.lexicalscope.fluentreflection.ConvertTypeLiteralToReflectedType' interface='false' size='10'></ClassStats><ClassStats sourceFile='FieldNotFoundException.java' bugs='0' class='com.lexicalscope.fluentreflection.FieldNotFoundException' interface='false' size='25'></ClassStats><ClassStats sourceFile='FluentAnnotated.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentAnnotated' interface='true' size='5'></ClassStats><ClassStats sourceFile='FluentAnnotatedImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentAnnotatedImpl' interface='false' size='20'></ClassStats><ClassStats sourceFile='FluentClass.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentClass' interface='true' size='8'></ClassStats><ClassStats sourceFile='FluentClassImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentClassImpl' interface='false' size='115'></ClassStats><ClassStats sourceFile='FluentConstructor.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentConstructor' interface='true' size='3'></ClassStats><ClassStats sourceFile='FluentConstructorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentConstructorImpl' interface='false' size='49'></ClassStats><ClassStats sourceFile='FluentConstructorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentConstructorImpl$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='FluentFieldImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentFieldImpl' interface='false' size='85'></ClassStats><ClassStats sourceFile='FluentFieldImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentFieldImpl$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='FluentMember.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentMember' interface='true' size='14'></ClassStats><ClassStats sourceFile='FluentMethod.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentMethod' interface='true' size='3'></ClassStats><ClassStats sourceFile='FluentMethodImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentMethodImpl' interface='false' size='116'></ClassStats><ClassStats sourceFile='FluentMethodImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentMethodImpl$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='FluentObject.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentObject' interface='true' size='4'></ClassStats><ClassStats sourceFile='FluentObjectImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentObjectImpl' interface='false' size='98'></ClassStats><ClassStats sourceFile='FluentReflection.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentReflection' interface='false' size='18'></ClassStats><ClassStats sourceFile='FluentType.java' bugs='0' class='com.lexicalscope.fluentreflection.FluentType' interface='true' size='27'></ClassStats><ClassStats sourceFile='IllegalAccessRuntimeException.java' bugs='0' class='com.lexicalscope.fluentreflection.IllegalAccessRuntimeException' interface='false' size='17'></ClassStats><ClassStats sourceFile='IllegalArgumentRuntimeException.java' bugs='0' class='com.lexicalscope.fluentreflection.IllegalArgumentRuntimeException' interface='false' size='27'></ClassStats><ClassStats sourceFile='InstantiationRuntimeException.java' bugs='0' class='com.lexicalscope.fluentreflection.InstantiationRuntimeException' interface='false' size='17'></ClassStats><ClassStats sourceFile='InvocationTargetRuntimeException.java' bugs='0' class='com.lexicalscope.fluentreflection.InvocationTargetRuntimeException' interface='false' size='12'></ClassStats><ClassStats sourceFile='ListBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.ListBuilder' interface='false' size='14'></ClassStats><ClassStats sourceFile='MatcherAnd.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherAnd' interface='false' size='19'></ClassStats><ClassStats sourceFile='MatcherAnyReflectedType.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherAnyReflectedType' interface='false' size='10'></ClassStats><ClassStats sourceFile='MatcherArgumentCount.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherArgumentCount' interface='false' size='13'></ClassStats><ClassStats sourceFile='MatcherArgumentTypes.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherArgumentTypes' interface='false' size='27'></ClassStats><ClassStats sourceFile='MatcherAssignableFrom.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherAssignableFrom' interface='false' size='16'></ClassStats><ClassStats sourceFile='MatcherCallableAnnotatedWith.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherCallableAnnotatedWith' interface='false' size='13'></ClassStats><ClassStats sourceFile='MatcherConstructorReflectingOn.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherConstructorReflectingOn' interface='false' size='13'></ClassStats><ClassStats sourceFile='MatcherDeclaredBy.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherDeclaredBy' interface='false' size='13'></ClassStats><ClassStats sourceFile='MatcherFieldReflectingOn.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherFieldReflectingOn' interface='false' size='13'></ClassStats><ClassStats sourceFile='MatcherFinalMember.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherFinalMember' interface='false' size='10'></ClassStats><ClassStats sourceFile='MatcherHasInterface.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherHasInterface' interface='false' size='15'></ClassStats><ClassStats sourceFile='MatcherHasNameContaining.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherHasNameContaining' interface='false' size='13'></ClassStats><ClassStats sourceFile='MatcherHasNameEndingWith.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherHasNameEndingWith' interface='false' size='13'></ClassStats><ClassStats sourceFile='MatcherHasNameMatching.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherHasNameMatching' interface='false' size='15'></ClassStats><ClassStats sourceFile='MatcherHasNameStartingWith.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherHasNameStartingWith' interface='false' size='13'></ClassStats><ClassStats sourceFile='MatcherHasNoInterfaces.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherHasNoInterfaces' interface='false' size='10'></ClassStats><ClassStats sourceFile='MatcherHasNoSuperclasses.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherHasNoSuperclasses' interface='false' size='10'></ClassStats><ClassStats sourceFile='MatcherHasSimpleName.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherHasSimpleName' interface='false' size='13'></ClassStats><ClassStats sourceFile='MatcherIsInterface.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherIsInterface' interface='false' size='10'></ClassStats><ClassStats sourceFile='MatcherIsStatic.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherIsStatic' interface='false' size='10'></ClassStats><ClassStats sourceFile='MatcherNamed.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherNamed' interface='false' size='13'></ClassStats><ClassStats sourceFile='MatcherOr.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherOr' interface='false' size='19'></ClassStats><ClassStats sourceFile='MatcherPropertyName.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherPropertyName' interface='false' size='13'></ClassStats><ClassStats sourceFile='MatcherPublic.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherPublic' interface='false' size='9'></ClassStats><ClassStats sourceFile='MatcherReflectingOn.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherReflectingOn' interface='false' size='21'></ClassStats><ClassStats sourceFile='MatcherReturnType.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherReturnType' interface='false' size='24'></ClassStats><ClassStats sourceFile='MatcherStrictSubtypeOf.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherStrictSubtypeOf' interface='false' size='13'></ClassStats><ClassStats sourceFile='MatcherVisibility.java' bugs='0' class='com.lexicalscope.fluentreflection.MatcherVisibility' interface='false' size='13'></ClassStats><ClassStats sourceFile='MethodNotFoundException.java' bugs='0' class='com.lexicalscope.fluentreflection.MethodNotFoundException' interface='false' size='25'></ClassStats><ClassStats sourceFile='ReflectedConstructors.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectedConstructors' interface='true' size='2'></ClassStats><ClassStats sourceFile='ReflectedConstructorsImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectedConstructorsImpl' interface='false' size='13'></ClassStats><ClassStats sourceFile='ReflectedField.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectedField' interface='true' size='2'></ClassStats><ClassStats sourceFile='ReflectedFields.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectedFields' interface='true' size='3'></ClassStats><ClassStats sourceFile='ReflectedFieldsImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectedFieldsImpl' interface='false' size='31'></ClassStats><ClassStats sourceFile='ReflectedMembers.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectedMembers' interface='true' size='14'></ClassStats><ClassStats sourceFile='ReflectedMembersImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectedMembersImpl' interface='false' size='47'></ClassStats><ClassStats sourceFile='ReflectedMethods.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectedMethods' interface='true' size='3'></ClassStats><ClassStats sourceFile='ReflectedMethodsImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectedMethodsImpl' interface='false' size='30'></ClassStats><ClassStats sourceFile='ReflectedSuperclassesAndInterfaces.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectedSuperclassesAndInterfaces' interface='true' size='2'></ClassStats><ClassStats sourceFile='ReflectedSuperclassesAndInterfacesImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectedSuperclassesAndInterfacesImpl' interface='false' size='15'></ClassStats><ClassStats sourceFile='ReflectedTypeFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectedTypeFactory' interface='true' size='8'></ClassStats><ClassStats sourceFile='ReflectedTypeFactoryImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectedTypeFactoryImpl' interface='false' size='19'></ClassStats><ClassStats sourceFile='ReflectionMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectionMatcher' interface='false' size='18'></ClassStats><ClassStats sourceFile='ReflectionMatchers.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectionMatchers' interface='false' size='124'></ClassStats><ClassStats sourceFile='ReflectionMatchers.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectionMatchers$1' interface='false' size='10'></ClassStats><ClassStats sourceFile='ReflectionRuntimeException.java' bugs='0' class='com.lexicalscope.fluentreflection.ReflectionRuntimeException' interface='false' size='14'></ClassStats><ClassStats sourceFile='SecurityException.java' bugs='0' class='com.lexicalscope.fluentreflection.SecurityException' interface='false' size='14'></ClassStats><ClassStats sourceFile='StringHelpers.java' bugs='0' class='com.lexicalscope.fluentreflection.StringHelpers' interface='false' size='9'></ClassStats><ClassStats sourceFile='TypeHierarchyCalculation.java' bugs='0' class='com.lexicalscope.fluentreflection.TypeHierarchyCalculation' interface='false' size='35'></ClassStats><ClassStats sourceFile='TypeToken.java' bugs='0' class='com.lexicalscope.fluentreflection.TypeToken' interface='false' size='9'></ClassStats><ClassStats sourceFile='Visibility.java' bugs='0' class='com.lexicalscope.fluentreflection.Visibility' interface='false' size='30'></ClassStats><ClassStats sourceFile='package-info.java' bugs='0' class='com.lexicalscope.fluentreflection.package-info' interface='true' size='1'></ClassStats></PackageStats><PackageStats total_size='327' package='com.lexicalscope.fluentreflection.bean' total_bugs='0' total_types='27'><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap' interface='false' size='28'></ClassStats><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap$2' interface='false' size='6'></ClassStats><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap$3' interface='false' size='6'></ClassStats><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap$4' interface='false' size='6'></ClassStats><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap$5' interface='false' size='6'></ClassStats><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap$6' interface='false' size='6'></ClassStats><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap$7' interface='false' size='6'></ClassStats><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap$BeanMapImpl' interface='false' size='62'></ClassStats><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap$BeanMapImpl$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap$BeanMapImpl$BeanMapEntrySet' interface='false' size='10'></ClassStats><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap$BeanMapImpl$BeanMapEntrySet$1' interface='false' size='17'></ClassStats><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap$BeanMapImpl$BeanMapEntrySet$1$1' interface='false' size='27'></ClassStats><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap$KeySetCalculation' interface='true' size='2'></ClassStats><ClassStats sourceFile='BeanMap.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMap$PropertyNameConvertor' interface='true' size='2'></ClassStats><ClassStats sourceFile='BeanMapBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMapBuilder' interface='true' size='6'></ClassStats><ClassStats sourceFile='BeanMapBuilderImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMapBuilderImpl' interface='false' size='25'></ClassStats><ClassStats sourceFile='BeanMapBuilderImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.BeanMapBuilderImpl$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='MapBean.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.MapBean' interface='false' size='7'></ClassStats><ClassStats sourceFile='MapBean.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.MapBean$1' interface='false' size='19'></ClassStats><ClassStats sourceFile='MapBean.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.MapBean$1$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='MapBean.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.MapBean$1$2' interface='false' size='10'></ClassStats><ClassStats sourceFile='MapBean.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.MapBean$1$3' interface='false' size='10'></ClassStats><ClassStats sourceFile='MapBean.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.MapBean$1$4' interface='false' size='9'></ClassStats><ClassStats sourceFile='MapBean.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.MapBean$1$5' interface='false' size='9'></ClassStats><ClassStats sourceFile='MapBean.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.MapBean$1$6' interface='false' size='9'></ClassStats><ClassStats sourceFile='MapBean.java' bugs='0' class='com.lexicalscope.fluentreflection.bean.MapBean$1$7' interface='false' size='9'></ClassStats></PackageStats><PackageStats total_size='210' package='com.lexicalscope.fluentreflection.dynamicproxy' total_bugs='0' total_types='14'><ClassStats sourceFile='CallIfUnmatchedException.java' bugs='0' class='com.lexicalscope.fluentreflection.dynamicproxy.CallIfUnmatchedException' interface='false' size='3'></ClassStats><ClassStats sourceFile='CannotProxyThisException.java' bugs='0' class='com.lexicalscope.fluentreflection.dynamicproxy.CannotProxyThisException' interface='false' size='3'></ClassStats><ClassStats sourceFile='FluentProxy.java' bugs='0' class='com.lexicalscope.fluentreflection.dynamicproxy.FluentProxy' interface='false' size='8'></ClassStats><ClassStats sourceFile='Implementing.java' bugs='0' class='com.lexicalscope.fluentreflection.dynamicproxy.Implementing' interface='false' size='111'></ClassStats><ClassStats sourceFile='Implementing.java' bugs='0' class='com.lexicalscope.fluentreflection.dynamicproxy.Implementing$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='Implementing.java' bugs='0' class='com.lexicalscope.fluentreflection.dynamicproxy.Implementing$2' interface='false' size='8'></ClassStats><ClassStats sourceFile='Implementing.java' bugs='0' class='com.lexicalscope.fluentreflection.dynamicproxy.Implementing$3' interface='false' size='11'></ClassStats><ClassStats sourceFile='Implementing.java' bugs='0' class='com.lexicalscope.fluentreflection.dynamicproxy.Implementing$4' interface='false' size='12'></ClassStats><ClassStats sourceFile='Implementing.java' bugs='0' class='com.lexicalscope.fluentreflection.dynamicproxy.Implementing$MethodInvokationContext' interface='false' size='17'></ClassStats><ClassStats sourceFile='Implementing.java' bugs='0' class='com.lexicalscope.fluentreflection.dynamicproxy.Implementing$MethodInvoker' interface='false' size='21'></ClassStats><ClassStats sourceFile='MethodBinding.java' bugs='0' class='com.lexicalscope.fluentreflection.dynamicproxy.MethodBinding' interface='true' size='3'></ClassStats><ClassStats sourceFile='MethodBody.java' bugs='0' class='com.lexicalscope.fluentreflection.dynamicproxy.MethodBody' interface='true' size='2'></ClassStats><ClassStats sourceFile='ProxyImplementation.java' bugs='0' class='com.lexicalscope.fluentreflection.dynamicproxy.ProxyImplementation' interface='true' size='2'></ClassStats><ClassStats sourceFile='QueryMethod.java' bugs='0' class='com.lexicalscope.fluentreflection.dynamicproxy.QueryMethod' interface='true' size='1'></ClassStats></PackageStats><PackageStats total_size='7' package='com.lexicalscope.fluentreflection.internal.guava.annotations' total_bugs='0' total_types='4'><ClassStats sourceFile='Beta.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.annotations.$Beta' interface='true' size='1'></ClassStats><ClassStats sourceFile='GwtCompatible.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.annotations.$GwtCompatible' interface='true' size='3'></ClassStats><ClassStats sourceFile='GwtIncompatible.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.annotations.$GwtIncompatible' interface='true' size='2'></ClassStats><ClassStats sourceFile='VisibleForTesting.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.annotations.$VisibleForTesting' interface='true' size='1'></ClassStats></PackageStats><PackageStats priority_2='2' priority_1='1' total_size='2351' package='com.lexicalscope.fluentreflection.internal.guava.base' total_bugs='3' total_types='118'><ClassStats sourceFile='Ascii.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Ascii' interface='false' size='63'></ClassStats><ClassStats sourceFile='CaseFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CaseFormat' interface='false' size='73'></ClassStats><ClassStats sourceFile='CaseFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CaseFormat$1' interface='false' size='4'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher' interface='false' size='223'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$10' interface='false' size='14'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$11' interface='false' size='11'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$12' interface='false' size='16'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$13' interface='false' size='9'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$14' interface='false' size='16'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$15' interface='false' size='10'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$2' interface='false' size='6'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$3' interface='false' size='6'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$4' interface='false' size='6'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$5' interface='false' size='6'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$6' interface='false' size='47'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$7' interface='false' size='46'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$8' interface='false' size='20'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$9' interface='false' size='13'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$And' interface='false' size='17'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$LookupTable' interface='false' size='11'></ClassStats><ClassStats sourceFile='CharMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$CharMatcher$Or' interface='false' size='21'></ClassStats><ClassStats sourceFile='Charsets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Charsets' interface='false' size='16'></ClassStats><ClassStats sourceFile='Defaults.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Defaults' interface='false' size='21'></ClassStats><ClassStats sourceFile='Enums.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Enums' interface='false' size='5'></ClassStats><ClassStats sourceFile='Enums.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Enums$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='Enums.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Enums$ValueOfFunction' interface='false' size='20'></ClassStats><ClassStats sourceFile='Equivalence.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Equivalence' interface='false' size='23'></ClassStats><ClassStats sourceFile='Equivalence.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Equivalence$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='Equivalence.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Equivalence$EquivalentToPredicate' interface='false' size='22'></ClassStats><ClassStats sourceFile='Equivalence.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Equivalence$Wrapper' interface='false' size='25'></ClassStats><ClassStats sourceFile='Equivalences.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Equivalences' interface='false' size='9'></ClassStats><ClassStats sourceFile='Equivalences.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Equivalences$Equals' interface='false' size='13'></ClassStats><ClassStats sourceFile='Equivalences.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Equivalences$Identity' interface='false' size='13'></ClassStats><ClassStats sourceFile='FinalizablePhantomReference.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$FinalizablePhantomReference' interface='false' size='5'></ClassStats><ClassStats sourceFile='FinalizableReference.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableReference' interface='true' size='2'></ClassStats><ClassStats sourceFile='FinalizableReferenceQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableReferenceQueue' interface='false' size='47'></ClassStats><ClassStats priority_2='1' sourceFile='FinalizableReferenceQueue.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableReferenceQueue$DecoupledLoader' interface='false' size='22'></ClassStats><ClassStats sourceFile='FinalizableReferenceQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableReferenceQueue$DirectLoader' interface='false' size='7'></ClassStats><ClassStats sourceFile='FinalizableReferenceQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableReferenceQueue$FinalizerLoader' interface='true' size='2'></ClassStats><ClassStats sourceFile='FinalizableReferenceQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableReferenceQueue$SystemLoader' interface='false' size='14'></ClassStats><ClassStats sourceFile='FinalizableSoftReference.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableSoftReference' interface='false' size='5'></ClassStats><ClassStats sourceFile='FinalizableWeakReference.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$FinalizableWeakReference' interface='false' size='5'></ClassStats><ClassStats sourceFile='Function.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Function' interface='true' size='3'></ClassStats><ClassStats sourceFile='FunctionalEquivalence.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$FunctionalEquivalence' interface='false' size='24'></ClassStats><ClassStats sourceFile='Functions.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Functions' interface='false' size='19'></ClassStats><ClassStats sourceFile='Functions.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Functions$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='Functions.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Functions$ConstantFunction' interface='false' size='18'></ClassStats><ClassStats sourceFile='Functions.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Functions$ForMapWithDefault' interface='false' size='21'></ClassStats><ClassStats sourceFile='Functions.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Functions$FunctionComposition' interface='false' size='20'></ClassStats><ClassStats sourceFile='Functions.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Functions$FunctionForMapNoDefault' interface='false' size='20'></ClassStats><ClassStats sourceFile='Functions.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Functions$IdentityFunction' interface='false' size='13'></ClassStats><ClassStats sourceFile='Functions.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Functions$PredicateFunction' interface='false' size='21'></ClassStats><ClassStats sourceFile='Functions.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Functions$SupplierFunction' interface='false' size='20'></ClassStats><ClassStats sourceFile='Functions.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Functions$ToStringFunction' interface='false' size='15'></ClassStats><ClassStats sourceFile='Joiner.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Joiner' interface='false' size='59'></ClassStats><ClassStats sourceFile='Joiner.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Joiner$1' interface='false' size='12'></ClassStats><ClassStats sourceFile='Joiner.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Joiner$2' interface='false' size='27'></ClassStats><ClassStats sourceFile='Joiner.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Joiner$3' interface='false' size='13'></ClassStats><ClassStats sourceFile='Joiner.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Joiner$MapJoiner' interface='false' size='42'></ClassStats><ClassStats sourceFile='Objects.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Objects' interface='false' size='22'></ClassStats><ClassStats sourceFile='Objects.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Objects$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='Objects.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Objects$ToStringHelper' interface='false' size='26'></ClassStats><ClassStats sourceFile='Optional.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Optional' interface='false' size='21'></ClassStats><ClassStats sourceFile='Optional.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Optional$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='Optional.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Optional$Absent' interface='false' size='28'></ClassStats><ClassStats sourceFile='Optional.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Optional$Present' interface='false' size='31'></ClassStats><ClassStats sourceFile='PairwiseEquivalence.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$PairwiseEquivalence' interface='false' size='31'></ClassStats><ClassStats sourceFile='Platform.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Platform' interface='false' size='12'></ClassStats><ClassStats sourceFile='Platform.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Platform$1' interface='false' size='6'></ClassStats><ClassStats priority_1='1' sourceFile='Preconditions.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.base.$Preconditions' interface='false' size='95'></ClassStats><ClassStats sourceFile='Predicate.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicate' interface='true' size='3'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates' interface='false' size='53'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$AndPredicate' interface='false' size='23'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$AssignableFromPredicate' interface='false' size='22'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$CompositionPredicate' interface='false' size='22'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$ContainsPatternPredicate' interface='false' size='23'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$InPredicate' interface='false' size='24'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$InstanceOfPredicate' interface='false' size='20'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$IsEqualToPredicate' interface='false' size='20'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$NotPredicate' interface='false' size='18'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$ObjectPredicate' interface='false' size='18'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$ObjectPredicate$1' interface='false' size='5'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$ObjectPredicate$2' interface='false' size='5'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$ObjectPredicate$3' interface='false' size='5'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$ObjectPredicate$4' interface='false' size='5'></ClassStats><ClassStats sourceFile='Predicates.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Predicates$OrPredicate' interface='false' size='23'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter' interface='false' size='56'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$1$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$2' interface='false' size='7'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$2$1' interface='false' size='15'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$3' interface='false' size='8'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$3$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$4' interface='false' size='7'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$4$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$5' interface='false' size='7'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$6' interface='false' size='4'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$AbstractIterator' interface='false' size='32'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$AbstractIterator$State' interface='false' size='12'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$MapSplitter' interface='false' size='24'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$SplittingIterator' interface='false' size='41'></ClassStats><ClassStats sourceFile='Splitter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Splitter$Strategy' interface='true' size='2'></ClassStats><ClassStats sourceFile='Stopwatch.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Stopwatch' interface='false' size='57'></ClassStats><ClassStats sourceFile='Stopwatch.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Stopwatch$1' interface='false' size='4'></ClassStats><ClassStats sourceFile='Strings.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Strings' interface='false' size='34'></ClassStats><ClassStats sourceFile='Supplier.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Supplier' interface='true' size='2'></ClassStats><ClassStats sourceFile='Suppliers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers' interface='false' size='17'></ClassStats><ClassStats sourceFile='Suppliers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$ExpiringMemoizingSupplier' interface='false' size='25'></ClassStats><ClassStats priority_2='1' sourceFile='Suppliers.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$MemoizingSupplier' interface='false' size='19'></ClassStats><ClassStats sourceFile='Suppliers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$SupplierComposition' interface='false' size='11'></ClassStats><ClassStats sourceFile='Suppliers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$SupplierFunction' interface='false' size='12'></ClassStats><ClassStats sourceFile='Suppliers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$SupplierOfInstance' interface='false' size='9'></ClassStats><ClassStats sourceFile='Suppliers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Suppliers$ThreadSafeSupplier' interface='false' size='11'></ClassStats><ClassStats sourceFile='Throwables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Throwables' interface='false' size='54'></ClassStats><ClassStats sourceFile='Ticker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Ticker' interface='false' size='9'></ClassStats><ClassStats sourceFile='Ticker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.$Ticker$1' interface='false' size='5'></ClassStats></PackageStats><PackageStats total_size='63' package='com.lexicalscope.fluentreflection.internal.guava.base.internal' total_bugs='0' total_types='3'><ClassStats sourceFile='Finalizer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.internal.$Finalizer' interface='false' size='58'></ClassStats><ClassStats sourceFile='Finalizer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.internal.$Finalizer$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='Finalizer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.base.internal.$Finalizer$ShutDown' interface='false' size='4'></ClassStats></PackageStats><PackageStats priority_2='12' priority_1='2' total_size='2788' package='com.lexicalscope.fluentreflection.internal.guava.cache' total_bugs='14' total_types='93'><ClassStats sourceFile='AbstractCache.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$AbstractCache' interface='false' size='21'></ClassStats><ClassStats sourceFile='AbstractCache.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$AbstractCache$SimpleStatsCounter' interface='false' size='45'></ClassStats><ClassStats sourceFile='AbstractCache.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$AbstractCache$StatsCounter' interface='true' size='7'></ClassStats><ClassStats sourceFile='Cache.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$Cache' interface='true' size='10'></ClassStats><ClassStats sourceFile='CacheBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder' interface='false' size='149'></ClassStats><ClassStats sourceFile='CacheBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$1' interface='false' size='15'></ClassStats><ClassStats sourceFile='CacheBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$2' interface='false' size='6'></ClassStats><ClassStats sourceFile='CacheBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$CacheAsMap' interface='false' size='21'></ClassStats><ClassStats priority_2='1' sourceFile='CacheBuilder.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$NullCache' interface='false' size='46'></ClassStats><ClassStats sourceFile='CacheBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$NullComputingConcurrentMap' interface='false' size='20'></ClassStats><ClassStats sourceFile='CacheBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$NullConcurrentMap' interface='false' size='40'></ClassStats><ClassStats sourceFile='CacheBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheBuilder$NullListener' interface='false' size='11'></ClassStats><ClassStats sourceFile='CacheLoader.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheLoader' interface='false' size='9'></ClassStats><ClassStats sourceFile='CacheLoader.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheLoader$FunctionToCacheLoader' interface='false' size='9'></ClassStats><ClassStats sourceFile='CacheLoader.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheLoader$SupplierToCacheLoader' interface='false' size='9'></ClassStats><ClassStats sourceFile='CacheStats.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CacheStats' interface='false' size='61'></ClassStats><ClassStats priority_1='2' sourceFile='ComputingCache.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache' interface='false' size='32'></ClassStats><ClassStats sourceFile='ComputingCache.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$ComputingCache$CacheAsMap' interface='false' size='24'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap' interface='false' size='287'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$1' interface='false' size='15'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$2' interface='false' size='13'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$AbstractReferenceEntry' interface='false' size='33'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedError' interface='false' size='8'></ClassStats><ClassStats priority_2='1' sourceFile='CustomConcurrentHashMap.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedException' interface='false' size='8'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedNull' interface='false' size='8'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedReference' interface='false' size='8'></ClassStats><ClassStats priority_2='1' sourceFile='CustomConcurrentHashMap.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedUncheckedException' interface='false' size='8'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputedValue' interface='true' size='2'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ComputingValueReference' interface='false' size='53'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntryFactory' interface='false' size='53'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntryFactory$1' interface='false' size='5'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntryFactory$10' interface='false' size='9'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntryFactory$11' interface='false' size='9'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntryFactory$12' interface='false' size='10'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntryFactory$2' interface='false' size='9'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntryFactory$3' interface='false' size='9'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntryFactory$4' interface='false' size='10'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntryFactory$5' interface='false' size='5'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntryFactory$6' interface='false' size='9'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntryFactory$7' interface='false' size='9'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntryFactory$8' interface='false' size='10'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntryFactory$9' interface='false' size='5'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntryIterator' interface='false' size='7'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EntrySet' interface='false' size='28'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EvictionQueue' interface='false' size='51'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EvictionQueue$1' interface='false' size='18'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$EvictionQueue$2' interface='false' size='8'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ExpirationQueue' interface='false' size='51'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ExpirationQueue$1' interface='false' size='22'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ExpirationQueue$2' interface='false' size='8'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$HashIterator' interface='false' size='62'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$KeyIterator' interface='false' size='6'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$KeySet' interface='false' size='17'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$NullEntry' interface='false' size='39'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ReferenceEntry' interface='true' size='16'></ClassStats><ClassStats priority_2='7' sourceFile='CustomConcurrentHashMap.java' bugs='7' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Segment' interface='false' size='628'></ClassStats><ClassStats priority_2='2' sourceFile='CustomConcurrentHashMap.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SerializationProxy' interface='false' size='48'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SoftEntry' interface='false' size='41'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SoftEvictableEntry' interface='false' size='18'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SoftExpirableEntry' interface='false' size='25'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SoftExpirableEvictableEntry' interface='false' size='39'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$SoftValueReference' interface='false' size='17'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Strength' interface='false' size='16'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Strength$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Strength$2' interface='false' size='7'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Strength$3' interface='false' size='7'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$StrongEntry' interface='false' size='43'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$StrongEvictableEntry' interface='false' size='18'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$StrongExpirableEntry' interface='false' size='25'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$StrongExpirableEvictableEntry' interface='false' size='39'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$StrongValueReference' interface='false' size='18'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ValueIterator' interface='false' size='6'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$ValueReference' interface='true' size='7'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$Values' interface='false' size='15'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$WeakEntry' interface='false' size='41'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$WeakEvictableEntry' interface='false' size='18'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$WeakExpirableEntry' interface='false' size='25'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$WeakExpirableEvictableEntry' interface='false' size='39'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$WeakValueReference' interface='false' size='17'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$CustomConcurrentHashMap$WriteThroughEntry' interface='false' size='24'></ClassStats><ClassStats sourceFile='ForwardingCache.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$ForwardingCache' interface='false' size='27'></ClassStats><ClassStats sourceFile='ForwardingCache.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$ForwardingCache$SimpleForwardingCache' interface='false' size='10'></ClassStats><ClassStats sourceFile='RemovalCause.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$RemovalCause' interface='false' size='20'></ClassStats><ClassStats sourceFile='RemovalCause.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$RemovalCause$1' interface='false' size='5'></ClassStats><ClassStats sourceFile='RemovalCause.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$RemovalCause$2' interface='false' size='5'></ClassStats><ClassStats sourceFile='RemovalCause.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$RemovalCause$3' interface='false' size='5'></ClassStats><ClassStats sourceFile='RemovalCause.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$RemovalCause$4' interface='false' size='5'></ClassStats><ClassStats sourceFile='RemovalCause.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$RemovalCause$5' interface='false' size='5'></ClassStats><ClassStats sourceFile='RemovalListener.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$RemovalListener' interface='true' size='2'></ClassStats><ClassStats sourceFile='RemovalListeners.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$RemovalListeners' interface='false' size='5'></ClassStats><ClassStats sourceFile='RemovalListeners.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$RemovalListeners$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='RemovalListeners.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$RemovalListeners$1$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='RemovalNotification.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.cache.$RemovalNotification' interface='false' size='32'></ClassStats></PackageStats><PackageStats priority_2='71' priority_1='4' total_size='20254' package='com.lexicalscope.fluentreflection.internal.guava.collect' total_bugs='75' total_types='762'><ClassStats sourceFile='AbstractBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractBiMap' interface='false' size='89'></ClassStats><ClassStats sourceFile='AbstractBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractBiMap$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='AbstractBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractBiMap$EntrySet' interface='false' size='36'></ClassStats><ClassStats sourceFile='AbstractBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractBiMap$EntrySet$1' interface='false' size='19'></ClassStats><ClassStats sourceFile='AbstractBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractBiMap$EntrySet$1$1' interface='false' size='17'></ClassStats><ClassStats sourceFile='AbstractBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractBiMap$Inverse' interface='false' size='19'></ClassStats><ClassStats sourceFile='AbstractBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractBiMap$KeySet' interface='false' size='24'></ClassStats><ClassStats sourceFile='AbstractBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractBiMap$KeySet$1' interface='false' size='17'></ClassStats><ClassStats sourceFile='AbstractBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractBiMap$ValueSet' interface='false' size='20'></ClassStats><ClassStats sourceFile='AbstractBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractBiMap$ValueSet$1' interface='false' size='14'></ClassStats><ClassStats sourceFile='AbstractIndexedListIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractIndexedListIterator' interface='false' size='29'></ClassStats><ClassStats sourceFile='AbstractIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractIterator' interface='false' size='32'></ClassStats><ClassStats sourceFile='AbstractIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractIterator$1' interface='false' size='4'></ClassStats><ClassStats sourceFile='AbstractIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractIterator$State' interface='false' size='15'></ClassStats><ClassStats sourceFile='AbstractLinkedIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractLinkedIterator' interface='false' size='14'></ClassStats><ClassStats sourceFile='AbstractListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractListMultimap' interface='false' size='23'></ClassStats><ClassStats sourceFile='AbstractMapBasedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMapBasedMultiset' interface='false' size='98'></ClassStats><ClassStats sourceFile='AbstractMapBasedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMapBasedMultiset$1' interface='false' size='19'></ClassStats><ClassStats sourceFile='AbstractMapBasedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMapBasedMultiset$1$1' interface='false' size='14'></ClassStats><ClassStats sourceFile='AbstractMapBasedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMapBasedMultiset$MapBasedElementSet' interface='false' size='33'></ClassStats><ClassStats sourceFile='AbstractMapBasedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMapBasedMultiset$MapBasedElementSet$1' interface='false' size='17'></ClassStats><ClassStats sourceFile='AbstractMapBasedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMapBasedMultiset$MapBasedMultisetIterator' interface='false' size='29'></ClassStats><ClassStats sourceFile='AbstractMapEntry.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMapEntry' interface='false' size='18'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap' interface='false' size='196'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$2' interface='false' size='6'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$3' interface='false' size='8'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$4' interface='false' size='8'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$AsMap' interface='false' size='46'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$AsMap$AsMapEntries' interface='false' size='16'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$AsMap$AsMapIterator' interface='false' size='20'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$EntryIterator' interface='false' size='33'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$KeySet' interface='false' size='28'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$KeySet$1' interface='false' size='19'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$RandomAccessWrappedList' interface='false' size='6'></ClassStats><ClassStats priority_2='1' sourceFile='AbstractMultimap.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$SortedAsMap' interface='false' size='26'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$SortedKeySet' interface='false' size='20'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedCollection' interface='false' size='117'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedCollection$WrappedIterator' interface='false' size='32'></ClassStats><ClassStats priority_2='1' sourceFile='AbstractMultimap.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedList' interface='false' size='54'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedList$WrappedListIterator' interface='false' size='28'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedSet' interface='false' size='6'></ClassStats><ClassStats sourceFile='AbstractMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultimap$WrappedSortedSet' interface='false' size='25'></ClassStats><ClassStats sourceFile='AbstractMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultiset' interface='false' size='61'></ClassStats><ClassStats sourceFile='AbstractMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultiset$ElementSet' interface='false' size='6'></ClassStats><ClassStats sourceFile='AbstractMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractMultiset$EntrySet' interface='false' size='10'></ClassStats><ClassStats sourceFile='AbstractSetMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractSetMultimap' interface='false' size='26'></ClassStats><ClassStats sourceFile='AbstractSortedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractSortedMultiset' interface='false' size='48'></ClassStats><ClassStats sourceFile='AbstractSortedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractSortedMultiset$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='AbstractSortedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractSortedMultiset$2' interface='false' size='10'></ClassStats><ClassStats sourceFile='AbstractSortedSetMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AbstractSortedSetMultimap' interface='false' size='25'></ClassStats><ClassStats sourceFile='ArrayListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayListMultimap' interface='false' size='67'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable' interface='false' size='155'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$CellSet' interface='false' size='16'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$CellSet$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$CellSet$1$1' interface='false' size='15'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$Column' interface='false' size='23'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$ColumnEntrySet' interface='false' size='11'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$ColumnEntrySet$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$ColumnEntrySet$1$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$ColumnMap' interface='false' size='20'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$ColumnMapEntrySet' interface='false' size='9'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$ColumnMapEntrySet$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$Row' interface='false' size='23'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$RowEntrySet' interface='false' size='11'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$RowEntrySet$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$RowEntrySet$1$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$RowMap' interface='false' size='20'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$RowMapEntrySet' interface='false' size='9'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$RowMapEntrySet$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$Values' interface='false' size='11'></ClassStats><ClassStats sourceFile='ArrayTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ArrayTable$Values$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='AsynchronousComputationException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$AsynchronousComputationException' interface='false' size='5'></ClassStats><ClassStats sourceFile='BiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BiMap' interface='true' size='6'></ClassStats><ClassStats sourceFile='BoundType.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BoundType' interface='false' size='14'></ClassStats><ClassStats sourceFile='BstAggregate.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstAggregate' interface='true' size='3'></ClassStats><ClassStats sourceFile='BstBalancePolicy.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstBalancePolicy' interface='true' size='3'></ClassStats><ClassStats sourceFile='BstCountBasedBalancePolicies.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstCountBasedBalancePolicies' interface='false' size='15'></ClassStats><ClassStats sourceFile='BstCountBasedBalancePolicies.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstCountBasedBalancePolicies$1' interface='false' size='14'></ClassStats><ClassStats sourceFile='BstCountBasedBalancePolicies.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstCountBasedBalancePolicies$2' interface='false' size='47'></ClassStats><ClassStats sourceFile='BstCountBasedBalancePolicies.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstCountBasedBalancePolicies$3' interface='false' size='33'></ClassStats><ClassStats sourceFile='BstInOrderPath.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstInOrderPath' interface='false' size='48'></ClassStats><ClassStats sourceFile='BstInOrderPath.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstInOrderPath$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='BstInOrderPath.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstInOrderPath$2' interface='false' size='4'></ClassStats><ClassStats sourceFile='BstModificationResult.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstModificationResult' interface='false' size='22'></ClassStats><ClassStats sourceFile='BstModificationResult.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstModificationResult$ModificationType' interface='false' size='11'></ClassStats><ClassStats sourceFile='BstModifier.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstModifier' interface='true' size='2'></ClassStats><ClassStats sourceFile='BstMutationResult.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstMutationResult' interface='false' size='48'></ClassStats><ClassStats sourceFile='BstMutationResult.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstMutationResult$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='BstMutationRule.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstMutationRule' interface='false' size='18'></ClassStats><ClassStats sourceFile='BstNode.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstNode' interface='false' size='31'></ClassStats><ClassStats sourceFile='BstNode.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstNode$1' interface='false' size='4'></ClassStats><ClassStats sourceFile='BstNodeFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstNodeFactory' interface='false' size='6'></ClassStats><ClassStats priority_2='1' sourceFile='BstOperations.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstOperations' interface='false' size='96'></ClassStats><ClassStats sourceFile='BstOperations.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstOperations$1' interface='false' size='4'></ClassStats><ClassStats sourceFile='BstPath.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstPath' interface='false' size='17'></ClassStats><ClassStats sourceFile='BstPathFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstPathFactory' interface='true' size='3'></ClassStats><ClassStats sourceFile='BstRangeOps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstRangeOps' interface='false' size='73'></ClassStats><ClassStats sourceFile='BstRangeOps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstRangeOps$1' interface='false' size='4'></ClassStats><ClassStats sourceFile='BstSide.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstSide' interface='false' size='14'></ClassStats><ClassStats sourceFile='BstSide.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstSide$1' interface='false' size='5'></ClassStats><ClassStats sourceFile='BstSide.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$BstSide$2' interface='false' size='5'></ClassStats><ClassStats sourceFile='ByFunctionOrdering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ByFunctionOrdering' interface='false' size='22'></ClassStats><ClassStats sourceFile='ClassToInstanceMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ClassToInstanceMap' interface='true' size='3'></ClassStats><ClassStats sourceFile='Collections2.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Collections2' interface='false' size='31'></ClassStats><ClassStats sourceFile='Collections2.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Collections2$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='Collections2.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Collections2$FilteredCollection' interface='false' size='59'></ClassStats><ClassStats sourceFile='Collections2.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Collections2$FilteredCollection$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Collections2.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Collections2$FilteredCollection$2' interface='false' size='7'></ClassStats><ClassStats sourceFile='Collections2.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Collections2$TransformedCollection' interface='false' size='17'></ClassStats><ClassStats sourceFile='ComparatorOrdering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ComparatorOrdering' interface='false' size='26'></ClassStats><ClassStats sourceFile='ComparisonChain.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ComparisonChain' interface='false' size='25'></ClassStats><ClassStats sourceFile='ComparisonChain.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ComparisonChain$1' interface='false' size='21'></ClassStats><ClassStats sourceFile='ComparisonChain.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ComparisonChain$InactiveComparisonChain' interface='false' size='22'></ClassStats><ClassStats sourceFile='CompoundOrdering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CompoundOrdering' interface='false' size='33'></ClassStats><ClassStats sourceFile='ComputationException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputationException' interface='false' size='5'></ClassStats><ClassStats sourceFile='ComputingConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap' interface='false' size='18'></ClassStats><ClassStats sourceFile='ComputingConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputationExceptionReference' interface='false' size='18'></ClassStats><ClassStats sourceFile='ComputingConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputedReference' interface='false' size='18'></ClassStats><ClassStats sourceFile='ComputingConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingMapAdapter' interface='false' size='17'></ClassStats><ClassStats priority_2='2' sourceFile='ComputingConcurrentHashMap.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSegment' interface='false' size='72'></ClassStats><ClassStats sourceFile='ComputingConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingSerializationProxy' interface='false' size='19'></ClassStats><ClassStats sourceFile='ComputingConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ComputingConcurrentHashMap$ComputingValueReference' interface='false' size='47'></ClassStats><ClassStats sourceFile='ConcurrentHashMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset' interface='false' size='183'></ClassStats><ClassStats sourceFile='ConcurrentHashMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$1' interface='false' size='15'></ClassStats><ClassStats sourceFile='ConcurrentHashMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$2' interface='false' size='15'></ClassStats><ClassStats sourceFile='ConcurrentHashMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$3' interface='false' size='18'></ClassStats><ClassStats priority_2='2' sourceFile='ConcurrentHashMultiset.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$EntrySet' interface='false' size='25'></ClassStats><ClassStats sourceFile='ConcurrentHashMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ConcurrentHashMultiset$FieldSettersHolder' interface='false' size='6'></ClassStats><ClassStats sourceFile='Constraint.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Constraint' interface='true' size='3'></ClassStats><ClassStats sourceFile='Constraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Constraints' interface='false' size='33'></ClassStats><ClassStats sourceFile='Constraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Constraints$ConstrainedCollection' interface='false' size='17'></ClassStats><ClassStats sourceFile='Constraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Constraints$ConstrainedList' interface='false' size='33'></ClassStats><ClassStats sourceFile='Constraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Constraints$ConstrainedListIterator' interface='false' size='21'></ClassStats><ClassStats sourceFile='Constraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Constraints$ConstrainedMultiset' interface='false' size='26'></ClassStats><ClassStats sourceFile='Constraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Constraints$ConstrainedRandomAccessList' interface='false' size='4'></ClassStats><ClassStats sourceFile='Constraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Constraints$ConstrainedSet' interface='false' size='18'></ClassStats><ClassStats sourceFile='Constraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Constraints$ConstrainedSortedSet' interface='false' size='25'></ClassStats><ClassStats sourceFile='Constraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Constraints$NotNullConstraint' interface='false' size='13'></ClassStats><ClassStats sourceFile='ContiguousSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ContiguousSet' interface='false' size='45'></ClassStats><ClassStats sourceFile='Count.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Count' interface='false' size='30'></ClassStats><ClassStats priority_2='5' priority_1='3' sourceFile='CustomConcurrentHashMap.java' bugs='8' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap' interface='false' size='278'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$1' interface='false' size='15'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$2' interface='false' size='13'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$AbstractReferenceEntry' interface='false' size='33'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$AbstractSerializationProxy' interface='false' size='56'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$CleanupMapTask' interface='false' size='13'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntryFactory' interface='false' size='53'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntryFactory$1' interface='false' size='5'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntryFactory$10' interface='false' size='9'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntryFactory$11' interface='false' size='9'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntryFactory$12' interface='false' size='10'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntryFactory$2' interface='false' size='9'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntryFactory$3' interface='false' size='9'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntryFactory$4' interface='false' size='10'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntryFactory$5' interface='false' size='5'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntryFactory$6' interface='false' size='9'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntryFactory$7' interface='false' size='9'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntryFactory$8' interface='false' size='10'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntryFactory$9' interface='false' size='5'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntryIterator' interface='false' size='7'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EntrySet' interface='false' size='28'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EvictionQueue' interface='false' size='51'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EvictionQueue$1' interface='false' size='18'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$EvictionQueue$2' interface='false' size='8'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$ExpirationQueue' interface='false' size='51'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$ExpirationQueue$1' interface='false' size='22'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$ExpirationQueue$2' interface='false' size='8'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$HashIterator' interface='false' size='62'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$KeyIterator' interface='false' size='6'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$KeySet' interface='false' size='17'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$NullEntry' interface='false' size='39'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$ReferenceEntry' interface='true' size='16'></ClassStats><ClassStats priority_2='5' sourceFile='CustomConcurrentHashMap.java' bugs='5' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Segment' interface='false' size='548'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$SerializationProxy' interface='false' size='17'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$SoftEntry' interface='false' size='43'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$SoftEvictableEntry' interface='false' size='18'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$SoftExpirableEntry' interface='false' size='25'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$SoftExpirableEvictableEntry' interface='false' size='39'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$SoftValueReference' interface='false' size='17'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Strength' interface='false' size='16'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Strength$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Strength$2' interface='false' size='7'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Strength$3' interface='false' size='7'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$StrongEntry' interface='false' size='45'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$StrongEvictableEntry' interface='false' size='18'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$StrongExpirableEntry' interface='false' size='25'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$StrongExpirableEvictableEntry' interface='false' size='39'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$StrongValueReference' interface='false' size='18'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$ValueIterator' interface='false' size='6'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$ValueReference' interface='true' size='7'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$Values' interface='false' size='15'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$WeakEntry' interface='false' size='43'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$WeakEvictableEntry' interface='false' size='18'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$WeakExpirableEntry' interface='false' size='25'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$WeakExpirableEvictableEntry' interface='false' size='39'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$WeakValueReference' interface='false' size='17'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$CustomConcurrentHashMap$WriteThroughEntry' interface='false' size='24'></ClassStats><ClassStats sourceFile='Cut.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Cut' interface='false' size='46'></ClassStats><ClassStats sourceFile='Cut.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$1' interface='false' size='4'></ClassStats><ClassStats priority_2='1' sourceFile='Cut.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$AboveAll' interface='false' size='36'></ClassStats><ClassStats sourceFile='Cut.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$AboveValue' interface='false' size='40'></ClassStats><ClassStats priority_2='1' sourceFile='Cut.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$BelowAll' interface='false' size='40'></ClassStats><ClassStats sourceFile='Cut.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Cut$BelowValue' interface='false' size='37'></ClassStats><ClassStats priority_2='2' sourceFile='DescendingImmutableSortedMultiset.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guava.collect.$DescendingImmutableSortedMultiset' interface='false' size='36'></ClassStats><ClassStats sourceFile='DiscreteDomain.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$DiscreteDomain' interface='false' size='10'></ClassStats><ClassStats sourceFile='DiscreteDomains.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$DiscreteDomains' interface='false' size='9'></ClassStats><ClassStats sourceFile='DiscreteDomains.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$DiscreteDomains$BigIntegerDomain' interface='false' size='23'></ClassStats><ClassStats sourceFile='DiscreteDomains.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$DiscreteDomains$IntegerDomain' interface='false' size='27'></ClassStats><ClassStats sourceFile='DiscreteDomains.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$DiscreteDomains$LongDomain' interface='false' size='32'></ClassStats><ClassStats sourceFile='EmptyContiguousSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EmptyContiguousSet' interface='false' size='50'></ClassStats><ClassStats sourceFile='EmptyContiguousSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EmptyContiguousSet$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='EmptyContiguousSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EmptyContiguousSet$SerializedForm' interface='false' size='11'></ClassStats><ClassStats sourceFile='EmptyImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EmptyImmutableList' interface='false' size='62'></ClassStats><ClassStats sourceFile='EmptyImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EmptyImmutableList$1' interface='false' size='15'></ClassStats><ClassStats sourceFile='EmptyImmutableListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EmptyImmutableListMultimap' interface='false' size='10'></ClassStats><ClassStats sourceFile='EmptyImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EmptyImmutableMap' interface='false' size='40'></ClassStats><ClassStats sourceFile='EmptyImmutableMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EmptyImmutableMultiset' interface='false' size='23'></ClassStats><ClassStats sourceFile='EmptyImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EmptyImmutableSet' interface='false' size='42'></ClassStats><ClassStats sourceFile='EmptyImmutableSetMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EmptyImmutableSetMultimap' interface='false' size='10'></ClassStats><ClassStats sourceFile='EmptyImmutableSortedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EmptyImmutableSortedMultiset' interface='false' size='35'></ClassStats><ClassStats sourceFile='EmptyImmutableSortedSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EmptyImmutableSortedSet' interface='false' size='48'></ClassStats><ClassStats sourceFile='EnumBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EnumBiMap' interface='false' size='52'></ClassStats><ClassStats sourceFile='EnumHashBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EnumHashBiMap' interface='false' size='41'></ClassStats><ClassStats sourceFile='EnumMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EnumMultiset' interface='false' size='44'></ClassStats><ClassStats sourceFile='EvictionListeners.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EvictionListeners' interface='false' size='5'></ClassStats><ClassStats sourceFile='EvictionListeners.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EvictionListeners$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='EvictionListeners.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$EvictionListeners$1$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='ExplicitOrdering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ExplicitOrdering' interface='false' size='32'></ClassStats><ClassStats sourceFile='ForwardingCollection.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingCollection' interface='false' size='68'></ClassStats><ClassStats sourceFile='ForwardingConcurrentMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingConcurrentMap' interface='false' size='15'></ClassStats><ClassStats sourceFile='ForwardingIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingIterator' interface='false' size='13'></ClassStats><ClassStats sourceFile='ForwardingList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingList' interface='false' size='53'></ClassStats><ClassStats sourceFile='ForwardingListIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingListIterator' interface='false' size='21'></ClassStats><ClassStats sourceFile='ForwardingListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingListMultimap' interface='false' size='16'></ClassStats><ClassStats sourceFile='ForwardingMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingMap' interface='false' size='73'></ClassStats><ClassStats sourceFile='ForwardingMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingMap$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='ForwardingMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingMap$StandardEntrySet' interface='false' size='6'></ClassStats><ClassStats sourceFile='ForwardingMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingMap$StandardKeySet' interface='false' size='6'></ClassStats><ClassStats sourceFile='ForwardingMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingMap$StandardValues' interface='false' size='6'></ClassStats><ClassStats sourceFile='ForwardingMapEntry.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingMapEntry' interface='false' size='27'></ClassStats><ClassStats sourceFile='ForwardingMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingMultimap' interface='false' size='47'></ClassStats><ClassStats sourceFile='ForwardingMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingMultiset' interface='false' size='65'></ClassStats><ClassStats sourceFile='ForwardingMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingMultiset$StandardElementSet' interface='false' size='6'></ClassStats><ClassStats sourceFile='ForwardingObject.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingObject' interface='false' size='6'></ClassStats><ClassStats sourceFile='ForwardingQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingQueue' interface='false' size='29'></ClassStats><ClassStats sourceFile='ForwardingSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingSet' interface='false' size='15'></ClassStats><ClassStats sourceFile='ForwardingSetMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingSetMultimap' interface='false' size='19'></ClassStats><ClassStats sourceFile='ForwardingSortedMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingSortedMap' interface='false' size='51'></ClassStats><ClassStats sourceFile='ForwardingSortedSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingSortedSet' interface='false' size='49'></ClassStats><ClassStats sourceFile='ForwardingSortedSetMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingSortedSetMultimap' interface='false' size='22'></ClassStats><ClassStats sourceFile='ForwardingTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ForwardingTable' interface='false' size='50'></ClassStats><ClassStats priority_2='1' sourceFile='GeneralRange.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$GeneralRange' interface='false' size='120'></ClassStats><ClassStats sourceFile='GeneralRange.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$GeneralRange$1' interface='false' size='4'></ClassStats><ClassStats sourceFile='GenericMapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$GenericMapMaker' interface='false' size='23'></ClassStats><ClassStats sourceFile='GenericMapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$GenericMapMaker$NullListener' interface='false' size='12'></ClassStats><ClassStats sourceFile='HashBasedTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$HashBasedTable' interface='false' size='45'></ClassStats><ClassStats sourceFile='HashBasedTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$HashBasedTable$Factory' interface='false' size='11'></ClassStats><ClassStats sourceFile='HashBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$HashBiMap' interface='false' size='39'></ClassStats><ClassStats sourceFile='HashMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$HashMultimap' interface='false' size='61'></ClassStats><ClassStats sourceFile='HashMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$HashMultiset' interface='false' size='47'></ClassStats><ClassStats sourceFile='Hashing.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Hashing' interface='false' size='6'></ClassStats><ClassStats priority_2='1' sourceFile='ImmutableAsList.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableAsList' interface='false' size='12'></ClassStats><ClassStats sourceFile='ImmutableAsList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableAsList$SerializedForm' interface='false' size='9'></ClassStats><ClassStats sourceFile='ImmutableBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableBiMap' interface='false' size='66'></ClassStats><ClassStats sourceFile='ImmutableBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableBiMap$Builder' interface='false' size='18'></ClassStats><ClassStats sourceFile='ImmutableBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableBiMap$EmptyBiMap' interface='false' size='18'></ClassStats><ClassStats sourceFile='ImmutableBiMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableBiMap$SerializedForm' interface='false' size='8'></ClassStats><ClassStats sourceFile='ImmutableClassToInstanceMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableClassToInstanceMap' interface='false' size='22'></ClassStats><ClassStats sourceFile='ImmutableClassToInstanceMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableClassToInstanceMap$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='ImmutableClassToInstanceMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableClassToInstanceMap$Builder' interface='false' size='19'></ClassStats><ClassStats sourceFile='ImmutableCollection.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableCollection' interface='false' size='45'></ClassStats><ClassStats sourceFile='ImmutableCollection.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableCollection$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='ImmutableCollection.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableCollection$ArrayImmutableCollection' interface='false' size='18'></ClassStats><ClassStats sourceFile='ImmutableCollection.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableCollection$Builder' interface='false' size='18'></ClassStats><ClassStats sourceFile='ImmutableCollection.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableCollection$EmptyImmutableCollection' interface='false' size='26'></ClassStats><ClassStats sourceFile='ImmutableCollection.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableCollection$SerializedForm' interface='false' size='9'></ClassStats><ClassStats sourceFile='ImmutableEntry.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEntry' interface='false' size='15'></ClassStats><ClassStats priority_2='2' sourceFile='ImmutableEnumSet.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet' interface='false' size='34'></ClassStats><ClassStats sourceFile='ImmutableEnumSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableEnumSet$EnumSerializedForm' interface='false' size='9'></ClassStats><ClassStats sourceFile='ImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableList' interface='false' size='110'></ClassStats><ClassStats sourceFile='ImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableList$Builder' interface='false' size='29'></ClassStats><ClassStats priority_2='1' sourceFile='ImmutableList.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableList$ReverseImmutableList' interface='false' size='46'></ClassStats><ClassStats sourceFile='ImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableList$ReverseImmutableList$1' interface='false' size='17'></ClassStats><ClassStats sourceFile='ImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableList$SerializedForm' interface='false' size='9'></ClassStats><ClassStats sourceFile='ImmutableListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableListMultimap' interface='false' size='100'></ClassStats><ClassStats sourceFile='ImmutableListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableListMultimap$Builder' interface='false' size='31'></ClassStats><ClassStats sourceFile='ImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMap' interface='false' size='68'></ClassStats><ClassStats sourceFile='ImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMap$Builder' interface='false' size='22'></ClassStats><ClassStats sourceFile='ImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMap$SerializedForm' interface='false' size='21'></ClassStats><ClassStats sourceFile='ImmutableMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultimap' interface='false' size='99'></ClassStats><ClassStats sourceFile='ImmutableMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultimap$Builder' interface='false' size='33'></ClassStats><ClassStats sourceFile='ImmutableMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultimap$BuilderMultimap' interface='false' size='7'></ClassStats><ClassStats sourceFile='ImmutableMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultimap$EntryCollection' interface='false' size='21'></ClassStats><ClassStats sourceFile='ImmutableMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultimap$EntryCollection$1' interface='false' size='16'></ClassStats><ClassStats sourceFile='ImmutableMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultimap$FieldSettersHolder' interface='false' size='8'></ClassStats><ClassStats sourceFile='ImmutableMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultimap$SortedKeyBuilderMultimap' interface='false' size='8'></ClassStats><ClassStats sourceFile='ImmutableMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultimap$Values' interface='false' size='16'></ClassStats><ClassStats sourceFile='ImmutableMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultimap$Values$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='ImmutableMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultiset' interface='false' size='95'></ClassStats><ClassStats sourceFile='ImmutableMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultiset$1' interface='false' size='16'></ClassStats><ClassStats sourceFile='ImmutableMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultiset$Builder' interface='false' size='40'></ClassStats><ClassStats priority_2='1' sourceFile='ImmutableMultiset.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultiset$EntrySet' interface='false' size='41'></ClassStats><ClassStats sourceFile='ImmutableMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultiset$EntrySet$EntrySetSerializedForm' interface='false' size='8'></ClassStats><ClassStats sourceFile='ImmutableMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableMultiset$SerializedForm' interface='false' size='20'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSet' interface='false' size='106'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSet$ArrayImmutableSet' interface='false' size='41'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSet$Builder' interface='false' size='29'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSet$SerializedForm' interface='false' size='9'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSet$TransformedImmutableSet' interface='false' size='33'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSet$TransformedImmutableSet$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='ImmutableSetMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSetMultimap' interface='false' size='123'></ClassStats><ClassStats sourceFile='ImmutableSetMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSetMultimap$Builder' interface='false' size='35'></ClassStats><ClassStats sourceFile='ImmutableSetMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSetMultimap$BuilderMultimap' interface='false' size='7'></ClassStats><ClassStats sourceFile='ImmutableSetMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSetMultimap$SortedKeyBuilderMultimap' interface='false' size='8'></ClassStats><ClassStats priority_2='1' sourceFile='ImmutableSortedAsList.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedAsList' interface='false' size='42'></ClassStats><ClassStats priority_2='2' sourceFile='ImmutableSortedMap.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap' interface='false' size='165'></ClassStats><ClassStats sourceFile='ImmutableSortedMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='ImmutableSortedMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$2' interface='false' size='7'></ClassStats><ClassStats sourceFile='ImmutableSortedMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$3' interface='false' size='9'></ClassStats><ClassStats sourceFile='ImmutableSortedMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$4' interface='false' size='7'></ClassStats><ClassStats sourceFile='ImmutableSortedMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$Builder' interface='false' size='21'></ClassStats><ClassStats priority_2='2' sourceFile='ImmutableSortedMap.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySet' interface='false' size='22'></ClassStats><ClassStats sourceFile='ImmutableSortedMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$EntrySetSerializedForm' interface='false' size='9'></ClassStats><ClassStats sourceFile='ImmutableSortedMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$SerializedForm' interface='false' size='10'></ClassStats><ClassStats sourceFile='ImmutableSortedMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$Values' interface='false' size='18'></ClassStats><ClassStats sourceFile='ImmutableSortedMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMap$ValuesSerializedForm' interface='false' size='9'></ClassStats><ClassStats sourceFile='ImmutableSortedMapFauxverideShim.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMapFauxverideShim' interface='false' size='15'></ClassStats><ClassStats sourceFile='ImmutableSortedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMultiset' interface='false' size='120'></ClassStats><ClassStats sourceFile='ImmutableSortedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMultiset$Builder' interface='false' size='39'></ClassStats><ClassStats sourceFile='ImmutableSortedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMultiset$SerializedForm' interface='false' size='22'></ClassStats><ClassStats sourceFile='ImmutableSortedMultisetFauxverideShim.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedMultisetFauxverideShim' interface='false' size='19'></ClassStats><ClassStats sourceFile='ImmutableSortedSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedSet' interface='false' size='117'></ClassStats><ClassStats sourceFile='ImmutableSortedSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedSet$Builder' interface='false' size='31'></ClassStats><ClassStats sourceFile='ImmutableSortedSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedSet$SerializedForm' interface='false' size='11'></ClassStats><ClassStats sourceFile='ImmutableSortedSetFauxverideShim.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ImmutableSortedSetFauxverideShim' interface='false' size='21'></ClassStats><ClassStats sourceFile='Interner.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Interner' interface='true' size='2'></ClassStats><ClassStats sourceFile='Interners.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Interners' interface='false' size='10'></ClassStats><ClassStats sourceFile='Interners.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Interners$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Interners.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Interners$CustomInterner' interface='false' size='16'></ClassStats><ClassStats sourceFile='Interners.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Interners$CustomInterner$Dummy' interface='false' size='8'></ClassStats><ClassStats sourceFile='Interners.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Interners$InternerFunction' interface='false' size='15'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables' interface='false' size='211'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$10' interface='false' size='9'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$10$1' interface='false' size='19'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$11' interface='false' size='7'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$12' interface='false' size='6'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$13' interface='false' size='6'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$2' interface='false' size='6'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$3' interface='false' size='9'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$4' interface='false' size='7'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$5' interface='false' size='7'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$6' interface='false' size='7'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$7' interface='false' size='7'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$8' interface='false' size='7'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$9' interface='false' size='7'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$ConsumingQueueIterator' interface='false' size='12'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$IterableWithToString' interface='false' size='5'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterables$UnmodifiableIterable' interface='false' size='12'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators' interface='false' size='252'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$10' interface='false' size='10'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$11' interface='false' size='6'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$12' interface='false' size='7'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$13' interface='false' size='12'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$14' interface='false' size='8'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$15' interface='false' size='8'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$2' interface='false' size='9'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$3' interface='false' size='8'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$4' interface='false' size='21'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$5' interface='false' size='21'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$6' interface='false' size='20'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$7' interface='false' size='12'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$8' interface='false' size='13'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$9' interface='false' size='16'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Iterators$PeekingImpl' interface='false' size='26'></ClassStats><ClassStats sourceFile='LexicographicalOrdering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LexicographicalOrdering' interface='false' size='33'></ClassStats><ClassStats sourceFile='LinkedHashMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedHashMultimap' interface='false' size='83'></ClassStats><ClassStats sourceFile='LinkedHashMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedHashMultimap$1' interface='false' size='16'></ClassStats><ClassStats sourceFile='LinkedHashMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedHashMultimap$SetDecorator' interface='false' size='60'></ClassStats><ClassStats sourceFile='LinkedHashMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedHashMultimap$SetDecorator$1' interface='false' size='15'></ClassStats><ClassStats sourceFile='LinkedHashMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedHashMultiset' interface='false' size='47'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap' interface='false' size='230'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$1' interface='false' size='13'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$2' interface='false' size='13'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$3' interface='false' size='9'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$3$1' interface='false' size='25'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$4' interface='false' size='12'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$5' interface='false' size='9'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$5$1' interface='false' size='28'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$6' interface='false' size='20'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$AsMapEntries' interface='false' size='10'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$AsMapEntries$1' interface='false' size='14'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$AsMapEntries$1$1' interface='false' size='10'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$DistinctKeyIterator' interface='false' size='24'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$MultisetView' interface='false' size='40'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$MultisetView$1' interface='false' size='12'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$MultisetView$2' interface='false' size='9'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$MultisetView$2$1' interface='false' size='14'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$MultisetView$2$1$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$Node' interface='false' size='14'></ClassStats><ClassStats sourceFile='LinkedListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$NodeIterator' interface='false' size='66'></ClassStats><ClassStats priority_2='1' sourceFile='LinkedListMultimap.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$LinkedListMultimap$ValueForKeyIterator' interface='false' size='65'></ClassStats><ClassStats sourceFile='ListMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ListMultimap' interface='true' size='6'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists' interface='false' size='93'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$2' interface='false' size='6'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$AbstractListWrapper' interface='false' size='21'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$CharSequenceAsList' interface='false' size='48'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$OnePlusArrayList' interface='false' size='14'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$Partition' interface='false' size='23'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$RandomAccessListWrapper' interface='false' size='4'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$RandomAccessPartition' interface='false' size='4'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$RandomAccessReverseList' interface='false' size='4'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$ReverseList' interface='false' size='56'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$ReverseList$1' interface='false' size='39'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$StringAsImmutableList' interface='false' size='51'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$StringAsImmutableList$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$TransformingRandomAccessList' interface='false' size='20'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$TransformingSequentialList' interface='false' size='17'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$TransformingSequentialList$1' interface='false' size='24'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Lists$TwoPlusArrayList' interface='false' size='19'></ClassStats><ClassStats sourceFile='MapConstraint.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraint' interface='true' size='3'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints' interface='false' size='51'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$2' interface='false' size='11'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$2$1' interface='false' size='7'></ClassStats><ClassStats priority_2='1' sourceFile='MapConstraints.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedAsMapEntries' interface='false' size='35'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedAsMapEntries$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedAsMapValues' interface='false' size='29'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedAsMapValues$1' interface='false' size='13'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedBiMap' interface='false' size='21'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedEntries' interface='false' size='29'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedEntries$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedEntrySet' interface='false' size='8'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedListMultimap' interface='false' size='14'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedMap' interface='false' size='24'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedMultimap' interface='false' size='39'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedMultimap$1' interface='false' size='28'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedMultimap$2' interface='false' size='8'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedSetMultimap' interface='false' size='17'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$ConstrainedSortedSetMultimap' interface='false' size='19'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$InverseConstraint' interface='false' size='9'></ClassStats><ClassStats sourceFile='MapConstraints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapConstraints$NotNullMapConstraint' interface='false' size='15'></ClassStats><ClassStats sourceFile='MapDifference.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapDifference' interface='true' size='8'></ClassStats><ClassStats sourceFile='MapDifference.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapDifference$ValueDifference' interface='true' size='5'></ClassStats><ClassStats sourceFile='MapEvictionListener.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapEvictionListener' interface='true' size='2'></ClassStats><ClassStats priority_2='1' sourceFile='MapMaker.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker' interface='false' size='175'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker$NullComputingConcurrentMap' interface='false' size='20'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker$NullConcurrentMap' interface='false' size='40'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker$RemovalCause' interface='false' size='19'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker$RemovalCause$1' interface='false' size='5'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker$RemovalCause$2' interface='false' size='5'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker$RemovalCause$3' interface='false' size='5'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker$RemovalCause$4' interface='false' size='5'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker$RemovalCause$5' interface='false' size='5'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker$RemovalListener' interface='true' size='2'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MapMaker$RemovalNotification' interface='false' size='11'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps' interface='false' size='157'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$2' interface='false' size='6'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$3' interface='false' size='7'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$4' interface='false' size='7'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$AbstractFilteredMap' interface='false' size='32'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$AbstractFilteredMap$Values' interface='false' size='49'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$AbstractFilteredMap$Values$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$EntrySet' interface='false' size='40'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$EntryTransformer' interface='true' size='2'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$FilteredEntryMap' interface='false' size='14'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$FilteredEntryMap$EntrySet' interface='false' size='12'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$FilteredEntryMap$EntrySet$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$FilteredEntryMap$EntrySet$1$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$FilteredEntryMap$KeySet' interface='false' size='41'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$FilteredEntryMap$KeySet$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$FilteredKeyMap' interface='false' size='16'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$ImprovedAbstractMap' interface='false' size='24'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$ImprovedAbstractMap$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$ImprovedAbstractMap$2' interface='false' size='6'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$KeySet' interface='false' size='22'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$KeySet$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$MapDifferenceImpl' interface='false' size='44'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$TransformedEntriesMap' interface='false' size='34'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$TransformedEntriesMap$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$TransformedEntriesMap$1$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$TransformedEntriesMap$2' interface='false' size='6'></ClassStats><ClassStats priority_2='1' sourceFile='Maps.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$UnmodifiableBiMap' interface='false' size='25'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$UnmodifiableEntries' interface='false' size='30'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$UnmodifiableEntries$1' interface='false' size='13'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$UnmodifiableEntrySet' interface='false' size='8'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$ValueDifferenceImpl' interface='false' size='23'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$Values' interface='false' size='39'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Maps$Values$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='MinMaxPriorityQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MinMaxPriorityQueue' interface='false' size='153'></ClassStats><ClassStats sourceFile='MinMaxPriorityQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MinMaxPriorityQueue$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='MinMaxPriorityQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MinMaxPriorityQueue$Builder' interface='false' size='32'></ClassStats><ClassStats sourceFile='MinMaxPriorityQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MinMaxPriorityQueue$Heap' interface='false' size='120'></ClassStats><ClassStats sourceFile='MinMaxPriorityQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MinMaxPriorityQueue$MoveDesc' interface='false' size='8'></ClassStats><ClassStats sourceFile='MinMaxPriorityQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MinMaxPriorityQueue$QueueIterator' interface='false' size='68'></ClassStats><ClassStats sourceFile='Multimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimap' interface='true' size='21'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps' interface='false' size='96'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$2' interface='false' size='6'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$3' interface='false' size='6'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$AsMap' interface='false' size='27'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$AsMap$EntrySet' interface='false' size='14'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$CustomListMultimap' interface='false' size='22'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$CustomMultimap' interface='false' size='20'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$CustomSetMultimap' interface='false' size='22'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$CustomSortedSetMultimap' interface='false' size='28'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$Entries' interface='false' size='19'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$EntrySet' interface='false' size='7'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$Keys' interface='false' size='53'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$Keys$1' interface='false' size='14'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$Keys$1$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$Keys$2' interface='false' size='7'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$Keys$KeysEntrySet' interface='false' size='26'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$MapMultimap' interface='false' size='75'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$MapMultimap$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$MapMultimap$1$1' interface='false' size='17'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$MapMultimap$AsMap' interface='false' size='16'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$MapMultimap$AsMapEntries' interface='false' size='24'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$MapMultimap$AsMapEntries$1' interface='false' size='15'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$MapMultimap$AsMapEntries$1$1' interface='false' size='10'></ClassStats><ClassStats priority_2='1' sourceFile='Multimaps.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesListMultimap' interface='false' size='17'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesListMultimap$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesMultimap' interface='false' size='72'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesMultimap$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesMultimap$2' interface='false' size='7'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesMultimap$3' interface='false' size='7'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesMultimap$TransformedEntries' interface='false' size='17'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesMultimap$TransformedEntries$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$TransformedEntriesMultimap$TransformedEntries$1$1' interface='false' size='9'></ClassStats><ClassStats priority_2='2' sourceFile='Multimaps.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries' interface='false' size='24'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapEntries$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapValues' interface='false' size='21'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableAsMapValues$1' interface='false' size='12'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableListMultimap' interface='false' size='19'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableMultimap' interface='false' size='58'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableMultimap$1' interface='false' size='22'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableSetMultimap' interface='false' size='22'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$UnmodifiableSortedSetMultimap' interface='false' size='25'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$Values' interface='false' size='14'></ClassStats><ClassStats sourceFile='Multimaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multimaps$Values$1' interface='false' size='12'></ClassStats><ClassStats sourceFile='Multiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multiset' interface='true' size='18'></ClassStats><ClassStats sourceFile='Multiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multiset$Entry' interface='true' size='6'></ClassStats><ClassStats sourceFile='Multisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multisets' interface='false' size='123'></ClassStats><ClassStats sourceFile='Multisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multisets$1' interface='false' size='15'></ClassStats><ClassStats sourceFile='Multisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multisets$1$1' interface='false' size='15'></ClassStats><ClassStats sourceFile='Multisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multisets$AbstractEntry' interface='false' size='15'></ClassStats><ClassStats sourceFile='Multisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multisets$ElementSet' interface='false' size='23'></ClassStats><ClassStats sourceFile='Multisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multisets$ElementSet$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Multisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multisets$EntrySet' interface='false' size='17'></ClassStats><ClassStats sourceFile='Multisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multisets$ImmutableEntry' interface='false' size='14'></ClassStats><ClassStats sourceFile='Multisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multisets$MultisetIteratorImpl' interface='false' size='31'></ClassStats><ClassStats sourceFile='Multisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multisets$SetMultiset' interface='false' size='55'></ClassStats><ClassStats sourceFile='Multisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multisets$SetMultiset$1' interface='false' size='10'></ClassStats><ClassStats sourceFile='Multisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multisets$SetMultiset$1$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Multisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multisets$SetMultiset$ElementSet' interface='false' size='12'></ClassStats><ClassStats sourceFile='Multisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Multisets$UnmodifiableMultiset' interface='false' size='44'></ClassStats><ClassStats sourceFile='MutableClassToInstanceMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MutableClassToInstanceMap' interface='false' size='22'></ClassStats><ClassStats sourceFile='MutableClassToInstanceMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$MutableClassToInstanceMap$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='NaturalOrdering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$NaturalOrdering' interface='false' size='27'></ClassStats><ClassStats sourceFile='NullsFirstOrdering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$NullsFirstOrdering' interface='false' size='32'></ClassStats><ClassStats sourceFile='NullsLastOrdering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$NullsLastOrdering' interface='false' size='32'></ClassStats><ClassStats sourceFile='ObjectArrays.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ObjectArrays' interface='false' size='45'></ClassStats><ClassStats sourceFile='Ordering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Ordering' interface='false' size='122'></ClassStats><ClassStats sourceFile='Ordering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Ordering$ArbitraryOrdering' interface='false' size='20'></ClassStats><ClassStats sourceFile='Ordering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Ordering$ArbitraryOrdering$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='Ordering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Ordering$ArbitraryOrderingHolder' interface='false' size='6'></ClassStats><ClassStats sourceFile='Ordering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Ordering$IncomparableValueException' interface='false' size='7'></ClassStats><ClassStats sourceFile='PeekingIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$PeekingIterator' interface='true' size='4'></ClassStats><ClassStats sourceFile='Platform.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Platform' interface='false' size='16'></ClassStats><ClassStats sourceFile='Range.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Range' interface='false' size='92'></ClassStats><ClassStats sourceFile='Ranges.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Ranges' interface='false' size='54'></ClassStats><ClassStats sourceFile='Ranges.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Ranges$1' interface='false' size='4'></ClassStats><ClassStats sourceFile='RegularContiguousSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularContiguousSet' interface='false' size='75'></ClassStats><ClassStats sourceFile='RegularContiguousSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularContiguousSet$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='RegularContiguousSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularContiguousSet$SerializedForm' interface='false' size='12'></ClassStats><ClassStats priority_2='3' sourceFile='RegularImmutableBiMap.java' bugs='3' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableBiMap' interface='false' size='25'></ClassStats><ClassStats priority_2='1' sourceFile='RegularImmutableList.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableList' interface='false' size='90'></ClassStats><ClassStats sourceFile='RegularImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableList$1' interface='false' size='6'></ClassStats><ClassStats priority_2='4' sourceFile='RegularImmutableMap.java' bugs='4' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap' interface='false' size='84'></ClassStats><ClassStats priority_2='2' sourceFile='RegularImmutableMap.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$EntrySet' interface='false' size='12'></ClassStats><ClassStats sourceFile='RegularImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$KeySet' interface='false' size='14'></ClassStats><ClassStats sourceFile='RegularImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$LinkedEntry' interface='true' size='2'></ClassStats><ClassStats sourceFile='RegularImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$NonTerminalEntry' interface='false' size='8'></ClassStats><ClassStats sourceFile='RegularImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$TerminalEntry' interface='false' size='6'></ClassStats><ClassStats sourceFile='RegularImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$Values' interface='false' size='16'></ClassStats><ClassStats sourceFile='RegularImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMap$Values$1' interface='false' size='6'></ClassStats><ClassStats priority_2='3' sourceFile='RegularImmutableMultiset.java' bugs='3' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset' interface='false' size='28'></ClassStats><ClassStats sourceFile='RegularImmutableMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableMultiset$1' interface='false' size='11'></ClassStats><ClassStats priority_2='4' sourceFile='RegularImmutableSet.java' bugs='4' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSet' interface='false' size='23'></ClassStats><ClassStats priority_2='2' sourceFile='RegularImmutableSortedMultiset.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset' interface='false' size='71'></ClassStats><ClassStats sourceFile='RegularImmutableSortedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='RegularImmutableSortedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset$2' interface='false' size='4'></ClassStats><ClassStats sourceFile='RegularImmutableSortedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedMultiset$CumulativeCountEntry' interface='false' size='14'></ClassStats><ClassStats priority_2='1' sourceFile='RegularImmutableSortedSet.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RegularImmutableSortedSet' interface='false' size='108'></ClassStats><ClassStats sourceFile='ReverseNaturalOrdering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ReverseNaturalOrdering' interface='false' size='38'></ClassStats><ClassStats sourceFile='ReverseOrdering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$ReverseOrdering' interface='false' size='34'></ClassStats><ClassStats sourceFile='RowSortedTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$RowSortedTable' interface='true' size='3'></ClassStats><ClassStats sourceFile='Serialization.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Serialization' interface='false' size='64'></ClassStats><ClassStats sourceFile='Serialization.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Serialization$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='Serialization.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Serialization$FieldSetter' interface='false' size='21'></ClassStats><ClassStats sourceFile='SetMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SetMultimap' interface='true' size='7'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets' interface='false' size='127'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$1' interface='false' size='20'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$2' interface='false' size='16'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$3' interface='false' size='14'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$CartesianSet' interface='false' size='43'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$CartesianSet$1' interface='false' size='17'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$CartesianSet$Axis' interface='false' size='24'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$FilteredSet' interface='false' size='8'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$InvertibleFunction' interface='false' size='6'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$InvertibleFunction$1' interface='false' size='10'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$PowerSet' interface='false' size='30'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$PowerSet$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$PowerSet$1$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$PowerSet$BitFilteredSetIterator' interface='false' size='17'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$SetFromMap' interface='false' size='45'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$SetView' interface='false' size='10'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Sets$TransformedSet' interface='false' size='23'></ClassStats><ClassStats priority_2='1' sourceFile='SingletonImmutableList.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableList' interface='false' size='57'></ClassStats><ClassStats sourceFile='SingletonImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableList$1' interface='false' size='25'></ClassStats><ClassStats priority_2='4' sourceFile='SingletonImmutableMap.java' bugs='4' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap' interface='false' size='60'></ClassStats><ClassStats sourceFile='SingletonImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableMap$Values' interface='false' size='18'></ClassStats><ClassStats priority_2='3' sourceFile='SingletonImmutableSet.java' bugs='3' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SingletonImmutableSet' interface='false' size='51'></ClassStats><ClassStats sourceFile='SortedIterable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedIterable' interface='true' size='3'></ClassStats><ClassStats sourceFile='SortedIterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedIterables' interface='false' size='83'></ClassStats><ClassStats sourceFile='SortedIterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedIterables$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='SortedIterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedIterables$2' interface='false' size='6'></ClassStats><ClassStats sourceFile='SortedLists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedLists' interface='false' size='29'></ClassStats><ClassStats sourceFile='SortedLists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedLists$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='SortedLists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedLists$KeyAbsentBehavior' interface='false' size='15'></ClassStats><ClassStats sourceFile='SortedLists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedLists$KeyAbsentBehavior$1' interface='false' size='5'></ClassStats><ClassStats sourceFile='SortedLists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedLists$KeyAbsentBehavior$2' interface='false' size='5'></ClassStats><ClassStats sourceFile='SortedLists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedLists$KeyAbsentBehavior$3' interface='false' size='5'></ClassStats><ClassStats sourceFile='SortedLists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedLists$KeyPresentBehavior' interface='false' size='19'></ClassStats><ClassStats sourceFile='SortedLists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedLists$KeyPresentBehavior$1' interface='false' size='5'></ClassStats><ClassStats sourceFile='SortedLists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedLists$KeyPresentBehavior$2' interface='false' size='14'></ClassStats><ClassStats sourceFile='SortedLists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedLists$KeyPresentBehavior$3' interface='false' size='14'></ClassStats><ClassStats sourceFile='SortedLists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedLists$KeyPresentBehavior$4' interface='false' size='5'></ClassStats><ClassStats sourceFile='SortedLists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedLists$KeyPresentBehavior$5' interface='false' size='5'></ClassStats><ClassStats sourceFile='SortedMapDifference.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedMapDifference' interface='true' size='5'></ClassStats><ClassStats sourceFile='SortedMaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedMaps' interface='false' size='52'></ClassStats><ClassStats sourceFile='SortedMaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedMaps$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='SortedMaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedMaps$2' interface='false' size='7'></ClassStats><ClassStats sourceFile='SortedMaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedMaps$3' interface='false' size='7'></ClassStats><ClassStats sourceFile='SortedMaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedMaps$FilteredSortedMap' interface='false' size='23'></ClassStats><ClassStats sourceFile='SortedMaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedMaps$SortedMapDifferenceImpl' interface='false' size='17'></ClassStats><ClassStats sourceFile='SortedMaps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedMaps$TransformedEntriesSortedMap' interface='false' size='18'></ClassStats><ClassStats sourceFile='SortedMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedMultiset' interface='true' size='12'></ClassStats><ClassStats sourceFile='SortedMultisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedMultisets' interface='false' size='10'></ClassStats><ClassStats sourceFile='SortedMultisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedMultisets$DescendingMultiset' interface='false' size='52'></ClassStats><ClassStats sourceFile='SortedMultisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedMultisets$DescendingMultiset$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='SortedMultisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedMultisets$DescendingMultiset$2' interface='false' size='10'></ClassStats><ClassStats sourceFile='SortedMultisets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedMultisets$ElementSet' interface='false' size='17'></ClassStats><ClassStats sourceFile='SortedSetMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedSetMultimap' interface='true' size='6'></ClassStats><ClassStats sourceFile='SortedTreeMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedTreeMultiset' interface='false' size='109'></ClassStats><ClassStats sourceFile='SortedTreeMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedTreeMultiset$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='SortedTreeMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedTreeMultiset$2' interface='false' size='18'></ClassStats><ClassStats sourceFile='SortedTreeMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedTreeMultiset$3' interface='false' size='10'></ClassStats><ClassStats sourceFile='SortedTreeMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedTreeMultiset$4' interface='false' size='10'></ClassStats><ClassStats sourceFile='SortedTreeMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedTreeMultiset$5' interface='false' size='7'></ClassStats><ClassStats sourceFile='SortedTreeMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedTreeMultiset$AddModifier' interface='false' size='12'></ClassStats><ClassStats sourceFile='SortedTreeMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedTreeMultiset$ConditionalSetCountModifier' interface='false' size='14'></ClassStats><ClassStats sourceFile='SortedTreeMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedTreeMultiset$MultisetModifier' interface='false' size='17'></ClassStats><ClassStats sourceFile='SortedTreeMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedTreeMultiset$Node' interface='false' size='22'></ClassStats><ClassStats sourceFile='SortedTreeMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedTreeMultiset$RemoveModifier' interface='false' size='12'></ClassStats><ClassStats sourceFile='SortedTreeMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$SortedTreeMultiset$SetCountModifier' interface='false' size='12'></ClassStats><ClassStats sourceFile='StandardRowSortedTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardRowSortedTable' interface='false' size='20'></ClassStats><ClassStats sourceFile='StandardRowSortedTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardRowSortedTable$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='StandardRowSortedTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardRowSortedTable$RowKeySortedSet' interface='false' size='21'></ClassStats><ClassStats sourceFile='StandardRowSortedTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardRowSortedTable$RowSortedMap' interface='false' size='21'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable' interface='false' size='140'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$2' interface='false' size='11'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$CellIterator' interface='false' size='24'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$CellSet' interface='false' size='19'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Column' interface='false' size='39'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Column$EntrySet' interface='false' size='35'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Column$EntrySetIterator' interface='false' size='14'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Column$EntrySetIterator$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Column$KeySet' interface='false' size='26'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Column$KeySet$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Column$Values' interface='false' size='33'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Column$Values$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Column$Values$2' interface='false' size='8'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$ColumnKeyIterator' interface='false' size='20'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$ColumnKeySet' interface='false' size='53'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$ColumnMap' interface='false' size='22'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$ColumnMap$ColumnMapEntrySet' interface='false' size='34'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$ColumnMap$ColumnMapEntrySet$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$ColumnMap$ColumnMapValues' interface='false' size='31'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Row' interface='false' size='56'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Row$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Row$RowEntrySet' interface='false' size='16'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Row$RowEntrySet$1' interface='false' size='15'></ClassStats><ClassStats priority_2='1' sourceFile='StandardTable.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Row$RowEntrySet$1$1' interface='false' size='12'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$RowKeySet' interface='false' size='12'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$RowMap' interface='false' size='17'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$RowMap$EntryIterator' interface='false' size='15'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$RowMap$EntrySet' interface='false' size='18'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$TableCollection' interface='false' size='10'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$TableSet' interface='false' size='10'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Values' interface='false' size='10'></ClassStats><ClassStats sourceFile='StandardTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$StandardTable$Values$1' interface='false' size='12'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized' interface='false' size='57'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedAsMap' interface='false' size='28'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedAsMapEntries' interface='false' size='42'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedAsMapEntries$1' interface='false' size='12'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedAsMapEntries$1$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedAsMapValues' interface='false' size='8'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedAsMapValues$1' interface='false' size='11'></ClassStats><ClassStats priority_2='1' sourceFile='Synchronized.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedBiMap' interface='false' size='31'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedCollection' interface='false' size='61'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedList' interface='false' size='57'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedListMultimap' interface='false' size='25'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedMap' interface='false' size='78'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedMultimap' interface='false' size='107'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedMultiset' interface='false' size='54'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedObject' interface='false' size='20'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedRandomAccessList' interface='false' size='5'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedSet' interface='false' size='20'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedSetMultimap' interface='false' size='33'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedSortedMap' interface='false' size='34'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedSortedSet' interface='false' size='35'></ClassStats><ClassStats sourceFile='Synchronized.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Synchronized$SynchronizedSortedSetMultimap' interface='false' size='33'></ClassStats><ClassStats sourceFile='Table.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Table' interface='true' size='22'></ClassStats><ClassStats sourceFile='Table.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Table$Cell' interface='true' size='6'></ClassStats><ClassStats sourceFile='Tables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables' interface='false' size='13'></ClassStats><ClassStats sourceFile='Tables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$AbstractCell' interface='false' size='14'></ClassStats><ClassStats sourceFile='Tables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$ImmutableCell' interface='false' size='17'></ClassStats><ClassStats sourceFile='Tables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransformedTable' interface='false' size='70'></ClassStats><ClassStats sourceFile='Tables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransformedTable$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Tables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransformedTable$2' interface='false' size='7'></ClassStats><ClassStats sourceFile='Tables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransformedTable$3' interface='false' size='7'></ClassStats><ClassStats sourceFile='Tables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransformedTable$CellSet' interface='false' size='23'></ClassStats><ClassStats sourceFile='Tables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransposeTable' interface='false' size='64'></ClassStats><ClassStats sourceFile='Tables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransposeTable$1' interface='false' size='6'></ClassStats><ClassStats priority_2='1' sourceFile='Tables.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.collect.$Tables$TransposeTable$CellSet' interface='false' size='27'></ClassStats><ClassStats sourceFile='TransformedImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$TransformedImmutableList' interface='false' size='50'></ClassStats><ClassStats sourceFile='TransformedImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$TransformedImmutableList$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='TransformedImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$TransformedImmutableList$TransformedView' interface='false' size='11'></ClassStats><ClassStats sourceFile='TreeBasedTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeBasedTable' interface='false' size='59'></ClassStats><ClassStats sourceFile='TreeBasedTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeBasedTable$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='TreeBasedTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeBasedTable$Factory' interface='false' size='11'></ClassStats><ClassStats sourceFile='TreeBasedTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeBasedTable$MergingIterator' interface='false' size='29'></ClassStats><ClassStats sourceFile='TreeBasedTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeBasedTable$MergingIterator$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='TreeBasedTable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeBasedTable$TreeRow' interface='false' size='70'></ClassStats><ClassStats sourceFile='TreeMultimap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultimap' interface='false' size='66'></ClassStats><ClassStats priority_2='1' priority_1='1' sourceFile='TreeMultiset.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset' interface='false' size='65'></ClassStats><ClassStats sourceFile='TreeMultiset.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$TreeMultiset$SortedMapBasedElementSet' interface='false' size='26'></ClassStats><ClassStats sourceFile='UnmodifiableIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$UnmodifiableIterator' interface='false' size='5'></ClassStats><ClassStats sourceFile='UnmodifiableListIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$UnmodifiableListIterator' interface='false' size='7'></ClassStats><ClassStats sourceFile='UsingToStringOrdering.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$UsingToStringOrdering' interface='false' size='13'></ClassStats><ClassStats sourceFile='WellBehavedMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$WellBehavedMap' interface='false' size='18'></ClassStats><ClassStats sourceFile='WellBehavedMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$WellBehavedMap$KeyToEntryConverter' interface='false' size='13'></ClassStats><ClassStats sourceFile='WellBehavedMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.collect.$WellBehavedMap$KeyToEntryConverter$1' interface='false' size='11'></ClassStats></PackageStats><PackageStats total_size='244' package='com.lexicalscope.fluentreflection.internal.guava.eventbus' total_bugs='0' total_types='15'><ClassStats sourceFile='AllowConcurrentEvents.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$AllowConcurrentEvents' interface='true' size='1'></ClassStats><ClassStats sourceFile='AnnotatedHandlerFinder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$AnnotatedHandlerFinder' interface='false' size='25'></ClassStats><ClassStats sourceFile='AsyncEventBus.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$AsyncEventBus' interface='false' size='27'></ClassStats><ClassStats sourceFile='AsyncEventBus.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$AsyncEventBus$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='DeadEvent.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$DeadEvent' interface='false' size='12'></ClassStats><ClassStats sourceFile='EventBus.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$EventBus' interface='false' size='75'></ClassStats><ClassStats sourceFile='EventBus.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$EventBus$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='EventBus.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$EventBus$2' interface='false' size='7'></ClassStats><ClassStats sourceFile='EventBus.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$EventBus$3' interface='false' size='7'></ClassStats><ClassStats sourceFile='EventBus.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$EventBus$4' interface='false' size='19'></ClassStats><ClassStats sourceFile='EventBus.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$EventBus$EventWithHandler' interface='false' size='8'></ClassStats><ClassStats sourceFile='EventHandler.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$EventHandler' interface='false' size='37'></ClassStats><ClassStats sourceFile='HandlerFindingStrategy.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$HandlerFindingStrategy' interface='true' size='2'></ClassStats><ClassStats sourceFile='Subscribe.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$Subscribe' interface='true' size='1'></ClassStats><ClassStats sourceFile='SynchronizedEventHandler.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.eventbus.$SynchronizedEventHandler' interface='false' size='7'></ClassStats></PackageStats><PackageStats priority_2='3' total_size='1357' package='com.lexicalscope.fluentreflection.internal.guava.io' total_bugs='3' total_types='43'><ClassStats sourceFile='AppendableWriter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$AppendableWriter' interface='false' size='53'></ClassStats><ClassStats sourceFile='ByteArrayDataInput.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$ByteArrayDataInput' interface='true' size='16'></ClassStats><ClassStats sourceFile='ByteArrayDataOutput.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$ByteArrayDataOutput' interface='true' size='16'></ClassStats><ClassStats sourceFile='ByteProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$ByteProcessor' interface='true' size='3'></ClassStats><ClassStats sourceFile='ByteStreams.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$ByteStreams' interface='false' size='162'></ClassStats><ClassStats sourceFile='ByteStreams.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$ByteStreams$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='ByteStreams.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$ByteStreams$2' interface='false' size='12'></ClassStats><ClassStats sourceFile='ByteStreams.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$ByteStreams$3' interface='false' size='10'></ClassStats><ClassStats sourceFile='ByteStreams.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$ByteStreams$4' interface='false' size='16'></ClassStats><ClassStats sourceFile='ByteStreams.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$ByteStreams$5' interface='false' size='7'></ClassStats><ClassStats sourceFile='ByteStreams.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$ByteStreams$ByteArrayDataInputStream' interface='false' size='76'></ClassStats><ClassStats sourceFile='ByteStreams.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$ByteStreams$ByteArrayDataOutputStream' interface='false' size='100'></ClassStats><ClassStats sourceFile='CharStreams.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$CharStreams' interface='false' size='115'></ClassStats><ClassStats sourceFile='CharStreams.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$CharStreams$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='CharStreams.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$CharStreams$2' interface='false' size='8'></ClassStats><ClassStats sourceFile='CharStreams.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$CharStreams$3' interface='false' size='8'></ClassStats><ClassStats sourceFile='CharStreams.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$CharStreams$4' interface='false' size='7'></ClassStats><ClassStats sourceFile='Closeables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$Closeables' interface='false' size='22'></ClassStats><ClassStats sourceFile='CountingInputStream.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$CountingInputStream' interface='false' size='35'></ClassStats><ClassStats sourceFile='CountingOutputStream.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$CountingOutputStream' interface='false' size='15'></ClassStats><ClassStats priority_2='1' sourceFile='FileBackedOutputStream.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream' interface='false' size='72'></ClassStats><ClassStats priority_2='1' sourceFile='FileBackedOutputStream.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream$1' interface='false' size='13'></ClassStats><ClassStats sourceFile='FileBackedOutputStream.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream$2' interface='false' size='7'></ClassStats><ClassStats sourceFile='FileBackedOutputStream.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$FileBackedOutputStream$MemoryOutput' interface='false' size='8'></ClassStats><ClassStats priority_2='1' sourceFile='Files.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.io.$Files' interface='false' size='157'></ClassStats><ClassStats sourceFile='Files.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$Files$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Files.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$Files$2' interface='false' size='8'></ClassStats><ClassStats sourceFile='Flushables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$Flushables' interface='false' size='20'></ClassStats><ClassStats sourceFile='InputSupplier.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$InputSupplier' interface='true' size='2'></ClassStats><ClassStats sourceFile='LimitInputStream.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$LimitInputStream' interface='false' size='44'></ClassStats><ClassStats sourceFile='LineBuffer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$LineBuffer' interface='false' size='36'></ClassStats><ClassStats sourceFile='LineProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$LineProcessor' interface='true' size='3'></ClassStats><ClassStats sourceFile='LineReader.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$LineReader' interface='false' size='29'></ClassStats><ClassStats sourceFile='LineReader.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$LineReader$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='LittleEndianDataInputStream.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$LittleEndianDataInputStream' interface='false' size='58'></ClassStats><ClassStats sourceFile='LittleEndianDataOutputStream.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$LittleEndianDataOutputStream' interface='false' size='46'></ClassStats><ClassStats sourceFile='MultiInputStream.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$MultiInputStream' interface='false' size='50'></ClassStats><ClassStats sourceFile='MultiReader.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$MultiReader' interface='false' size='39'></ClassStats><ClassStats sourceFile='NullOutputStream.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$NullOutputStream' interface='false' size='7'></ClassStats><ClassStats sourceFile='OutputSupplier.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$OutputSupplier' interface='true' size='2'></ClassStats><ClassStats sourceFile='PatternFilenameFilter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$PatternFilenameFilter' interface='false' size='11'></ClassStats><ClassStats sourceFile='Resources.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$Resources' interface='false' size='27'></ClassStats><ClassStats sourceFile='Resources.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.io.$Resources$1' interface='false' size='7'></ClassStats></PackageStats><PackageStats priority_2='1' total_size='578' package='com.lexicalscope.fluentreflection.internal.guava.net' total_bugs='1' total_types='6'><ClassStats sourceFile='HostAndPort.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.net.$HostAndPort' interface='false' size='79'></ClassStats><ClassStats sourceFile='HostSpecifier.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.net.$HostSpecifier' interface='false' size='42'></ClassStats><ClassStats priority_2='1' sourceFile='InetAddresses.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.net.$InetAddresses' interface='false' size='304'></ClassStats><ClassStats sourceFile='InetAddresses.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.net.$InetAddresses$TeredoInfo' interface='false' size='26'></ClassStats><ClassStats sourceFile='InternetDomainName.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.net.$InternetDomainName' interface='false' size='116'></ClassStats><ClassStats sourceFile='TldPatterns.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.net.$TldPatterns' interface='false' size='11'></ClassStats></PackageStats><PackageStats total_size='1902' package='com.lexicalscope.fluentreflection.internal.guava.primitives' total_bugs='0' total_types='33'><ClassStats sourceFile='Booleans.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Booleans' interface='false' size='82'></ClassStats><ClassStats sourceFile='Booleans.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Booleans$BooleanArrayAsList' interface='false' size='78'></ClassStats><ClassStats sourceFile='Booleans.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Booleans$LexicographicalComparator' interface='false' size='17'></ClassStats><ClassStats sourceFile='Bytes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Bytes' interface='false' size='69'></ClassStats><ClassStats sourceFile='Bytes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Bytes$ByteArrayAsList' interface='false' size='78'></ClassStats><ClassStats sourceFile='Chars.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Chars' interface='false' size='115'></ClassStats><ClassStats sourceFile='Chars.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Chars$CharArrayAsList' interface='false' size='78'></ClassStats><ClassStats sourceFile='Chars.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Chars$LexicographicalComparator' interface='false' size='17'></ClassStats><ClassStats sourceFile='Doubles.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Doubles' interface='false' size='97'></ClassStats><ClassStats sourceFile='Doubles.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Doubles$DoubleArrayAsList' interface='false' size='78'></ClassStats><ClassStats sourceFile='Doubles.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Doubles$LexicographicalComparator' interface='false' size='17'></ClassStats><ClassStats sourceFile='Floats.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Floats' interface='false' size='97'></ClassStats><ClassStats sourceFile='Floats.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Floats$FloatArrayAsList' interface='false' size='78'></ClassStats><ClassStats sourceFile='Floats.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Floats$LexicographicalComparator' interface='false' size='17'></ClassStats><ClassStats sourceFile='Ints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Ints' interface='false' size='115'></ClassStats><ClassStats sourceFile='Ints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Ints$IntArrayAsList' interface='false' size='78'></ClassStats><ClassStats sourceFile='Ints.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Ints$LexicographicalComparator' interface='false' size='17'></ClassStats><ClassStats sourceFile='Longs.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Longs' interface='false' size='105'></ClassStats><ClassStats sourceFile='Longs.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Longs$LexicographicalComparator' interface='false' size='17'></ClassStats><ClassStats sourceFile='Longs.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Longs$LongArrayAsList' interface='false' size='78'></ClassStats><ClassStats sourceFile='Primitives.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Primitives' interface='false' size='38'></ClassStats><ClassStats sourceFile='Shorts.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Shorts' interface='false' size='115'></ClassStats><ClassStats sourceFile='Shorts.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Shorts$LexicographicalComparator' interface='false' size='17'></ClassStats><ClassStats sourceFile='Shorts.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$Shorts$ShortArrayAsList' interface='false' size='78'></ClassStats><ClassStats sourceFile='SignedBytes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$SignedBytes' interface='false' size='41'></ClassStats><ClassStats sourceFile='SignedBytes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$SignedBytes$LexicographicalComparator' interface='false' size='17'></ClassStats><ClassStats sourceFile='UnsignedBytes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$UnsignedBytes' interface='false' size='46'></ClassStats><ClassStats sourceFile='UnsignedBytes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$UnsignedBytes$LexicographicalComparatorHolder' interface='false' size='15'></ClassStats><ClassStats sourceFile='UnsignedBytes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator' interface='false' size='17'></ClassStats><ClassStats sourceFile='UnsignedBytes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator' interface='false' size='48'></ClassStats><ClassStats sourceFile='UnsignedBytes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='UnsignedLongs.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$UnsignedLongs' interface='false' size='115'></ClassStats><ClassStats sourceFile='UnsignedLongs.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.primitives.$UnsignedLongs$LexicographicalComparator' interface='false' size='16'></ClassStats></PackageStats><PackageStats priority_2='1' priority_1='3' total_size='2103' package='com.lexicalscope.fluentreflection.internal.guava.util.concurrent' total_bugs='4' total_types='80'><ClassStats sourceFile='AbstractCheckedFuture.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractCheckedFuture' interface='false' size='23'></ClassStats><ClassStats sourceFile='AbstractExecutionThreadService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractExecutionThreadService' interface='false' size='30'></ClassStats><ClassStats sourceFile='AbstractExecutionThreadService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractExecutionThreadService$1' interface='false' size='10'></ClassStats><ClassStats sourceFile='AbstractExecutionThreadService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractExecutionThreadService$1$1' interface='false' size='21'></ClassStats><ClassStats sourceFile='AbstractExecutionThreadService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractExecutionThreadService$2' interface='false' size='7'></ClassStats><ClassStats sourceFile='AbstractFuture.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractFuture' interface='false' size='48'></ClassStats><ClassStats sourceFile='AbstractFuture.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractFuture$Sync' interface='false' size='49'></ClassStats><ClassStats sourceFile='AbstractIdleService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractIdleService' interface='false' size='26'></ClassStats><ClassStats sourceFile='AbstractIdleService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractIdleService$1' interface='false' size='10'></ClassStats><ClassStats sourceFile='AbstractIdleService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractIdleService$1$1' interface='false' size='12'></ClassStats><ClassStats sourceFile='AbstractIdleService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractIdleService$1$2' interface='false' size='12'></ClassStats><ClassStats sourceFile='AbstractIdleService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractIdleService$2' interface='false' size='8'></ClassStats><ClassStats sourceFile='AbstractListenableFuture.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractListenableFuture' interface='false' size='3'></ClassStats><ClassStats priority_2='1' sourceFile='AbstractListeningExecutorService.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractListeningExecutorService' interface='false' size='124'></ClassStats><ClassStats sourceFile='AbstractService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractService' interface='false' size='93'></ClassStats><ClassStats sourceFile='AbstractService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractService$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='AbstractService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$AbstractService$Transition' interface='false' size='10'></ClassStats><ClassStats sourceFile='Atomics.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Atomics' interface='false' size='11'></ClassStats><ClassStats sourceFile='Callables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Callables' interface='false' size='5'></ClassStats><ClassStats sourceFile='Callables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Callables$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='CheckedFuture.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$CheckedFuture' interface='true' size='3'></ClassStats><ClassStats sourceFile='ExecutionError.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ExecutionError' interface='false' size='13'></ClassStats><ClassStats sourceFile='ExecutionList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ExecutionList' interface='false' size='37'></ClassStats><ClassStats sourceFile='ExecutionList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ExecutionList$RunnableExecutorPair' interface='false' size='14'></ClassStats><ClassStats sourceFile='FakeTimeLimiter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$FakeTimeLimiter' interface='false' size='7'></ClassStats><ClassStats sourceFile='ForwardingBlockingQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ForwardingBlockingQueue' interface='false' size='23'></ClassStats><ClassStats sourceFile='ForwardingCheckedFuture.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ForwardingCheckedFuture' interface='false' size='13'></ClassStats><ClassStats sourceFile='ForwardingCheckedFuture.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ForwardingCheckedFuture$SimpleForwardingCheckedFuture' interface='false' size='12'></ClassStats><ClassStats sourceFile='ForwardingExecutorService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ForwardingExecutorService' interface='false' size='34'></ClassStats><ClassStats sourceFile='ForwardingFuture.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ForwardingFuture' interface='false' size='16'></ClassStats><ClassStats sourceFile='ForwardingFuture.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ForwardingFuture$SimpleForwardingFuture' interface='false' size='10'></ClassStats><ClassStats sourceFile='ForwardingListenableFuture.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ForwardingListenableFuture' interface='false' size='10'></ClassStats><ClassStats sourceFile='ForwardingListenableFuture.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ForwardingListenableFuture$SimpleForwardingListenableFuture' interface='false' size='11'></ClassStats><ClassStats sourceFile='ForwardingListeningExecutorService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ForwardingListeningExecutorService' interface='false' size='16'></ClassStats><ClassStats sourceFile='ForwardingService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ForwardingService' interface='false' size='22'></ClassStats><ClassStats sourceFile='FutureCallback.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$FutureCallback' interface='true' size='3'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures' interface='false' size='141'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures$1' interface='false' size='14'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures$2' interface='false' size='6'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures$3' interface='false' size='7'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures$4' interface='false' size='8'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures$5' interface='false' size='19'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures$6' interface='false' size='37'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures$7' interface='false' size='16'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures$8' interface='false' size='6'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures$ChainingListenableFuture' interface='false' size='78'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures$ChainingListenableFuture$1' interface='false' size='14'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures$ListFuture' interface='false' size='75'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures$ListFuture$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures$ListFuture$2' interface='false' size='9'></ClassStats><ClassStats sourceFile='Futures.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Futures$MappingCheckedFuture' interface='false' size='8'></ClassStats><ClassStats sourceFile='JdkFutureAdapters.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$JdkFutureAdapters' interface='false' size='12'></ClassStats><ClassStats sourceFile='JdkFutureAdapters.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$JdkFutureAdapters$ListenableFutureAdapter' interface='false' size='34'></ClassStats><ClassStats sourceFile='JdkFutureAdapters.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$JdkFutureAdapters$ListenableFutureAdapter$1' interface='false' size='15'></ClassStats><ClassStats sourceFile='ListenableFuture.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ListenableFuture' interface='true' size='2'></ClassStats><ClassStats sourceFile='ListenableFutureTask.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ListenableFutureTask' interface='false' size='19'></ClassStats><ClassStats sourceFile='ListeningExecutorService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ListeningExecutorService' interface='true' size='6'></ClassStats><ClassStats sourceFile='ListeningScheduledExecutorService.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ListeningScheduledExecutorService' interface='true' size='1'></ClassStats><ClassStats priority_1='2' sourceFile='Monitor.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor' interface='false' size='349'></ClassStats><ClassStats sourceFile='Monitor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Monitor$Guard' interface='false' size='15'></ClassStats><ClassStats sourceFile='MoreExecutors.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$MoreExecutors' interface='false' size='26'></ClassStats><ClassStats sourceFile='MoreExecutors.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$MoreExecutors$1' interface='false' size='12'></ClassStats><ClassStats sourceFile='MoreExecutors.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$MoreExecutors$ListeningDecorator' interface='false' size='20'></ClassStats><ClassStats sourceFile='MoreExecutors.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$MoreExecutors$SameThreadExecutorService' interface='false' size='60'></ClassStats><ClassStats sourceFile='MoreExecutors.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$MoreExecutors$ScheduledListeningDecorator' interface='false' size='14'></ClassStats><ClassStats sourceFile='Service.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Service' interface='true' size='7'></ClassStats><ClassStats sourceFile='Service.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Service$State' interface='false' size='20'></ClassStats><ClassStats sourceFile='SettableFuture.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$SettableFuture' interface='false' size='9'></ClassStats><ClassStats sourceFile='SimpleTimeLimiter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$SimpleTimeLimiter' interface='false' size='62'></ClassStats><ClassStats sourceFile='SimpleTimeLimiter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$SimpleTimeLimiter$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='SimpleTimeLimiter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$SimpleTimeLimiter$1$1' interface='false' size='11'></ClassStats><ClassStats priority_1='1' sourceFile='ThreadFactoryBuilder.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ThreadFactoryBuilder' interface='false' size='41'></ClassStats><ClassStats sourceFile='ThreadFactoryBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$ThreadFactoryBuilder$1' interface='false' size='20'></ClassStats><ClassStats sourceFile='TimeLimiter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$TimeLimiter' interface='true' size='3'></ClassStats><ClassStats sourceFile='UncaughtExceptionHandlers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$UncaughtExceptionHandlers' interface='false' size='5'></ClassStats><ClassStats sourceFile='UncaughtExceptionHandlers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$UncaughtExceptionHandlers$Exiter' interface='false' size='13'></ClassStats><ClassStats sourceFile='UncheckedExecutionException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$UncheckedExecutionException' interface='false' size='13'></ClassStats><ClassStats sourceFile='UncheckedTimeoutException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$UncheckedTimeoutException' interface='false' size='13'></ClassStats><ClassStats sourceFile='UninterruptibleFuture.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$UninterruptibleFuture' interface='true' size='3'></ClassStats><ClassStats sourceFile='Uninterruptibles.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guava.util.concurrent.$Uninterruptibles' interface='false' size='88'></ClassStats></PackageStats><PackageStats total_size='686' package='com.lexicalscope.fluentreflection.internal.guice' total_bugs='0' total_types='35'><ClassStats sourceFile='AbstractModule.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$AbstractModule' interface='false' size='65'></ClassStats><ClassStats sourceFile='Binder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Binder' interface='true' size='25'></ClassStats><ClassStats sourceFile='Binding.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Binding' interface='true' size='5'></ClassStats><ClassStats sourceFile='BindingAnnotation.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$BindingAnnotation' interface='true' size='1'></ClassStats><ClassStats sourceFile='ConfigurationException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$ConfigurationException' interface='false' size='21'></ClassStats><ClassStats sourceFile='CreationException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$CreationException' interface='false' size='13'></ClassStats><ClassStats sourceFile='Exposed.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Exposed' interface='true' size='1'></ClassStats><ClassStats sourceFile='Guice.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Guice' interface='false' size='11'></ClassStats><ClassStats sourceFile='ImplementedBy.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$ImplementedBy' interface='true' size='2'></ClassStats><ClassStats sourceFile='Inject.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Inject' interface='true' size='2'></ClassStats><ClassStats sourceFile='Injector.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Injector' interface='true' size='19'></ClassStats><ClassStats sourceFile='Key.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Key' interface='false' size='113'></ClassStats><ClassStats sourceFile='Key.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Key$AnnotationInstanceStrategy' interface='false' size='23'></ClassStats><ClassStats sourceFile='Key.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Key$AnnotationStrategy' interface='true' size='5'></ClassStats><ClassStats sourceFile='Key.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Key$AnnotationTypeStrategy' interface='false' size='25'></ClassStats><ClassStats sourceFile='Key.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Key$NullAnnotationStrategy' interface='false' size='19'></ClassStats><ClassStats sourceFile='MembersInjector.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$MembersInjector' interface='true' size='2'></ClassStats><ClassStats sourceFile='Module.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Module' interface='true' size='2'></ClassStats><ClassStats sourceFile='OutOfScopeException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$OutOfScopeException' interface='false' size='10'></ClassStats><ClassStats sourceFile='PrivateBinder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$PrivateBinder' interface='true' size='6'></ClassStats><ClassStats sourceFile='PrivateModule.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$PrivateModule' interface='false' size='72'></ClassStats><ClassStats sourceFile='ProvidedBy.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$ProvidedBy' interface='true' size='2'></ClassStats><ClassStats sourceFile='Provider.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Provider' interface='true' size='2'></ClassStats><ClassStats sourceFile='Provides.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Provides' interface='true' size='1'></ClassStats><ClassStats sourceFile='ProvisionException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$ProvisionException' interface='false' size='21'></ClassStats><ClassStats sourceFile='Scope.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Scope' interface='true' size='3'></ClassStats><ClassStats sourceFile='ScopeAnnotation.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$ScopeAnnotation' interface='true' size='1'></ClassStats><ClassStats sourceFile='Scopes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Scopes' interface='false' size='29'></ClassStats><ClassStats sourceFile='Scopes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Scopes$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Scopes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Scopes$1$1' interface='false' size='23'></ClassStats><ClassStats sourceFile='Scopes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Scopes$2' interface='false' size='7'></ClassStats><ClassStats sourceFile='Scopes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Scopes$3' interface='false' size='15'></ClassStats><ClassStats sourceFile='Singleton.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Singleton' interface='true' size='1'></ClassStats><ClassStats sourceFile='Stage.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$Stage' interface='false' size='13'></ClassStats><ClassStats sourceFile='TypeLiteral.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.$TypeLiteral' interface='false' size='119'></ClassStats></PackageStats><PackageStats total_size='36' package='com.lexicalscope.fluentreflection.internal.guice.binder' total_bugs='0' total_types='6'><ClassStats sourceFile='AnnotatedBindingBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.binder.$AnnotatedBindingBuilder' interface='true' size='3'></ClassStats><ClassStats sourceFile='AnnotatedConstantBindingBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.binder.$AnnotatedConstantBindingBuilder' interface='true' size='3'></ClassStats><ClassStats sourceFile='AnnotatedElementBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.binder.$AnnotatedElementBuilder' interface='true' size='3'></ClassStats><ClassStats sourceFile='ConstantBindingBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.binder.$ConstantBindingBuilder' interface='true' size='12'></ClassStats><ClassStats sourceFile='LinkedBindingBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.binder.$LinkedBindingBuilder' interface='true' size='11'></ClassStats><ClassStats sourceFile='ScopedBindingBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.binder.$ScopedBindingBuilder' interface='true' size='4'></ClassStats></PackageStats><PackageStats priority_2='1' total_size='3916' package='com.lexicalscope.fluentreflection.internal.guice.internal' total_bugs='1' total_types='146'><ClassStats sourceFile='AbstractBindingBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$AbstractBindingBuilder' interface='false' size='67'></ClassStats><ClassStats sourceFile='AbstractBindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$AbstractBindingProcessor' interface='false' size='46'></ClassStats><ClassStats sourceFile='AbstractBindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$AbstractBindingProcessor$Processor' interface='false' size='20'></ClassStats><ClassStats sourceFile='AbstractBindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$AbstractBindingProcessor$Processor$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='AbstractProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$AbstractProcessor' interface='false' size='29'></ClassStats><ClassStats sourceFile='Annotations.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Annotations' interface='false' size='58'></ClassStats><ClassStats sourceFile='Annotations.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Annotations$AnnotationChecker' interface='false' size='14'></ClassStats><ClassStats sourceFile='Annotations.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Annotations$AnnotationChecker$1' interface='false' size='10'></ClassStats><ClassStats sourceFile='BindingBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$BindingBuilder' interface='false' size='88'></ClassStats><ClassStats sourceFile='BindingImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$BindingImpl' interface='false' size='51'></ClassStats><ClassStats sourceFile='BindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$BindingProcessor' interface='false' size='30'></ClassStats><ClassStats sourceFile='BindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$BindingProcessor$1' interface='false' size='70'></ClassStats><ClassStats sourceFile='BoundProviderFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$BoundProviderFactory' interface='false' size='25'></ClassStats><ClassStats sourceFile='BytecodeGen.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen' interface='false' size='36'></ClassStats><ClassStats sourceFile='BytecodeGen.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='BytecodeGen.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$1$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='BytecodeGen.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$BridgeClassLoader' interface='false' size='21'></ClassStats><ClassStats priority_2='1' sourceFile='BytecodeGen.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$SystemBridgeHolder' interface='false' size='6'></ClassStats><ClassStats sourceFile='BytecodeGen.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$Visibility' interface='false' size='28'></ClassStats><ClassStats sourceFile='BytecodeGen.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$Visibility$1' interface='false' size='5'></ClassStats><ClassStats sourceFile='BytecodeGen.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$BytecodeGen$Visibility$2' interface='false' size='5'></ClassStats><ClassStats sourceFile='CircularDependencyProxy.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$CircularDependencyProxy' interface='true' size='1'></ClassStats><ClassStats sourceFile='ConstantBindingBuilderImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ConstantBindingBuilderImpl' interface='false' size='61'></ClassStats><ClassStats sourceFile='ConstantFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ConstantFactory' interface='false' size='10'></ClassStats><ClassStats sourceFile='ConstructionContext.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ConstructionContext' interface='false' size='37'></ClassStats><ClassStats sourceFile='ConstructionProxy.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ConstructionProxy' interface='true' size='4'></ClassStats><ClassStats sourceFile='ConstructionProxyFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ConstructionProxyFactory' interface='true' size='2'></ClassStats><ClassStats sourceFile='ConstructorBindingImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ConstructorBindingImpl' interface='false' size='83'></ClassStats><ClassStats sourceFile='ConstructorBindingImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ConstructorBindingImpl$Factory' interface='false' size='19'></ClassStats><ClassStats sourceFile='ConstructorInjector.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ConstructorInjector' interface='false' size='39'></ClassStats><ClassStats sourceFile='ConstructorInjectorStore.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ConstructorInjectorStore' interface='false' size='21'></ClassStats><ClassStats sourceFile='ConstructorInjectorStore.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ConstructorInjectorStore$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='ContextualCallable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ContextualCallable' interface='true' size='2'></ClassStats><ClassStats sourceFile='CreationListener.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$CreationListener' interface='true' size='2'></ClassStats><ClassStats sourceFile='DefaultConstructionProxyFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$DefaultConstructionProxyFactory' interface='false' size='17'></ClassStats><ClassStats sourceFile='DefaultConstructionProxyFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$DefaultConstructionProxyFactory$1' interface='false' size='15'></ClassStats><ClassStats sourceFile='DeferredLookups.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$DeferredLookups' interface='false' size='20'></ClassStats><ClassStats sourceFile='DelegatingInvocationHandler.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$DelegatingInvocationHandler' interface='false' size='19'></ClassStats><ClassStats sourceFile='EncounterImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$EncounterImpl' interface='false' size='53'></ClassStats><ClassStats sourceFile='ErrorHandler.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ErrorHandler' interface='true' size='3'></ClassStats><ClassStats sourceFile='Errors.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Errors' interface='false' size='295'></ClassStats><ClassStats sourceFile='Errors.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Errors$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Errors.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Errors$2' interface='false' size='6'></ClassStats><ClassStats sourceFile='Errors.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Errors$3' interface='false' size='6'></ClassStats><ClassStats sourceFile='Errors.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Errors$4' interface='false' size='8'></ClassStats><ClassStats sourceFile='Errors.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Errors$Converter' interface='false' size='11'></ClassStats><ClassStats sourceFile='ErrorsException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ErrorsException' interface='false' size='8'></ClassStats><ClassStats sourceFile='Exceptions.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Exceptions' interface='false' size='13'></ClassStats><ClassStats sourceFile='Exceptions.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Exceptions$UnhandledCheckedUserException' interface='false' size='4'></ClassStats><ClassStats sourceFile='ExposedBindingImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ExposedBindingImpl' interface='false' size='16'></ClassStats><ClassStats sourceFile='ExposedKeyFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ExposedKeyFactory' interface='false' size='19'></ClassStats><ClassStats sourceFile='ExposureBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ExposureBuilder' interface='false' size='30'></ClassStats><ClassStats sourceFile='FactoryProxy.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$FactoryProxy' interface='false' size='23'></ClassStats><ClassStats sourceFile='FailableCache.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$FailableCache' interface='false' size='15'></ClassStats><ClassStats sourceFile='FailableCache.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$FailableCache$1' interface='false' size='12'></ClassStats><ClassStats sourceFile='InheritingState.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InheritingState' interface='false' size='71'></ClassStats><ClassStats sourceFile='Initializable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Initializable' interface='true' size='2'></ClassStats><ClassStats sourceFile='Initializables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Initializables' interface='false' size='5'></ClassStats><ClassStats sourceFile='Initializables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Initializables$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='Initializer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Initializer' interface='false' size='37'></ClassStats><ClassStats sourceFile='Initializer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Initializer$InjectableReference' interface='false' size='29'></ClassStats><ClassStats sourceFile='InjectionRequestProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectionRequestProcessor' interface='false' size='30'></ClassStats><ClassStats sourceFile='InjectionRequestProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectionRequestProcessor$StaticInjection' interface='false' size='27'></ClassStats><ClassStats sourceFile='InjectionRequestProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectionRequestProcessor$StaticInjection$1' interface='false' size='10'></ClassStats><ClassStats sourceFile='InjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorImpl' interface='false' size='335'></ClassStats><ClassStats sourceFile='InjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorImpl$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='InjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorImpl$2' interface='false' size='18'></ClassStats><ClassStats sourceFile='InjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorImpl$3' interface='false' size='8'></ClassStats><ClassStats sourceFile='InjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorImpl$4' interface='false' size='15'></ClassStats><ClassStats sourceFile='InjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorImpl$4$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='InjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorImpl$BindingsMultimap' interface='false' size='16'></ClassStats><ClassStats sourceFile='InjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorImpl$ConvertedConstantBindingImpl' interface='false' size='35'></ClassStats><ClassStats sourceFile='InjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorImpl$InjectorOptions' interface='false' size='12'></ClassStats><ClassStats sourceFile='InjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorImpl$JitLimitation' interface='false' size='13'></ClassStats><ClassStats sourceFile='InjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorImpl$MethodInvoker' interface='true' size='2'></ClassStats><ClassStats sourceFile='InjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorImpl$ProviderBindingImpl' interface='false' size='26'></ClassStats><ClassStats sourceFile='InjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorImpl$ProviderBindingImpl$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='InjectorOptionsProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorOptionsProcessor' interface='false' size='23'></ClassStats><ClassStats sourceFile='InjectorShell.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorShell' interface='false' size='26'></ClassStats><ClassStats sourceFile='InjectorShell.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorShell$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='InjectorShell.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorShell$Builder' interface='false' size='75'></ClassStats><ClassStats sourceFile='InjectorShell.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorShell$InjectorFactory' interface='false' size='16'></ClassStats><ClassStats sourceFile='InjectorShell.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorShell$LoggerFactory' interface='false' size='13'></ClassStats><ClassStats sourceFile='InjectorShell.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InjectorShell$RootModule' interface='false' size='14'></ClassStats><ClassStats sourceFile='InstanceBindingImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InstanceBindingImpl' interface='false' size='42'></ClassStats><ClassStats sourceFile='InternalContext.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InternalContext' interface='false' size='18'></ClassStats><ClassStats sourceFile='InternalFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InternalFactory' interface='true' size='2'></ClassStats><ClassStats sourceFile='InternalFactoryToProviderAdapter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InternalFactoryToProviderAdapter' interface='false' size='14'></ClassStats><ClassStats sourceFile='InternalInjectorCreator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InternalInjectorCreator' interface='false' size='91'></ClassStats><ClassStats sourceFile='InternalInjectorCreator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InternalInjectorCreator$1' interface='false' size='18'></ClassStats><ClassStats sourceFile='InternalInjectorCreator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$InternalInjectorCreator$ToolStageInjector' interface='false' size='42'></ClassStats><ClassStats sourceFile='LinkedBindingImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$LinkedBindingImpl' interface='false' size='32'></ClassStats><ClassStats sourceFile='LinkedProviderBindingImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$LinkedProviderBindingImpl' interface='false' size='32'></ClassStats><ClassStats sourceFile='LookupProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$LookupProcessor' interface='false' size='21'></ClassStats><ClassStats sourceFile='Lookups.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Lookups' interface='true' size='3'></ClassStats><ClassStats sourceFile='MembersInjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$MembersInjectorImpl' interface='false' size='60'></ClassStats><ClassStats sourceFile='MembersInjectorImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$MembersInjectorImpl$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='MembersInjectorStore.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$MembersInjectorStore' interface='false' size='46'></ClassStats><ClassStats sourceFile='MembersInjectorStore.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$MembersInjectorStore$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='MessageProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$MessageProcessor' interface='false' size='18'></ClassStats><ClassStats sourceFile='MoreTypes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$MoreTypes' interface='false' size='135'></ClassStats><ClassStats sourceFile='MoreTypes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$MoreTypes$CompositeType' interface='true' size='2'></ClassStats><ClassStats sourceFile='MoreTypes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$MoreTypes$GenericArrayTypeImpl' interface='false' size='17'></ClassStats><ClassStats sourceFile='MoreTypes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$MoreTypes$ParameterizedTypeImpl' interface='false' size='47'></ClassStats><ClassStats sourceFile='MoreTypes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$MoreTypes$WildcardTypeImpl' interface='false' size='35'></ClassStats><ClassStats sourceFile='Nullability.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Nullability' interface='false' size='9'></ClassStats><ClassStats sourceFile='PrivateElementProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$PrivateElementProcessor' interface='false' size='14'></ClassStats><ClassStats sourceFile='PrivateElementsImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$PrivateElementsImpl' interface='false' size='56'></ClassStats><ClassStats sourceFile='ProcessedBindingData.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ProcessedBindingData' interface='false' size='21'></ClassStats><ClassStats sourceFile='ProviderInstanceBindingImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ProviderInstanceBindingImpl' interface='false' size='39'></ClassStats><ClassStats sourceFile='ProviderMethod.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ProviderMethod' interface='false' size='54'></ClassStats><ClassStats sourceFile='ProviderMethodsModule.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ProviderMethodsModule' interface='false' size='53'></ClassStats><ClassStats sourceFile='ProviderMethodsModule.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ProviderMethodsModule$LogProvider' interface='false' size='10'></ClassStats><ClassStats sourceFile='ProviderToInternalFactoryAdapter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ProviderToInternalFactoryAdapter' interface='false' size='19'></ClassStats><ClassStats sourceFile='ProviderToInternalFactoryAdapter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ProviderToInternalFactoryAdapter$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='ScopeBindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$ScopeBindingProcessor' interface='false' size='18'></ClassStats><ClassStats sourceFile='Scoping.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Scoping' interface='false' size='60'></ClassStats><ClassStats sourceFile='Scoping.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Scoping$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='Scoping.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Scoping$2' interface='false' size='12'></ClassStats><ClassStats sourceFile='Scoping.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Scoping$3' interface='false' size='12'></ClassStats><ClassStats sourceFile='Scoping.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Scoping$4' interface='false' size='12'></ClassStats><ClassStats sourceFile='Scoping.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Scoping$5' interface='false' size='13'></ClassStats><ClassStats sourceFile='Scoping.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$Scoping$6' interface='false' size='13'></ClassStats><ClassStats sourceFile='SingleFieldInjector.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$SingleFieldInjector' interface='false' size='27'></ClassStats><ClassStats sourceFile='SingleMemberInjector.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$SingleMemberInjector' interface='true' size='3'></ClassStats><ClassStats sourceFile='SingleMethodInjector.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$SingleMethodInjector' interface='false' size='33'></ClassStats><ClassStats sourceFile='SingleMethodInjector.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$SingleMethodInjector$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='SingleParameterInjector.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$SingleParameterInjector' interface='false' size='29'></ClassStats><ClassStats sourceFile='State.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$State' interface='true' size='20'></ClassStats><ClassStats sourceFile='State.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$State$1' interface='false' size='35'></ClassStats><ClassStats sourceFile='TypeConverterBindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$TypeConverterBindingProcessor' interface='false' size='41'></ClassStats><ClassStats sourceFile='TypeConverterBindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$TypeConverterBindingProcessor$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='TypeConverterBindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$TypeConverterBindingProcessor$2' interface='false' size='8'></ClassStats><ClassStats sourceFile='TypeConverterBindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$TypeConverterBindingProcessor$3' interface='false' size='9'></ClassStats><ClassStats sourceFile='TypeConverterBindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$TypeConverterBindingProcessor$4' interface='false' size='10'></ClassStats><ClassStats sourceFile='TypeConverterBindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$TypeConverterBindingProcessor$5' interface='false' size='14'></ClassStats><ClassStats sourceFile='TypeConverterBindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$TypeConverterBindingProcessor$6' interface='false' size='14'></ClassStats><ClassStats sourceFile='TypeListenerBindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$TypeListenerBindingProcessor' interface='false' size='9'></ClassStats><ClassStats sourceFile='UniqueAnnotations.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$UniqueAnnotations' interface='false' size='10'></ClassStats><ClassStats sourceFile='UniqueAnnotations.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$UniqueAnnotations$1' interface='false' size='14'></ClassStats><ClassStats sourceFile='UniqueAnnotations.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$UniqueAnnotations$Internal' interface='true' size='2'></ClassStats><ClassStats sourceFile='UntargettedBindingImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$UntargettedBindingImpl' interface='false' size='25'></ClassStats><ClassStats sourceFile='UntargettedBindingImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$UntargettedBindingImpl$1' interface='false' size='5'></ClassStats><ClassStats sourceFile='UntargettedBindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$UntargettedBindingProcessor' interface='false' size='8'></ClassStats><ClassStats sourceFile='UntargettedBindingProcessor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$UntargettedBindingProcessor$1' interface='false' size='22'></ClassStats><ClassStats sourceFile='WeakKeySet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.$WeakKeySet' interface='false' size='20'></ClassStats></PackageStats><PackageStats priority_2='13' total_size='3324' package='com.lexicalscope.fluentreflection.internal.guice.internal.util' total_bugs='13' total_types='136'><ClassStats sourceFile='AbstractIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$AbstractIterator' interface='false' size='31'></ClassStats><ClassStats sourceFile='AbstractIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$AbstractIterator$1' interface='false' size='4'></ClassStats><ClassStats sourceFile='AbstractIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$AbstractIterator$State' interface='false' size='15'></ClassStats><ClassStats sourceFile='AbstractMapEntry.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$AbstractMapEntry' interface='false' size='18'></ClassStats><ClassStats sourceFile='AsynchronousComputationException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$AsynchronousComputationException' interface='false' size='4'></ClassStats><ClassStats sourceFile='Classes.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Classes' interface='false' size='26'></ClassStats><ClassStats sourceFile='Collections2.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Collections2' interface='false' size='12'></ClassStats><ClassStats sourceFile='ComputationException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ComputationException' interface='false' size='4'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap' interface='false' size='12'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Builder' interface='false' size='34'></ClassStats><ClassStats priority_2='1' sourceFile='CustomConcurrentHashMap.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$ComputingImpl' interface='false' size='53'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$ComputingStrategy' interface='true' size='3'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl' interface='false' size='238'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$EntryIterator' interface='false' size='7'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$EntrySet' interface='false' size='28'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$Fields' interface='false' size='20'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$HashIterator' interface='false' size='67'></ClassStats><ClassStats priority_2='1' sourceFile='CustomConcurrentHashMap.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$InternalsImpl' interface='false' size='20'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$KeyIterator' interface='false' size='6'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$KeySet' interface='false' size='17'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$Segment' interface='false' size='244'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$ValueIterator' interface='false' size='6'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$Values' interface='false' size='15'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Impl$WriteThroughEntry' interface='false' size='19'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Internals' interface='true' size='4'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$SimpleInternalEntry' interface='false' size='12'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$SimpleStrategy' interface='false' size='33'></ClassStats><ClassStats sourceFile='CustomConcurrentHashMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$CustomConcurrentHashMap$Strategy' interface='true' size='12'></ClassStats><ClassStats sourceFile='ExpirationTimer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ExpirationTimer' interface='false' size='6'></ClassStats><ClassStats sourceFile='FinalizablePhantomReference.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizablePhantomReference' interface='false' size='5'></ClassStats><ClassStats sourceFile='FinalizableReference.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableReference' interface='true' size='2'></ClassStats><ClassStats sourceFile='FinalizableReferenceQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableReferenceQueue' interface='false' size='47'></ClassStats><ClassStats priority_2='1' sourceFile='FinalizableReferenceQueue.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableReferenceQueue$DecoupledLoader' interface='false' size='22'></ClassStats><ClassStats sourceFile='FinalizableReferenceQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableReferenceQueue$DirectLoader' interface='false' size='7'></ClassStats><ClassStats sourceFile='FinalizableReferenceQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableReferenceQueue$FinalizerLoader' interface='true' size='2'></ClassStats><ClassStats sourceFile='FinalizableReferenceQueue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableReferenceQueue$SystemLoader' interface='false' size='14'></ClassStats><ClassStats sourceFile='FinalizableSoftReference.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableSoftReference' interface='false' size='5'></ClassStats><ClassStats sourceFile='FinalizableWeakReference.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$FinalizableWeakReference' interface='false' size='5'></ClassStats><ClassStats sourceFile='Finalizer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Finalizer' interface='false' size='44'></ClassStats><ClassStats sourceFile='Finalizer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Finalizer$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='Finalizer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Finalizer$ShutDown' interface='false' size='4'></ClassStats><ClassStats sourceFile='Function.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Function' interface='true' size='3'></ClassStats><ClassStats sourceFile='Hashing.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Hashing' interface='false' size='13'></ClassStats><ClassStats sourceFile='ImmutableCollection.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableCollection' interface='false' size='69'></ClassStats><ClassStats sourceFile='ImmutableCollection.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableCollection$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='ImmutableCollection.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableCollection$ArrayImmutableCollection' interface='false' size='15'></ClassStats><ClassStats sourceFile='ImmutableCollection.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableCollection$ArrayImmutableCollection$1' interface='false' size='12'></ClassStats><ClassStats sourceFile='ImmutableCollection.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableCollection$EmptyImmutableCollection' interface='false' size='19'></ClassStats><ClassStats sourceFile='ImmutableCollection.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableCollection$SerializedForm' interface='false' size='9'></ClassStats><ClassStats sourceFile='ImmutableEntry.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableEntry' interface='false' size='13'></ClassStats><ClassStats sourceFile='ImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableList' interface='false' size='90'></ClassStats><ClassStats sourceFile='ImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableList$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='ImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableList$Builder' interface='false' size='19'></ClassStats><ClassStats sourceFile='ImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableList$EmptyImmutableList' interface='false' size='49'></ClassStats><ClassStats sourceFile='ImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableList$RegularImmutableList' interface='false' size='91'></ClassStats><ClassStats sourceFile='ImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableList$RegularImmutableList$1' interface='false' size='35'></ClassStats><ClassStats sourceFile='ImmutableList.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableList$SerializedForm' interface='false' size='9'></ClassStats><ClassStats sourceFile='ImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap' interface='false' size='82'></ClassStats><ClassStats sourceFile='ImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='ImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$Builder' interface='false' size='21'></ClassStats><ClassStats sourceFile='ImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$EmptyImmutableMap' interface='false' size='32'></ClassStats><ClassStats priority_2='5' sourceFile='ImmutableMap.java' bugs='5' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap' interface='false' size='77'></ClassStats><ClassStats sourceFile='ImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap$EntrySet' interface='false' size='12'></ClassStats><ClassStats sourceFile='ImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap$KeySet' interface='false' size='12'></ClassStats><ClassStats sourceFile='ImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap$Values' interface='false' size='17'></ClassStats><ClassStats sourceFile='ImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$RegularImmutableMap$Values$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='ImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SerializedForm' interface='false' size='19'></ClassStats><ClassStats priority_2='4' sourceFile='ImmutableMap.java' bugs='4' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap' interface='false' size='60'></ClassStats><ClassStats sourceFile='ImmutableMap.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableMap$SingletonImmutableMap$Values' interface='false' size='16'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableSet' interface='false' size='77'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableSet$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableSet$ArrayImmutableSet' interface='false' size='37'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableSet$Builder' interface='false' size='32'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableSet$EmptyImmutableSet' interface='false' size='35'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableSet$RegularImmutableSet' interface='false' size='23'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableSet$SerializedForm' interface='false' size='9'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableSet$SingletonImmutableSet' interface='false' size='41'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableSet$TransformedImmutableSet' interface='false' size='33'></ClassStats><ClassStats sourceFile='ImmutableSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ImmutableSet$TransformedImmutableSet$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterables' interface='false' size='19'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterables$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterables$2' interface='false' size='6'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterables$3' interface='false' size='7'></ClassStats><ClassStats sourceFile='Iterables.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterables$IterableWithToString' interface='false' size='5'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterators' interface='false' size='54'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterators$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterators$2' interface='false' size='21'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterators$3' interface='false' size='8'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterators$4' interface='false' size='21'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterators$5' interface='false' size='13'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterators$6' interface='false' size='16'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterators$7' interface='false' size='14'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterators$8' interface='false' size='12'></ClassStats><ClassStats sourceFile='Iterators.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Iterators$9' interface='false' size='8'></ClassStats><ClassStats sourceFile='Join.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Join' interface='false' size='59'></ClassStats><ClassStats sourceFile='Join.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Join$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='Join.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Join$JoinException' interface='false' size='7'></ClassStats><ClassStats sourceFile='Lists.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Lists' interface='false' size='29'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker' interface='false' size='65'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$ComputationExceptionReference' interface='false' size='12'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$LinkedSoftEntry' interface='false' size='8'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$LinkedStrongEntry' interface='false' size='8'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$LinkedWeakEntry' interface='false' size='8'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$NullOutputExceptionReference' interface='false' size='12'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$QueueHolder' interface='false' size='6'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$ReferenceEntry' interface='true' size='7'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$SoftEntry' interface='false' size='27'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$SoftValueReference' interface='false' size='13'></ClassStats><ClassStats priority_2='1' sourceFile='MapMaker.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$StrategyImpl' interface='false' size='115'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$StrategyImpl$1' interface='false' size='11'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$StrategyImpl$Fields' interface='false' size='20'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$StrategyImpl$FutureValueReference' interface='false' size='28'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$Strength' interface='false' size='19'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$Strength$1' interface='false' size='14'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$Strength$2' interface='false' size='14'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$Strength$3' interface='false' size='14'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$StrongEntry' interface='false' size='26'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$StrongValueReference' interface='false' size='12'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$ValueReference' interface='true' size='4'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$WeakEntry' interface='false' size='27'></ClassStats><ClassStats sourceFile='MapMaker.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$MapMaker$WeakValueReference' interface='false' size='13'></ClassStats><ClassStats sourceFile='Maps.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Maps' interface='false' size='13'></ClassStats><ClassStats sourceFile='NullOutputException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$NullOutputException' interface='false' size='4'></ClassStats><ClassStats sourceFile='Nullable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Nullable' interface='true' size='1'></ClassStats><ClassStats sourceFile='ObjectArrays.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ObjectArrays' interface='false' size='7'></ClassStats><ClassStats sourceFile='Objects.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Objects' interface='false' size='7'></ClassStats><ClassStats sourceFile='Preconditions.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Preconditions' interface='false' size='110'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Sets' interface='false' size='14'></ClassStats><ClassStats sourceFile='Sets.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Sets$SetFromMap' interface='false' size='45'></ClassStats><ClassStats sourceFile='SourceProvider.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$SourceProvider' interface='false' size='24'></ClassStats><ClassStats sourceFile='StackTraceElements.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$StackTraceElements' interface='false' size='16'></ClassStats><ClassStats sourceFile='Stopwatch.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Stopwatch' interface='false' size='15'></ClassStats><ClassStats sourceFile='Strings.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$Strings' interface='false' size='9'></ClassStats><ClassStats sourceFile='ToStringBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$ToStringBuilder' interface='false' size='14'></ClassStats><ClassStats sourceFile='UnmodifiableIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.internal.util.$$UnmodifiableIterator' interface='false' size='5'></ClassStats></PackageStats><PackageStats priority_2='6' total_size='247' package='com.lexicalscope.fluentreflection.internal.guice.matcher' total_bugs='6' total_types='16'><ClassStats sourceFile='AbstractMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher' interface='false' size='8'></ClassStats><ClassStats priority_2='2' sourceFile='AbstractMatcher.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$AndMatcher' interface='false' size='17'></ClassStats><ClassStats priority_2='2' sourceFile='AbstractMatcher.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$AbstractMatcher$OrMatcher' interface='false' size='17'></ClassStats><ClassStats sourceFile='Matcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matcher' interface='true' size='4'></ClassStats><ClassStats sourceFile='Matchers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers' interface='false' size='32'></ClassStats><ClassStats sourceFile='Matchers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='Matchers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$AnnotatedWith' interface='false' size='19'></ClassStats><ClassStats sourceFile='Matchers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$AnnotatedWithType' interface='false' size='18'></ClassStats><ClassStats sourceFile='Matchers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Any' interface='false' size='11'></ClassStats><ClassStats sourceFile='Matchers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$IdenticalTo' interface='false' size='15'></ClassStats><ClassStats sourceFile='Matchers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$InPackage' interface='false' size='21'></ClassStats><ClassStats sourceFile='Matchers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$InSubpackage' interface='false' size='18'></ClassStats><ClassStats priority_2='1' sourceFile='Matchers.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Not' interface='false' size='17'></ClassStats><ClassStats sourceFile='Matchers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Only' interface='false' size='15'></ClassStats><ClassStats priority_2='1' sourceFile='Matchers.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$Returns' interface='false' size='17'></ClassStats><ClassStats sourceFile='Matchers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.matcher.$Matchers$SubclassesOf' interface='false' size='17'></ClassStats></PackageStats><PackageStats total_size='43' package='com.lexicalscope.fluentreflection.internal.guice.name' total_bugs='0' total_types='3'><ClassStats sourceFile='Named.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.name.$Named' interface='true' size='2'></ClassStats><ClassStats sourceFile='NamedImpl.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.name.$NamedImpl' interface='false' size='20'></ClassStats><ClassStats sourceFile='Names.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.name.$Names' interface='false' size='21'></ClassStats></PackageStats><PackageStats priority_1='1' total_size='1015' package='com.lexicalscope.fluentreflection.internal.guice.spi' total_bugs='1' total_types='51'><ClassStats sourceFile='BindingScopingVisitor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$BindingScopingVisitor' interface='true' size='5'></ClassStats><ClassStats sourceFile='BindingTargetVisitor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$BindingTargetVisitor' interface='true' size='10'></ClassStats><ClassStats sourceFile='ConstructorBinding.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$ConstructorBinding' interface='true' size='3'></ClassStats><ClassStats sourceFile='ConvertedConstantBinding.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$ConvertedConstantBinding' interface='true' size='5'></ClassStats><ClassStats sourceFile='DefaultBindingScopingVisitor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$DefaultBindingScopingVisitor' interface='false' size='13'></ClassStats><ClassStats sourceFile='DefaultBindingTargetVisitor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$DefaultBindingTargetVisitor' interface='false' size='23'></ClassStats><ClassStats sourceFile='DefaultElementVisitor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$DefaultElementVisitor' interface='false' size='29'></ClassStats><ClassStats sourceFile='Dependency.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$Dependency' interface='false' size='42'></ClassStats><ClassStats sourceFile='DisableCircularProxiesOption.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$DisableCircularProxiesOption' interface='false' size='13'></ClassStats><ClassStats sourceFile='Element.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$Element' interface='true' size='4'></ClassStats><ClassStats sourceFile='ElementVisitor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$ElementVisitor' interface='true' size='13'></ClassStats><ClassStats sourceFile='Elements.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$Elements' interface='false' size='22'></ClassStats><ClassStats sourceFile='Elements.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$Elements$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='Elements.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$Elements$2' interface='false' size='8'></ClassStats><ClassStats sourceFile='Elements.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$Elements$RecordingBinder' interface='false' size='147'></ClassStats><ClassStats sourceFile='Elements.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$Elements$RecordingBinder$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='ExposedBinding.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$ExposedBinding' interface='true' size='3'></ClassStats><ClassStats sourceFile='HasDependencies.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$HasDependencies' interface='true' size='2'></ClassStats><ClassStats sourceFile='InjectionListener.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionListener' interface='true' size='2'></ClassStats><ClassStats priority_1='1' sourceFile='InjectionPoint.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint' interface='false' size='222'></ClassStats><ClassStats sourceFile='InjectionPoint.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint$InjectableField' interface='false' size='8'></ClassStats><ClassStats sourceFile='InjectionPoint.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint$InjectableMember' interface='false' size='17'></ClassStats><ClassStats sourceFile='InjectionPoint.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint$InjectableMembers' interface='false' size='24'></ClassStats><ClassStats sourceFile='InjectionPoint.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint$InjectableMethod' interface='false' size='11'></ClassStats><ClassStats sourceFile='InjectionPoint.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint$OverrideIndex' interface='false' size='54'></ClassStats><ClassStats sourceFile='InjectionPoint.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint$Position' interface='false' size='13'></ClassStats><ClassStats sourceFile='InjectionPoint.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionPoint$Signature' interface='false' size='28'></ClassStats><ClassStats sourceFile='InjectionRequest.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$InjectionRequest' interface='false' size='23'></ClassStats><ClassStats sourceFile='InstanceBinding.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$InstanceBinding' interface='true' size='3'></ClassStats><ClassStats sourceFile='LinkedKeyBinding.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$LinkedKeyBinding' interface='true' size='2'></ClassStats><ClassStats sourceFile='MembersInjectorLookup.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$MembersInjectorLookup' interface='false' size='29'></ClassStats><ClassStats sourceFile='MembersInjectorLookup.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$MembersInjectorLookup$1' interface='false' size='10'></ClassStats><ClassStats sourceFile='Message.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$Message' interface='false' size='46'></ClassStats><ClassStats sourceFile='PrivateElements.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$PrivateElements' interface='true' size='5'></ClassStats><ClassStats sourceFile='ProviderBinding.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$ProviderBinding' interface='true' size='2'></ClassStats><ClassStats sourceFile='ProviderInstanceBinding.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$ProviderInstanceBinding' interface='true' size='3'></ClassStats><ClassStats sourceFile='ProviderKeyBinding.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$ProviderKeyBinding' interface='true' size='2'></ClassStats><ClassStats sourceFile='ProviderLookup.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$ProviderLookup' interface='false' size='29'></ClassStats><ClassStats sourceFile='ProviderLookup.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$ProviderLookup$1' interface='false' size='9'></ClassStats><ClassStats sourceFile='ProviderWithDependencies.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$ProviderWithDependencies' interface='true' size='1'></ClassStats><ClassStats sourceFile='ProviderWithExtensionVisitor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$ProviderWithExtensionVisitor' interface='true' size='2'></ClassStats><ClassStats sourceFile='RequireExplicitBindingsOption.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$RequireExplicitBindingsOption' interface='false' size='13'></ClassStats><ClassStats sourceFile='ScopeBinding.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$ScopeBinding' interface='false' size='21'></ClassStats><ClassStats sourceFile='StaticInjectionRequest.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$StaticInjectionRequest' interface='false' size='19'></ClassStats><ClassStats sourceFile='Toolable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$Toolable' interface='true' size='1'></ClassStats><ClassStats sourceFile='TypeConverter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$TypeConverter' interface='true' size='2'></ClassStats><ClassStats sourceFile='TypeConverterBinding.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$TypeConverterBinding' interface='false' size='23'></ClassStats><ClassStats sourceFile='TypeEncounter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$TypeEncounter' interface='true' size='10'></ClassStats><ClassStats sourceFile='TypeListener.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$TypeListener' interface='true' size='2'></ClassStats><ClassStats sourceFile='TypeListenerBinding.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$TypeListenerBinding' interface='false' size='21'></ClassStats><ClassStats sourceFile='UntargettedBinding.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.spi.$UntargettedBinding' interface='true' size='1'></ClassStats></PackageStats><PackageStats priority_2='1' total_size='279' package='com.lexicalscope.fluentreflection.internal.guice.util' total_bugs='1' total_types='17'><ClassStats sourceFile='Modules.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Modules' interface='false' size='15'></ClassStats><ClassStats sourceFile='Modules.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Modules$1' interface='false' size='5'></ClassStats><ClassStats sourceFile='Modules.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Modules$2' interface='false' size='9'></ClassStats><ClassStats sourceFile='Modules.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Modules$ModuleWriter' interface='false' size='15'></ClassStats><ClassStats sourceFile='Modules.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Modules$OverriddenModuleBuilder' interface='true' size='3'></ClassStats><ClassStats sourceFile='Modules.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Modules$RealOverriddenModuleBuilder' interface='false' size='13'></ClassStats><ClassStats sourceFile='Modules.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Modules$RealOverriddenModuleBuilder$1' interface='false' size='31'></ClassStats><ClassStats sourceFile='Modules.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Modules$RealOverriddenModuleBuilder$1$1' interface='false' size='18'></ClassStats><ClassStats sourceFile='Modules.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Modules$RealOverriddenModuleBuilder$1$2' interface='false' size='38'></ClassStats><ClassStats sourceFile='Modules.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Modules$RealOverriddenModuleBuilder$1$3' interface='false' size='14'></ClassStats><ClassStats sourceFile='Modules.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Modules$RealOverriddenModuleBuilder$1$4' interface='false' size='7'></ClassStats><ClassStats sourceFile='Node.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Node' interface='false' size='43'></ClassStats><ClassStats sourceFile='Providers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Providers' interface='false' size='17'></ClassStats><ClassStats sourceFile='Providers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Providers$1' interface='false' size='8'></ClassStats><ClassStats sourceFile='Providers.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Providers$2' interface='false' size='8'></ClassStats><ClassStats priority_2='1' sourceFile='Providers.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.guice.util.$Providers$3' interface='false' size='14'></ClassStats><ClassStats sourceFile='Types.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.guice.util.$Types' interface='false' size='21'></ClassStats></PackageStats><PackageStats total_size='234' package='com.lexicalscope.fluentreflection.internal.lamdaj' total_bugs='0' total_types='1'><ClassStats sourceFile='Lambda.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.$Lambda' interface='false' size='234'></ClassStats></PackageStats><PackageStats priority_2='3' priority_1='2' total_size='489' package='com.lexicalscope.fluentreflection.internal.lamdaj.collection' total_bugs='5' total_types='9'><ClassStats sourceFile='AbstractLambdaCollection.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$AbstractLambdaCollection' interface='false' size='67'></ClassStats><ClassStats priority_1='1' sourceFile='LambdaCollection.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaCollection' interface='false' size='73'></ClassStats><ClassStats sourceFile='LambdaCollections.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaCollections' interface='false' size='17'></ClassStats><ClassStats sourceFile='LambdaGroup.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaGroup' interface='false' size='39'></ClassStats><ClassStats priority_1='1' sourceFile='LambdaIterable.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaIterable' interface='false' size='94'></ClassStats><ClassStats sourceFile='LambdaIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaIterator' interface='false' size='36'></ClassStats><ClassStats priority_2='1' sourceFile='LambdaList.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaList' interface='false' size='73'></ClassStats><ClassStats priority_2='1' sourceFile='LambdaMap.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaMap' interface='false' size='68'></ClassStats><ClassStats priority_2='1' sourceFile='LambdaSet.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lamdaj.collection.$LambdaSet' interface='false' size='22'></ClassStats></PackageStats><PackageStats total_size='157' package='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate' total_bugs='0' total_types='15'><ClassStats sourceFile='Aggregator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$Aggregator' interface='true' size='2'></ClassStats><ClassStats sourceFile='Chooser.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$Chooser' interface='false' size='10'></ClassStats><ClassStats sourceFile='ChooserOnArgument.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$ChooserOnArgument' interface='false' size='13'></ClassStats><ClassStats sourceFile='Concat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$Concat' interface='false' size='27'></ClassStats><ClassStats sourceFile='InitializedPairAggregator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$InitializedPairAggregator' interface='false' size='8'></ClassStats><ClassStats sourceFile='Max.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$Max' interface='false' size='6'></ClassStats><ClassStats sourceFile='MaxOnArgument.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$MaxOnArgument' interface='false' size='6'></ClassStats><ClassStats sourceFile='Min.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$Min' interface='false' size='6'></ClassStats><ClassStats sourceFile='MinOnArgument.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$MinOnArgument' interface='false' size='6'></ClassStats><ClassStats sourceFile='PairAggregator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$PairAggregator' interface='false' size='9'></ClassStats><ClassStats sourceFile='ProxyAggregator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$ProxyAggregator' interface='false' size='10'></ClassStats><ClassStats sourceFile='Sum.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$Sum' interface='false' size='30'></ClassStats><ClassStats sourceFile='SumDouble.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$SumDouble' interface='false' size='8'></ClassStats><ClassStats sourceFile='SumInteger.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$SumInteger' interface='false' size='8'></ClassStats><ClassStats sourceFile='SumLong.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.aggregate.$SumLong' interface='false' size='8'></ClassStats></PackageStats><PackageStats priority_2='1' total_size='267' package='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument' total_bugs='1' total_types='11'><ClassStats sourceFile='Argument.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$Argument' interface='false' size='22'></ClassStats><ClassStats sourceFile='ArgumentConversionException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$ArgumentConversionException' interface='false' size='7'></ClassStats><ClassStats sourceFile='ArgumentsFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$ArgumentsFactory' interface='false' size='78'></ClassStats><ClassStats sourceFile='ArgumentsFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$ArgumentsFactory$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='ArgumentsFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$ArgumentsFactory$LimitedValuesArgumentHolder' interface='false' size='28'></ClassStats><ClassStats sourceFile='Invocation.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$Invocation' interface='false' size='52'></ClassStats><ClassStats sourceFile='Invocation.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$Invocation$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='Invocation.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$Invocation$ParameterReference' interface='false' size='15'></ClassStats><ClassStats sourceFile='InvocationException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$InvocationException' interface='false' size='5'></ClassStats><ClassStats sourceFile='InvocationSequence.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$InvocationSequence' interface='false' size='41'></ClassStats><ClassStats priority_2='1' sourceFile='ProxyArgument.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.argument.$ProxyArgument' interface='false' size='12'></ClassStats></PackageStats><PackageStats total_size='464' package='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure' total_bugs='0' total_types='23'><ClassStats sourceFile='AbstractClosure.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$AbstractClosure' interface='false' size='154'></ClassStats><ClassStats sourceFile='AbstractClosure.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$AbstractClosure$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='Closure.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$Closure' interface='false' size='19'></ClassStats><ClassStats sourceFile='Closure0.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$Closure0' interface='false' size='13'></ClassStats><ClassStats sourceFile='Closure1.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$Closure1' interface='false' size='19'></ClassStats><ClassStats sourceFile='Closure2.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$Closure2' interface='false' size='19'></ClassStats><ClassStats sourceFile='Closure3.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$Closure3' interface='false' size='21'></ClassStats><ClassStats sourceFile='Closure4.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$Closure4' interface='false' size='23'></ClassStats><ClassStats sourceFile='ClosureResult.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$ClosureResult' interface='true' size='2'></ClassStats><ClassStats sourceFile='ClosuresFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$ClosuresFactory' interface='false' size='34'></ClassStats><ClassStats sourceFile='DelayedClosure.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$DelayedClosure' interface='false' size='26'></ClassStats><ClassStats sourceFile='DelayedClosure.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$DelayedClosure$1' interface='false' size='5'></ClassStats><ClassStats sourceFile='Invokable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$Invokable' interface='true' size='3'></ClassStats><ClassStats sourceFile='InvokableConstructor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$InvokableConstructor' interface='false' size='12'></ClassStats><ClassStats sourceFile='InvokableMethod.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$InvokableMethod' interface='false' size='12'></ClassStats><ClassStats sourceFile='ProxyClosure.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$ProxyClosure' interface='false' size='18'></ClassStats><ClassStats sourceFile='Switcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$Switcher' interface='false' size='31'></ClassStats><ClassStats sourceFile='Switcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$Switcher$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='Switcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$Switcher$Case' interface='false' size='16'></ClassStats><ClassStats sourceFile='Switcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$Switcher$ClosureResult' interface='false' size='10'></ClassStats><ClassStats sourceFile='Switcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$Switcher$FixedResult' interface='false' size='10'></ClassStats><ClassStats sourceFile='Switcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$Switcher$Result' interface='true' size='2'></ClassStats><ClassStats sourceFile='WrongClosureInvocationException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.closure.$WrongClosureInvocationException' interface='false' size='8'></ClassStats></PackageStats><PackageStats priority_1='1' total_size='43' package='com.lexicalscope.fluentreflection.internal.lamdaj.function.compare' total_bugs='1' total_types='4'><ClassStats priority_1='1' sourceFile='ArgumentComparator.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.compare.$ArgumentComparator' interface='false' size='19'></ClassStats><ClassStats sourceFile='ComparatorUtil.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.compare.$ComparatorUtil' interface='false' size='11'></ClassStats><ClassStats sourceFile='ComparatorUtil.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.compare.$ComparatorUtil$DefaultArgumentComparator' interface='false' size='5'></ClassStats><ClassStats sourceFile='PropertyComparator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.compare.$PropertyComparator' interface='false' size='8'></ClassStats></PackageStats><PackageStats total_size='129' package='com.lexicalscope.fluentreflection.internal.lamdaj.function.convert' total_bugs='0' total_types='12'><ClassStats sourceFile='AliasedArgumentConverter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.convert.$AliasedArgumentConverter' interface='false' size='19'></ClassStats><ClassStats sourceFile='AliasedArgumentConverter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.convert.$AliasedArgumentConverter$1' interface='false' size='12'></ClassStats><ClassStats sourceFile='ArgumentConverter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.convert.$ArgumentConverter' interface='false' size='11'></ClassStats><ClassStats sourceFile='ConstructorArgumentConverter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.convert.$ConstructorArgumentConverter' interface='false' size='28'></ClassStats><ClassStats sourceFile='Converter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.convert.$Converter' interface='true' size='2'></ClassStats><ClassStats sourceFile='ConverterIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.convert.$ConverterIterator' interface='false' size='15'></ClassStats><ClassStats sourceFile='DefaultStringConverter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.convert.$DefaultStringConverter' interface='false' size='6'></ClassStats><ClassStats sourceFile='ProjectConverter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.convert.$ProjectConverter' interface='false' size='14'></ClassStats><ClassStats sourceFile='PropertyExtractor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.convert.$PropertyExtractor' interface='false' size='8'></ClassStats><ClassStats sourceFile='StringConverter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.convert.$StringConverter' interface='true' size='1'></ClassStats><ClassStats sourceFile='StringLengthConverter.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.convert.$StringLengthConverter' interface='false' size='4'></ClassStats><ClassStats sourceFile='StringPropertyExtractor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.convert.$StringPropertyExtractor' interface='false' size='9'></ClassStats></PackageStats><PackageStats total_size='88' package='com.lexicalscope.fluentreflection.internal.lamdaj.function.matcher' total_bugs='0' total_types='7'><ClassStats sourceFile='AndMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.matcher.$AndMatcher' interface='false' size='11'></ClassStats><ClassStats sourceFile='HasArgumentWithValue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.matcher.$HasArgumentWithValue' interface='false' size='27'></ClassStats><ClassStats sourceFile='HasArgumentWithValue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.matcher.$HasArgumentWithValue$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='HasArgumentWithValue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.matcher.$HasArgumentWithValue$BooleanMatcher' interface='false' size='8'></ClassStats><ClassStats sourceFile='HasNestedPropertyWithValue.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.matcher.$HasNestedPropertyWithValue' interface='false' size='21'></ClassStats><ClassStats sourceFile='LambdaJMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.matcher.$LambdaJMatcher' interface='false' size='9'></ClassStats><ClassStats sourceFile='OrMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.function.matcher.$OrMatcher' interface='false' size='11'></ClassStats></PackageStats><PackageStats priority_2='1' priority_1='1' total_size='282' package='com.lexicalscope.fluentreflection.internal.lamdaj.group' total_bugs='2' total_types='10'><ClassStats sourceFile='ArgumentGroupCondition.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.group.$ArgumentGroupCondition' interface='false' size='25'></ClassStats><ClassStats sourceFile='Group.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.group.$Group' interface='true' size='14'></ClassStats><ClassStats priority_1='1' sourceFile='GroupComparator.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupComparator' interface='false' size='13'></ClassStats><ClassStats sourceFile='GroupCondition.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupCondition' interface='false' size='31'></ClassStats><ClassStats sourceFile='GroupConditions.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupConditions' interface='false' size='16'></ClassStats><ClassStats priority_2='1' sourceFile='GroupImpl.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupImpl' interface='false' size='58'></ClassStats><ClassStats sourceFile='GroupItem.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.group.$GroupItem' interface='false' size='45'></ClassStats><ClassStats sourceFile='Groups.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.group.$Groups' interface='false' size='22'></ClassStats><ClassStats sourceFile='LeafGroup.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.group.$LeafGroup' interface='false' size='37'></ClassStats><ClassStats sourceFile='StringGroupCondition.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.group.$StringGroupCondition' interface='false' size='21'></ClassStats></PackageStats><PackageStats total_size='141' package='com.lexicalscope.fluentreflection.internal.lamdaj.proxy' total_bugs='0' total_types='12'><ClassStats sourceFile='ClassImposterizer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.proxy.$ClassImposterizer' interface='false' size='36'></ClassStats><ClassStats sourceFile='ClassImposterizer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.proxy.$ClassImposterizer$1' interface='false' size='5'></ClassStats><ClassStats sourceFile='ClassImposterizer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.proxy.$ClassImposterizer$2' interface='false' size='7'></ClassStats><ClassStats sourceFile='ClassImposterizer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.proxy.$ClassImposterizer$3' interface='false' size='5'></ClassStats><ClassStats sourceFile='ClassImposterizer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.proxy.$ClassImposterizer$ClassEnhancer' interface='false' size='6'></ClassStats><ClassStats sourceFile='ClassImposterizer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.proxy.$ClassImposterizer$ClassWithSuperclassToWorkAroundCglibBug' interface='false' size='3'></ClassStats><ClassStats sourceFile='InvocationInterceptor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.proxy.$InvocationInterceptor' interface='false' size='9'></ClassStats><ClassStats sourceFile='InvocationInterceptor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.proxy.$InvocationInterceptor$1' interface='false' size='7'></ClassStats><ClassStats sourceFile='InvocationInterceptor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.proxy.$InvocationInterceptor$VoidInterceptor' interface='true' size='1'></ClassStats><ClassStats sourceFile='ProxyIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.proxy.$ProxyIterator' interface='false' size='24'></ClassStats><ClassStats sourceFile='ProxyUtil.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.proxy.$ProxyUtil' interface='false' size='33'></ClassStats><ClassStats sourceFile='UnproxableClassException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.proxy.$UnproxableClassException' interface='false' size='5'></ClassStats></PackageStats><PackageStats priority_2='2' total_size='79' package='com.lexicalscope.fluentreflection.internal.lamdaj.util' total_bugs='2' total_types='3'><ClassStats sourceFile='IntrospectionException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionException' interface='false' size='10'></ClassStats><ClassStats priority_2='2' sourceFile='IntrospectionUtil.java' bugs='2' class='com.lexicalscope.fluentreflection.internal.lamdaj.util.$IntrospectionUtil' interface='false' size='66'></ClassStats><ClassStats sourceFile='NotUniqueItemException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.util.$NotUniqueItemException' interface='false' size='3'></ClassStats></PackageStats><PackageStats priority_2='1' total_size='127' package='com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator' total_bugs='1' total_types='6'><ClassStats sourceFile='IteratorFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$IteratorFactory' interface='false' size='35'></ClassStats><ClassStats sourceFile='MatchingIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$MatchingIterator' interface='false' size='29'></ClassStats><ClassStats sourceFile='ResettableIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIterator' interface='false' size='6'></ClassStats><ClassStats priority_2='1' sourceFile='ResettableIteratorOnArray.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIteratorOnArray' interface='false' size='16'></ClassStats><ClassStats sourceFile='ResettableIteratorOnIterable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIteratorOnIterable' interface='false' size='15'></ClassStats><ClassStats sourceFile='ResettableIteratorOnIterator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lamdaj.util.iterator.$ResettableIteratorOnIterator' interface='false' size='26'></ClassStats></PackageStats><PackageStats priority_2='7' priority_1='3' total_size='5143' package='com.lexicalscope.fluentreflection.internal.lang3' total_bugs='10' total_types='32'><ClassStats sourceFile='AnnotationUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$AnnotationUtils' interface='false' size='124'></ClassStats><ClassStats sourceFile='AnnotationUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$AnnotationUtils$1' interface='false' size='28'></ClassStats><ClassStats sourceFile='ArrayUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$ArrayUtils' interface='false' size='1477'></ClassStats><ClassStats sourceFile='BitField.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$BitField' interface='false' size='48'></ClassStats><ClassStats priority_2='7' priority_1='1' sourceFile='BooleanUtils.java' bugs='8' class='com.lexicalscope.fluentreflection.internal.lang3.$BooleanUtils' interface='false' size='231'></ClassStats><ClassStats sourceFile='CharEncoding.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$CharEncoding' interface='false' size='15'></ClassStats><ClassStats sourceFile='CharRange.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$CharRange' interface='false' size='68'></ClassStats><ClassStats sourceFile='CharRange.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$CharRange$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='CharRange.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$CharRange$CharacterIterator' interface='false' size='42'></ClassStats><ClassStats sourceFile='CharSequenceUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$CharSequenceUtils' interface='false' size='44'></ClassStats><ClassStats sourceFile='CharSet.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$CharSet' interface='false' size='77'></ClassStats><ClassStats sourceFile='CharSetUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$CharSetUtils' interface='false' size='54'></ClassStats><ClassStats sourceFile='CharUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$CharUtils' interface='false' size='87'></ClassStats><ClassStats sourceFile='ClassUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$ClassUtils' interface='false' size='324'></ClassStats><ClassStats priority_1='1' sourceFile='EnumUtils.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lang3.$EnumUtils' interface='false' size='47'></ClassStats><ClassStats sourceFile='JavaVersion.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$JavaVersion' interface='false' size='57'></ClassStats><ClassStats sourceFile='LocaleUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$LocaleUtils' interface='false' size='83'></ClassStats><ClassStats sourceFile='LocaleUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$LocaleUtils$SyncAvoid' interface='false' size='12'></ClassStats><ClassStats sourceFile='ObjectUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$ObjectUtils' interface='false' size='131'></ClassStats><ClassStats sourceFile='ObjectUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$ObjectUtils$Null' interface='false' size='7'></ClassStats><ClassStats sourceFile='RandomStringUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$RandomStringUtils' interface='false' size='67'></ClassStats><ClassStats sourceFile='Range.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$Range' interface='false' size='118'></ClassStats><ClassStats sourceFile='Range.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$Range$ComparableComparator' interface='false' size='11'></ClassStats><ClassStats sourceFile='SerializationException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$SerializationException' interface='false' size='14'></ClassStats><ClassStats sourceFile='SerializationUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$SerializationUtils' interface='false' size='61'></ClassStats><ClassStats sourceFile='SerializationUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$SerializationUtils$ClassLoaderAwareObjectInputStream' interface='false' size='11'></ClassStats><ClassStats sourceFile='StringEscapeUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$StringEscapeUtils' interface='false' size='53'></ClassStats><ClassStats sourceFile='StringEscapeUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$StringEscapeUtils$CsvEscaper' interface='false' size='19'></ClassStats><ClassStats sourceFile='StringEscapeUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$StringEscapeUtils$CsvUnescaper' interface='false' size='21'></ClassStats><ClassStats sourceFile='StringUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$StringUtils' interface='false' size='1456'></ClassStats><ClassStats priority_1='1' sourceFile='SystemUtils.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lang3.$SystemUtils' interface='false' size='183'></ClassStats><ClassStats sourceFile='Validate.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.$Validate' interface='false' size='172'></ClassStats></PackageStats><PackageStats total_size='1891' package='com.lexicalscope.fluentreflection.internal.lang3.builder' total_bugs='0' total_types='14'><ClassStats sourceFile='Builder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.builder.$Builder' interface='true' size='2'></ClassStats><ClassStats sourceFile='CompareToBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.builder.$CompareToBuilder' interface='false' size='287'></ClassStats><ClassStats sourceFile='EqualsBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.builder.$EqualsBuilder' interface='false' size='299'></ClassStats><ClassStats sourceFile='HashCodeBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.builder.$HashCodeBuilder' interface='false' size='194'></ClassStats><ClassStats sourceFile='IDKey.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.builder.$IDKey' interface='false' size='17'></ClassStats><ClassStats sourceFile='ReflectionToStringBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.builder.$ReflectionToStringBuilder' interface='false' size='113'></ClassStats><ClassStats sourceFile='StandardToStringStyle.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.builder.$StandardToStringStyle' interface='false' size='105'></ClassStats><ClassStats sourceFile='ToStringBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.builder.$ToStringBuilder' interface='false' size='203'></ClassStats><ClassStats sourceFile='ToStringStyle.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.builder.$ToStringStyle' interface='false' size='624'></ClassStats><ClassStats sourceFile='ToStringStyle.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.builder.$ToStringStyle$DefaultToStringStyle' interface='false' size='7'></ClassStats><ClassStats sourceFile='ToStringStyle.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.builder.$ToStringStyle$MultiLineToStringStyle' interface='false' size='11'></ClassStats><ClassStats sourceFile='ToStringStyle.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.builder.$ToStringStyle$NoFieldNameToStringStyle' interface='false' size='8'></ClassStats><ClassStats sourceFile='ToStringStyle.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.builder.$ToStringStyle$ShortPrefixToStringStyle' interface='false' size='9'></ClassStats><ClassStats sourceFile='ToStringStyle.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.builder.$ToStringStyle$SimpleToStringStyle' interface='false' size='12'></ClassStats></PackageStats><PackageStats total_size='500' package='com.lexicalscope.fluentreflection.internal.lang3.concurrent' total_bugs='0' total_types='20'><ClassStats sourceFile='AtomicInitializer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$AtomicInitializer' interface='false' size='13'></ClassStats><ClassStats sourceFile='AtomicSafeInitializer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$AtomicSafeInitializer' interface='false' size='13'></ClassStats><ClassStats sourceFile='BackgroundInitializer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$BackgroundInitializer' interface='false' size='50'></ClassStats><ClassStats sourceFile='BackgroundInitializer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$BackgroundInitializer$InitializationTask' interface='false' size='11'></ClassStats><ClassStats sourceFile='BasicThreadFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$BasicThreadFactory' interface='false' size='47'></ClassStats><ClassStats sourceFile='BasicThreadFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$BasicThreadFactory$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='BasicThreadFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$BasicThreadFactory$Builder' interface='false' size='46'></ClassStats><ClassStats sourceFile='CallableBackgroundInitializer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$CallableBackgroundInitializer' interface='false' size='18'></ClassStats><ClassStats sourceFile='ConcurrentException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$ConcurrentException' interface='false' size='11'></ClassStats><ClassStats sourceFile='ConcurrentInitializer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$ConcurrentInitializer' interface='true' size='2'></ClassStats><ClassStats sourceFile='ConcurrentRuntimeException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$ConcurrentRuntimeException' interface='false' size='11'></ClassStats><ClassStats sourceFile='ConcurrentUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$ConcurrentUtils' interface='false' size='58'></ClassStats><ClassStats sourceFile='ConcurrentUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$ConcurrentUtils$ConstantFuture' interface='false' size='16'></ClassStats><ClassStats sourceFile='ConstantInitializer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$ConstantInitializer' interface='false' size='22'></ClassStats><ClassStats sourceFile='LazyInitializer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$LazyInitializer' interface='false' size='14'></ClassStats><ClassStats sourceFile='MultiBackgroundInitializer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$MultiBackgroundInitializer' interface='false' size='44'></ClassStats><ClassStats sourceFile='MultiBackgroundInitializer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$MultiBackgroundInitializer$1' interface='false' size='1'></ClassStats><ClassStats sourceFile='MultiBackgroundInitializer.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$MultiBackgroundInitializer$MultiBackgroundInitializerResults' interface='false' size='32'></ClassStats><ClassStats sourceFile='TimedSemaphore.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$TimedSemaphore' interface='false' size='83'></ClassStats><ClassStats sourceFile='TimedSemaphore.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.concurrent.$TimedSemaphore$1' interface='false' size='7'></ClassStats></PackageStats><PackageStats total_size='109' package='com.lexicalscope.fluentreflection.internal.lang3.event' total_bugs='0' total_types='4'><ClassStats sourceFile='EventListenerSupport.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.event.$EventListenerSupport' interface='false' size='64'></ClassStats><ClassStats sourceFile='EventListenerSupport.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.event.$EventListenerSupport$ProxyInvocationHandler' interface='false' size='9'></ClassStats><ClassStats sourceFile='EventUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.event.$EventUtils' interface='false' size='18'></ClassStats><ClassStats sourceFile='EventUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.event.$EventUtils$EventBindingInvocationHandler' interface='false' size='18'></ClassStats></PackageStats><PackageStats total_size='351' package='com.lexicalscope.fluentreflection.internal.lang3.exception' total_bugs='0' total_types='6'><ClassStats sourceFile='CloneFailedException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.exception.$CloneFailedException' interface='false' size='11'></ClassStats><ClassStats sourceFile='ContextedException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.exception.$ContextedException' interface='false' size='48'></ClassStats><ClassStats sourceFile='ContextedRuntimeException.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.exception.$ContextedRuntimeException' interface='false' size='48'></ClassStats><ClassStats sourceFile='DefaultExceptionContext.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.exception.$DefaultExceptionContext' interface='false' size='64'></ClassStats><ClassStats sourceFile='ExceptionContext.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.exception.$ExceptionContext' interface='true' size='8'></ClassStats><ClassStats sourceFile='ExceptionUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.exception.$ExceptionUtils' interface='false' size='172'></ClassStats></PackageStats><PackageStats priority_2='1' total_size='832' package='com.lexicalscope.fluentreflection.internal.lang3.math' total_bugs='1' total_types='3'><ClassStats sourceFile='Fraction.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.math.$Fraction' interface='false' size='320'></ClassStats><ClassStats sourceFile='IEEE754rUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.math.$IEEE754rUtils' interface='false' size='71'></ClassStats><ClassStats priority_2='1' sourceFile='NumberUtils.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lang3.math.$NumberUtils' interface='false' size='441'></ClassStats></PackageStats><PackageStats total_size='499' package='com.lexicalscope.fluentreflection.internal.lang3.mutable' total_bugs='0' total_types='9'><ClassStats sourceFile='Mutable.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.mutable.$Mutable' interface='true' size='3'></ClassStats><ClassStats sourceFile='MutableBoolean.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.mutable.$MutableBoolean' interface='false' size='45'></ClassStats><ClassStats sourceFile='MutableByte.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.mutable.$MutableByte' interface='false' size='71'></ClassStats><ClassStats sourceFile='MutableDouble.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.mutable.$MutableDouble' interface='false' size='72'></ClassStats><ClassStats sourceFile='MutableFloat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.mutable.$MutableFloat' interface='false' size='71'></ClassStats><ClassStats sourceFile='MutableInt.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.mutable.$MutableInt' interface='false' size='69'></ClassStats><ClassStats sourceFile='MutableLong.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.mutable.$MutableLong' interface='false' size='69'></ClassStats><ClassStats sourceFile='MutableObject.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.mutable.$MutableObject' interface='false' size='28'></ClassStats><ClassStats sourceFile='MutableShort.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.mutable.$MutableShort' interface='false' size='71'></ClassStats></PackageStats><PackageStats total_size='708' package='com.lexicalscope.fluentreflection.internal.lang3.reflect' total_bugs='0' total_types='5'><ClassStats sourceFile='ConstructorUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.reflect.$ConstructorUtils' interface='false' size='59'></ClassStats><ClassStats sourceFile='FieldUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.reflect.$FieldUtils' interface='false' size='159'></ClassStats><ClassStats sourceFile='MemberUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.reflect.$MemberUtils' interface='false' size='56'></ClassStats><ClassStats sourceFile='MethodUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.reflect.$MethodUtils' interface='false' size='128'></ClassStats><ClassStats sourceFile='TypeUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.reflect.$TypeUtils' interface='false' size='306'></ClassStats></PackageStats><PackageStats priority_2='1' priority_1='1' total_size='2002' package='com.lexicalscope.fluentreflection.internal.lang3.text' total_bugs='2' total_types='19'><ClassStats sourceFile='CompositeFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$CompositeFormat' interface='false' size='19'></ClassStats><ClassStats priority_2='1' sourceFile='ExtendedMessageFormat.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lang3.text.$ExtendedMessageFormat' interface='false' size='213'></ClassStats><ClassStats sourceFile='FormatFactory.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$FormatFactory' interface='true' size='2'></ClassStats><ClassStats sourceFile='FormattableUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$FormattableUtils' interface='false' size='24'></ClassStats><ClassStats sourceFile='StrBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$StrBuilder' interface='false' size='812'></ClassStats><ClassStats sourceFile='StrBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$StrBuilder$StrBuilderReader' interface='false' size='43'></ClassStats><ClassStats sourceFile='StrBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$StrBuilder$StrBuilderTokenizer' interface='false' size='15'></ClassStats><ClassStats sourceFile='StrBuilder.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$StrBuilder$StrBuilderWriter' interface='false' size='25'></ClassStats><ClassStats sourceFile='StrLookup.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$StrLookup' interface='false' size='24'></ClassStats><ClassStats sourceFile='StrLookup.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$StrLookup$MapStrLookup' interface='false' size='13'></ClassStats><ClassStats sourceFile='StrMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$StrMatcher' interface='false' size='62'></ClassStats><ClassStats sourceFile='StrMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$StrMatcher$CharMatcher' interface='false' size='8'></ClassStats><ClassStats sourceFile='StrMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$StrMatcher$CharSetMatcher' interface='false' size='9'></ClassStats><ClassStats sourceFile='StrMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$StrMatcher$NoMatcher' interface='false' size='6'></ClassStats><ClassStats sourceFile='StrMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$StrMatcher$StringMatcher' interface='false' size='14'></ClassStats><ClassStats sourceFile='StrMatcher.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$StrMatcher$TrimMatcher' interface='false' size='6'></ClassStats><ClassStats sourceFile='StrSubstitutor.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$StrSubstitutor' interface='false' size='255'></ClassStats><ClassStats priority_1='1' sourceFile='StrTokenizer.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lang3.text.$StrTokenizer' interface='false' size='327'></ClassStats><ClassStats sourceFile='WordUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.$WordUtils' interface='false' size='125'></ClassStats></PackageStats><PackageStats total_size='300' package='com.lexicalscope.fluentreflection.internal.lang3.text.translate' total_bugs='0' total_types='11'><ClassStats sourceFile='AggregateTranslator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.translate.$AggregateTranslator' interface='false' size='12'></ClassStats><ClassStats sourceFile='CharSequenceTranslator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.translate.$CharSequenceTranslator' interface='false' size='37'></ClassStats><ClassStats sourceFile='CodePointTranslator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.translate.$CodePointTranslator' interface='false' size='10'></ClassStats><ClassStats sourceFile='EntityArrays.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.translate.$EntityArrays' interface='false' size='50'></ClassStats><ClassStats sourceFile='LookupTranslator.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.translate.$LookupTranslator' interface='false' size='31'></ClassStats><ClassStats sourceFile='NumericEntityEscaper.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.translate.$NumericEntityEscaper' interface='false' size='31'></ClassStats><ClassStats sourceFile='NumericEntityUnescaper.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.translate.$NumericEntityUnescaper' interface='false' size='44'></ClassStats><ClassStats sourceFile='NumericEntityUnescaper.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.translate.$NumericEntityUnescaper$OPTION' interface='false' size='10'></ClassStats><ClassStats sourceFile='OctalUnescaper.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.translate.$OctalUnescaper' interface='false' size='18'></ClassStats><ClassStats sourceFile='UnicodeEscaper.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.translate.$UnicodeEscaper' interface='false' size='37'></ClassStats><ClassStats sourceFile='UnicodeUnescaper.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.text.translate.$UnicodeUnescaper' interface='false' size='20'></ClassStats></PackageStats><PackageStats priority_2='1' total_size='1380' package='com.lexicalscope.fluentreflection.internal.lang3.time' total_bugs='1' total_types='26'><ClassStats sourceFile='DateFormatUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$DateFormatUtils' interface='false' size='59'></ClassStats><ClassStats priority_2='1' sourceFile='DateUtils.java' bugs='1' class='com.lexicalscope.fluentreflection.internal.lang3.time.$DateUtils' interface='false' size='371'></ClassStats><ClassStats sourceFile='DateUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$DateUtils$DateIterator' interface='false' size='20'></ClassStats><ClassStats sourceFile='DurationFormatUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$DurationFormatUtils' interface='false' size='230'></ClassStats><ClassStats sourceFile='DurationFormatUtils.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$DurationFormatUtils$Token' interface='false' size='43'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat' interface='false' size='238'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$1' interface='false' size='6'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$CharacterLiteral' interface='false' size='11'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$NumberRule' interface='true' size='2'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$PaddedNumberField' interface='false' size='29'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$Rule' interface='true' size='3'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$StringLiteral' interface='false' size='11'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$TextField' interface='false' size='19'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$TimeZoneDisplayKey' interface='false' size='21'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$TimeZoneNameRule' interface='false' size='17'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$TimeZoneNumberRule' interface='false' size='28'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$TwelveHourField' interface='false' size='17'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$TwentyFourHourField' interface='false' size='17'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$TwoDigitMonthField' interface='false' size='16'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$TwoDigitNumberField' interface='false' size='17'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$TwoDigitYearField' interface='false' size='16'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$UnpaddedMonthField' interface='false' size='18'></ClassStats><ClassStats sourceFile='FastDateFormat.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FastDateFormat$UnpaddedNumberField' interface='false' size='19'></ClassStats><ClassStats sourceFile='FormatCache.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FormatCache' interface='false' size='46'></ClassStats><ClassStats sourceFile='FormatCache.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$FormatCache$MultipartKey' interface='false' size='21'></ClassStats><ClassStats sourceFile='StopWatch.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.time.$StopWatch' interface='false' size='85'></ClassStats></PackageStats><PackageStats total_size='73' package='com.lexicalscope.fluentreflection.internal.lang3.tuple' total_bugs='0' total_types='3'><ClassStats sourceFile='ImmutablePair.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.tuple.$ImmutablePair' interface='false' size='17'></ClassStats><ClassStats sourceFile='MutablePair.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.tuple.$MutablePair' interface='false' size='28'></ClassStats><ClassStats sourceFile='Pair.java' bugs='0' class='com.lexicalscope.fluentreflection.internal.lang3.tuple.$Pair' interface='false' size='28'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='8' maxMicrosecondsPerInvocation='212' name='edu.umd.cs.findbugs.detect.FinalizerNullsFields' invocations='1976' totalMilliseconds='16' standardDeviationMircosecondsPerInvocation='10'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1' maxMicrosecondsPerInvocation='602' name='edu.umd.cs.findbugs.classfile.engine.bcel.ExceptionSetFactoryFactory' invocations='14498' totalMilliseconds='16' standardDeviationMircosecondsPerInvocation='5'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='9' maxMicrosecondsPerInvocation='1131' name='edu.umd.cs.findbugs.detect.ComparatorIdiom' invocations='1976' totalMilliseconds='19' standardDeviationMircosecondsPerInvocation='37'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='10' maxMicrosecondsPerInvocation='1236' name='edu.umd.cs.findbugs.detect.DontUseEnum' invocations='1976' totalMilliseconds='20' standardDeviationMircosecondsPerInvocation='29'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='12' maxMicrosecondsPerInvocation='3628' name='edu.umd.cs.findbugs.detect.DroppedException' invocations='1976' totalMilliseconds='24' standardDeviationMircosecondsPerInvocation='82'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='14' maxMicrosecondsPerInvocation='26124' name='edu.umd.cs.findbugs.detect.MultithreadedInstanceAccess' invocations='1976' totalMilliseconds='28' standardDeviationMircosecondsPerInvocation='587'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='12' maxMicrosecondsPerInvocation='303' name='edu.umd.cs.findbugs.detect.NoteNonNullAnnotations' invocations='2397' totalMilliseconds='29' standardDeviationMircosecondsPerInvocation='21'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='15' maxMicrosecondsPerInvocation='8564' name='edu.umd.cs.findbugs.detect.FindJSR166LockMonitorenter' invocations='1976' totalMilliseconds='30' standardDeviationMircosecondsPerInvocation='259'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='13' maxMicrosecondsPerInvocation='5322' name='edu.umd.cs.findbugs.detect.Methods' invocations='2397' totalMilliseconds='31' standardDeviationMircosecondsPerInvocation='115'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='13' maxMicrosecondsPerInvocation='2855' name='edu.umd.cs.findbugs.detect.NoteCheckReturnValueAnnotations' invocations='2397' totalMilliseconds='31' standardDeviationMircosecondsPerInvocation='62'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='10704' maxMicrosecondsPerInvocation='30385' name='edu.umd.cs.findbugs.classfile.engine.bcel.UsagesRequiringNonNullValuesFactory' invocations='3' totalMilliseconds='32' standardDeviationMircosecondsPerInvocation='13927'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='13' maxMicrosecondsPerInvocation='548' name='edu.umd.cs.findbugs.detect.NoteAnnotationRetention' invocations='2397' totalMilliseconds='33' standardDeviationMircosecondsPerInvocation='29'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='14' maxMicrosecondsPerInvocation='400' name='edu.umd.cs.findbugs.detect.NoteJCIPAnnotation' invocations='2397' totalMilliseconds='33' standardDeviationMircosecondsPerInvocation='26'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='17' maxMicrosecondsPerInvocation='17826' name='edu.umd.cs.findbugs.detect.FindSleepWithLockHeld' invocations='1976' totalMilliseconds='35' standardDeviationMircosecondsPerInvocation='401'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='20' maxMicrosecondsPerInvocation='11993' name='edu.umd.cs.findbugs.detect.PreferZeroLengthArrays' invocations='1976' totalMilliseconds='40' standardDeviationMircosecondsPerInvocation='284'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='23' maxMicrosecondsPerInvocation='31037' name='edu.umd.cs.findbugs.detect.DontCatchIllegalMonitorStateException' invocations='1976' totalMilliseconds='46' standardDeviationMircosecondsPerInvocation='697'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3' maxMicrosecondsPerInvocation='5480' name='edu.umd.cs.findbugs.classfile.engine.bcel.LockCheckerFactory' invocations='14329' totalMilliseconds='50' standardDeviationMircosecondsPerInvocation='49'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='25' maxMicrosecondsPerInvocation='1354' name='edu.umd.cs.findbugs.detect.FindUnconditionalWait' invocations='1976' totalMilliseconds='51' standardDeviationMircosecondsPerInvocation='61'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='26' maxMicrosecondsPerInvocation='23617' name='edu.umd.cs.findbugs.detect.FindTwoLockWait' invocations='1976' totalMilliseconds='51' standardDeviationMircosecondsPerInvocation='539'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='26' maxMicrosecondsPerInvocation='1444' name='edu.umd.cs.findbugs.detect.InstantiateStaticClass' invocations='1976' totalMilliseconds='52' standardDeviationMircosecondsPerInvocation='67'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='26' maxMicrosecondsPerInvocation='1350' name='edu.umd.cs.findbugs.detect.VolatileUsage' invocations='1976' totalMilliseconds='52' standardDeviationMircosecondsPerInvocation='56'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='629' maxMicrosecondsPerInvocation='34151' name='edu.umd.cs.findbugs.classfile.engine.bcel.DominatorsAnalysisFactory' invocations='84' totalMilliseconds='52' standardDeviationMircosecondsPerInvocation='3691'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='27' maxMicrosecondsPerInvocation='23012' name='edu.umd.cs.findbugs.detect.CheckImmutableAnnotation' invocations='1976' totalMilliseconds='53' standardDeviationMircosecondsPerInvocation='637'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='30' maxMicrosecondsPerInvocation='20251' name='edu.umd.cs.findbugs.classfile.engine.bcel.AssertionMethodsFactory' invocations='1767' totalMilliseconds='54' standardDeviationMircosecondsPerInvocation='487'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1' maxMicrosecondsPerInvocation='8055' name='edu.umd.cs.findbugs.NonReportingDetectorToDetector2Adapter' invocations='35113' totalMilliseconds='58' standardDeviationMircosecondsPerInvocation='46'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='29' maxMicrosecondsPerInvocation='7557' name='edu.umd.cs.findbugs.detect.InefficientToArray' invocations='1976' totalMilliseconds='58' standardDeviationMircosecondsPerInvocation='177'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='29' maxMicrosecondsPerInvocation='11219' name='edu.umd.cs.findbugs.detect.HugeSharedStringConstants' invocations='1976' totalMilliseconds='59' standardDeviationMircosecondsPerInvocation='259'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='460' maxMicrosecondsPerInvocation='8447' name='edu.umd.cs.findbugs.detect.StreamResourceTracker' invocations='132' totalMilliseconds='60' standardDeviationMircosecondsPerInvocation='1029'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='31' maxMicrosecondsPerInvocation='3738' name='edu.umd.cs.findbugs.detect.WaitInLoop' invocations='1976' totalMilliseconds='61' standardDeviationMircosecondsPerInvocation='103'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='31' maxMicrosecondsPerInvocation='7230' name='edu.umd.cs.findbugs.detect.VarArgsProblems' invocations='1976' totalMilliseconds='62' standardDeviationMircosecondsPerInvocation='182'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='32' maxMicrosecondsPerInvocation='9022' name='edu.umd.cs.findbugs.detect.FindNakedNotify' invocations='1976' totalMilliseconds='64' standardDeviationMircosecondsPerInvocation='214'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='33' maxMicrosecondsPerInvocation='8282' name='edu.umd.cs.findbugs.detect.InheritanceUnsafeGetResource' invocations='1976' totalMilliseconds='65' standardDeviationMircosecondsPerInvocation='204'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='33' maxMicrosecondsPerInvocation='8058' name='edu.umd.cs.findbugs.detect.BadlyOverriddenAdapter' invocations='1976' totalMilliseconds='65' standardDeviationMircosecondsPerInvocation='209'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='33' maxMicrosecondsPerInvocation='20080' name='edu.umd.cs.findbugs.detect.ConfusionBetweenInheritedAndOuterMethod' invocations='1976' totalMilliseconds='66' standardDeviationMircosecondsPerInvocation='614'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='35' maxMicrosecondsPerInvocation='12168' name='edu.umd.cs.findbugs.detect.FindLocalSelfAssignment2' invocations='1976' totalMilliseconds='70' standardDeviationMircosecondsPerInvocation='280'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='37' maxMicrosecondsPerInvocation='9436' name='edu.umd.cs.findbugs.detect.FindEmptySynchronizedBlock' invocations='1976' totalMilliseconds='73' standardDeviationMircosecondsPerInvocation='256'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='38' maxMicrosecondsPerInvocation='19994' name='edu.umd.cs.findbugs.detect.MutableStaticFields' invocations='1976' totalMilliseconds='76' standardDeviationMircosecondsPerInvocation='452'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='38' maxMicrosecondsPerInvocation='19580' name='edu.umd.cs.findbugs.detect.FindFinalizeInvocations' invocations='1976' totalMilliseconds='76' standardDeviationMircosecondsPerInvocation='444'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='39' maxMicrosecondsPerInvocation='5282' name='edu.umd.cs.findbugs.detect.FindMaskedFields' invocations='1976' totalMilliseconds='77' standardDeviationMircosecondsPerInvocation='135'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='39' maxMicrosecondsPerInvocation='44693' name='edu.umd.cs.findbugs.detect.DontIgnoreResultOfPutIfAbsent' invocations='1976' totalMilliseconds='78' standardDeviationMircosecondsPerInvocation='1124'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='33' maxMicrosecondsPerInvocation='12117' name='edu.umd.cs.findbugs.detect.NoteSuppressedWarnings' invocations='2397' totalMilliseconds='79' standardDeviationMircosecondsPerInvocation='268'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='41' maxMicrosecondsPerInvocation='7722' name='edu.umd.cs.findbugs.detect.BooleanReturnNull' invocations='1976' totalMilliseconds='81' standardDeviationMircosecondsPerInvocation='190'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='42' maxMicrosecondsPerInvocation='8291' name='edu.umd.cs.findbugs.detect.WrongMapIterator' invocations='1976' totalMilliseconds='84' standardDeviationMircosecondsPerInvocation='283'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='44' maxMicrosecondsPerInvocation='39776' name='edu.umd.cs.findbugs.detect.RedundantInterfaces' invocations='1976' totalMilliseconds='87' standardDeviationMircosecondsPerInvocation='1190'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='44' maxMicrosecondsPerInvocation='20598' name='edu.umd.cs.findbugs.detect.QuestionableBooleanAssignment' invocations='1976' totalMilliseconds='87' standardDeviationMircosecondsPerInvocation='619'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='46' maxMicrosecondsPerInvocation='25180' name='edu.umd.cs.findbugs.detect.FindSpinLoop' invocations='1976' totalMilliseconds='91' standardDeviationMircosecondsPerInvocation='569'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='46' maxMicrosecondsPerInvocation='37661' name='edu.umd.cs.findbugs.detect.IncompatMask' invocations='1976' totalMilliseconds='91' standardDeviationMircosecondsPerInvocation='852'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='49' maxMicrosecondsPerInvocation='20490' name='edu.umd.cs.findbugs.detect.FindUselessControlFlow' invocations='1976' totalMilliseconds='97' standardDeviationMircosecondsPerInvocation='546'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='41' maxMicrosecondsPerInvocation='29304' name='edu.umd.cs.findbugs.detect.FindBugsSummaryStats' invocations='2397' totalMilliseconds='98' standardDeviationMircosecondsPerInvocation='614'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='51' maxMicrosecondsPerInvocation='34415' name='edu.umd.cs.findbugs.detect.FindRunInvocations' invocations='1976' totalMilliseconds='100' standardDeviationMircosecondsPerInvocation='792'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='54' maxMicrosecondsPerInvocation='44334' name='edu.umd.cs.findbugs.detect.InitializationChain' invocations='1976' totalMilliseconds='106' standardDeviationMircosecondsPerInvocation='1105'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='55' maxMicrosecondsPerInvocation='16325' name='edu.umd.cs.findbugs.detect.DoInsideDoPrivileged' invocations='1976' totalMilliseconds='108' standardDeviationMircosecondsPerInvocation='417'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='56' maxMicrosecondsPerInvocation='33402' name='edu.umd.cs.findbugs.detect.FindNonSerializableValuePassedToWriteObject' invocations='1976' totalMilliseconds='111' standardDeviationMircosecondsPerInvocation='762'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='57' maxMicrosecondsPerInvocation='29761' name='edu.umd.cs.findbugs.detect.SuspiciousThreadInterrupted' invocations='1976' totalMilliseconds='113' standardDeviationMircosecondsPerInvocation='759'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='59' maxMicrosecondsPerInvocation='14941' name='edu.umd.cs.findbugs.detect.FindUnsyncGet' invocations='1976' totalMilliseconds='117' standardDeviationMircosecondsPerInvocation='510'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='61' maxMicrosecondsPerInvocation='64805' name='edu.umd.cs.findbugs.detect.LazyInit' invocations='1976' totalMilliseconds='121' standardDeviationMircosecondsPerInvocation='1481'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='62' maxMicrosecondsPerInvocation='8199' name='edu.umd.cs.findbugs.detect.FindDoubleCheck' invocations='1976' totalMilliseconds='123' standardDeviationMircosecondsPerInvocation='380'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='63' maxMicrosecondsPerInvocation='100210' name='edu.umd.cs.findbugs.detect.StartInConstructor' invocations='1976' totalMilliseconds='125' standardDeviationMircosecondsPerInvocation='2253'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='41' maxMicrosecondsPerInvocation='73562' name='edu.umd.cs.findbugs.classfile.engine.asm.ClassReaderAnalysisEngine' invocations='3058' totalMilliseconds='125' standardDeviationMircosecondsPerInvocation='1359'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='9' maxMicrosecondsPerInvocation='20591' name='edu.umd.cs.findbugs.classfile.engine.bcel.ReverseDepthFirstSearchFactory' invocations='13874' totalMilliseconds='133' standardDeviationMircosecondsPerInvocation='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='68' maxMicrosecondsPerInvocation='63562' name='edu.umd.cs.findbugs.detect.FindUninitializedGet' invocations='1976' totalMilliseconds='135' standardDeviationMircosecondsPerInvocation='1466'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='70' maxMicrosecondsPerInvocation='35479' name='edu.umd.cs.findbugs.detect.UnnecessaryMath' invocations='1976' totalMilliseconds='138' standardDeviationMircosecondsPerInvocation='1054'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='76' maxMicrosecondsPerInvocation='49628' name='edu.umd.cs.findbugs.detect.BadUseOfReturnValue' invocations='1976' totalMilliseconds='151' standardDeviationMircosecondsPerInvocation='1313'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='517' maxMicrosecondsPerInvocation='31758' name='edu.umd.cs.findbugs.classfile.engine.bcel.LockDataflowFactory' invocations='301' totalMilliseconds='155' standardDeviationMircosecondsPerInvocation='3211'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='79' maxMicrosecondsPerInvocation='3546' name='edu.umd.cs.findbugs.detect.NumberConstructor' invocations='1976' totalMilliseconds='157' standardDeviationMircosecondsPerInvocation='174'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='81' maxMicrosecondsPerInvocation='60705' name='edu.umd.cs.findbugs.detect.EmptyZipFileEntry' invocations='1976' totalMilliseconds='161' standardDeviationMircosecondsPerInvocation='1597'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='84' maxMicrosecondsPerInvocation='59148' name='edu.umd.cs.findbugs.detect.StaticCalendarDetector' invocations='1976' totalMilliseconds='166' standardDeviationMircosecondsPerInvocation='1508'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3909' maxMicrosecondsPerInvocation='22571' name='edu.umd.cs.findbugs.detect.FindUnreleasedLock$LockResourceTracker' invocations='44' totalMilliseconds='172' standardDeviationMircosecondsPerInvocation='5869'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='101' maxMicrosecondsPerInvocation='102244' name='edu.umd.cs.findbugs.detect.FindSelfComparison2' invocations='1976' totalMilliseconds='199' standardDeviationMircosecondsPerInvocation='2330'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='102' maxMicrosecondsPerInvocation='162572' name='edu.umd.cs.findbugs.detect.InconsistentAnnotations' invocations='1976' totalMilliseconds='202' standardDeviationMircosecondsPerInvocation='3659'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='108' maxMicrosecondsPerInvocation='45001' name='edu.umd.cs.findbugs.detect.FindUncalledPrivateMethods' invocations='1976' totalMilliseconds='213' standardDeviationMircosecondsPerInvocation='1361'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='108' maxMicrosecondsPerInvocation='156051' name='edu.umd.cs.findbugs.detect.SuperfluousInstanceOf' invocations='1976' totalMilliseconds='215' standardDeviationMircosecondsPerInvocation='3511'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='109' maxMicrosecondsPerInvocation='134440' name='edu.umd.cs.findbugs.detect.XMLFactoryBypass' invocations='1976' totalMilliseconds='217' standardDeviationMircosecondsPerInvocation='3035'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='114' maxMicrosecondsPerInvocation='18225' name='edu.umd.cs.findbugs.detect.InfiniteRecursiveLoop' invocations='1976' totalMilliseconds='225' standardDeviationMircosecondsPerInvocation='708'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='117' maxMicrosecondsPerInvocation='31608' name='edu.umd.cs.findbugs.detect.FindReturnRef' invocations='1976' totalMilliseconds='232' standardDeviationMircosecondsPerInvocation='1225'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='118' maxMicrosecondsPerInvocation='31874' name='edu.umd.cs.findbugs.detect.CrossSiteScripting' invocations='1976' totalMilliseconds='234' standardDeviationMircosecondsPerInvocation='863'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='13' maxMicrosecondsPerInvocation='86140' name='edu.umd.cs.findbugs.classfile.engine.bcel.DepthFirstSearchFactory' invocations='17010' totalMilliseconds='238' standardDeviationMircosecondsPerInvocation='699'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='124' maxMicrosecondsPerInvocation='46346' name='edu.umd.cs.findbugs.detect.SynchronizingOnContentsOfFieldToProtectField' invocations='1976' totalMilliseconds='245' standardDeviationMircosecondsPerInvocation='1276'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='127' maxMicrosecondsPerInvocation='116420' name='edu.umd.cs.findbugs.detect.UncallableMethodOfAnonymousClass' invocations='1976' totalMilliseconds='251' standardDeviationMircosecondsPerInvocation='2809'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='107' maxMicrosecondsPerInvocation='30662' name='edu.umd.cs.findbugs.detect.CalledMethods' invocations='2397' totalMilliseconds='258' standardDeviationMircosecondsPerInvocation='754'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='150' maxMicrosecondsPerInvocation='154875' name='edu.umd.cs.findbugs.detect.FindUnreleasedLock' invocations='1976' totalMilliseconds='296' standardDeviationMircosecondsPerInvocation='4611'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='153' maxMicrosecondsPerInvocation='59062' name='edu.umd.cs.findbugs.detect.FindNonShortCircuit' invocations='1976' totalMilliseconds='303' standardDeviationMircosecondsPerInvocation='1561'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='159' maxMicrosecondsPerInvocation='31547' name='edu.umd.cs.findbugs.detect.FindPuzzlers' invocations='1976' totalMilliseconds='316' standardDeviationMircosecondsPerInvocation='1137'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1' maxMicrosecondsPerInvocation='57627' name='edu.umd.cs.findbugs.DetectorToDetector2Adapter' invocations='217781' totalMilliseconds='325' standardDeviationMircosecondsPerInvocation='160'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='164' maxMicrosecondsPerInvocation='73815' name='edu.umd.cs.findbugs.detect.FindFieldSelfAssignment' invocations='1976' totalMilliseconds='325' standardDeviationMircosecondsPerInvocation='2292'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='164' maxMicrosecondsPerInvocation='74015' name='edu.umd.cs.findbugs.detect.ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass' invocations='1976' totalMilliseconds='325' standardDeviationMircosecondsPerInvocation='1969'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='169' maxMicrosecondsPerInvocation='146157' name='edu.umd.cs.findbugs.detect.FindOpenStream' invocations='1976' totalMilliseconds='335' standardDeviationMircosecondsPerInvocation='3733'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='177' maxMicrosecondsPerInvocation='255966' name='edu.umd.cs.findbugs.detect.MutableLock' invocations='1976' totalMilliseconds='350' standardDeviationMircosecondsPerInvocation='5774'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='24' maxMicrosecondsPerInvocation='113598' name='edu.umd.cs.findbugs.classfile.engine.bcel.LoadedFieldSetFactory' invocations='14498' totalMilliseconds='357' standardDeviationMircosecondsPerInvocation='1255'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='181' maxMicrosecondsPerInvocation='99891' name='edu.umd.cs.findbugs.detect.DumbMethodInvocations' invocations='1976' totalMilliseconds='359' standardDeviationMircosecondsPerInvocation='3444'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='182' maxMicrosecondsPerInvocation='157743' name='edu.umd.cs.findbugs.classfile.engine.bcel.ConstantPoolGenFactory' invocations='1976' totalMilliseconds='361' standardDeviationMircosecondsPerInvocation='3803'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='184' maxMicrosecondsPerInvocation='80624' name='edu.umd.cs.findbugs.detect.AppendingToAnObjectOutputStream' invocations='1976' totalMilliseconds='364' standardDeviationMircosecondsPerInvocation='2274'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='186' maxMicrosecondsPerInvocation='116368' name='edu.umd.cs.findbugs.detect.FindNullDerefsInvolvingNonShortCircuitEvaluation' invocations='1976' totalMilliseconds='368' standardDeviationMircosecondsPerInvocation='3014'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='199' maxMicrosecondsPerInvocation='74742' name='edu.umd.cs.findbugs.detect.RuntimeExceptionCapture' invocations='1976' totalMilliseconds='395' standardDeviationMircosecondsPerInvocation='2007'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='213' maxMicrosecondsPerInvocation='377462' name='edu.umd.cs.findbugs.detect.FindMismatchedWaitOrNotify' invocations='1976' totalMilliseconds='421' standardDeviationMircosecondsPerInvocation='8494'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='220' maxMicrosecondsPerInvocation='79119' name='edu.umd.cs.findbugs.detect.LostLoggerDueToWeakReference' invocations='1976' totalMilliseconds='435' standardDeviationMircosecondsPerInvocation='2529'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1002' maxMicrosecondsPerInvocation='220778' name='edu.umd.cs.findbugs.ba.obl.ObligationAnalysis' invocations='448' totalMilliseconds='449' standardDeviationMircosecondsPerInvocation='10590'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='235' maxMicrosecondsPerInvocation='112543' name='edu.umd.cs.findbugs.detect.FindNullDeref' invocations='1976' totalMilliseconds='464' standardDeviationMircosecondsPerInvocation='2691'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='237' maxMicrosecondsPerInvocation='337720' name='edu.umd.cs.findbugs.detect.SynchronizeOnClassLiteralNotGetClass' invocations='1976' totalMilliseconds='469' standardDeviationMircosecondsPerInvocation='7606'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='238' maxMicrosecondsPerInvocation='83330' name='edu.umd.cs.findbugs.detect.InfiniteLoop' invocations='1976' totalMilliseconds='471' standardDeviationMircosecondsPerInvocation='2666'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='240' maxMicrosecondsPerInvocation='227617' name='edu.umd.cs.findbugs.detect.FindSqlInjection' invocations='1976' totalMilliseconds='475' standardDeviationMircosecondsPerInvocation='5214'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='203' maxMicrosecondsPerInvocation='132216' name='edu.umd.cs.findbugs.detect.ReflectiveClasses' invocations='2397' totalMilliseconds='488' standardDeviationMircosecondsPerInvocation='3857'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='210' maxMicrosecondsPerInvocation='159165' name='edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis' invocations='2397' totalMilliseconds='505' standardDeviationMircosecondsPerInvocation='3488'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='256' maxMicrosecondsPerInvocation='283372' name='edu.umd.cs.findbugs.detect.BadResultSetAccess' invocations='1976' totalMilliseconds='505' standardDeviationMircosecondsPerInvocation='6450'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='276' maxMicrosecondsPerInvocation='68445' name='edu.umd.cs.findbugs.detect.RepeatedConditionals' invocations='1976' totalMilliseconds='546' standardDeviationMircosecondsPerInvocation='3005'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='235' maxMicrosecondsPerInvocation='88667' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' invocations='2397' totalMilliseconds='564' standardDeviationMircosecondsPerInvocation='3038'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='289' maxMicrosecondsPerInvocation='111938' name='edu.umd.cs.findbugs.detect.FindUnrelatedTypesInGenericContainer' invocations='1976' totalMilliseconds='572' standardDeviationMircosecondsPerInvocation='4218'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='5279' maxMicrosecondsPerInvocation='254207' name='edu.umd.cs.findbugs.classfile.impl.ZipCodeBaseFactory' invocations='109' totalMilliseconds='575' standardDeviationMircosecondsPerInvocation='26260'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='292' maxMicrosecondsPerInvocation='152666' name='edu.umd.cs.findbugs.detect.BadSyntaxForRegularExpression' invocations='1976' totalMilliseconds='578' standardDeviationMircosecondsPerInvocation='4662'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='293' maxMicrosecondsPerInvocation='355852' name='edu.umd.cs.findbugs.detect.FindNonSerializableStoreIntoSession' invocations='1976' totalMilliseconds='579' standardDeviationMircosecondsPerInvocation='8224'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='304' maxMicrosecondsPerInvocation='104032' name='edu.umd.cs.findbugs.detect.MethodReturnCheck' invocations='1976' totalMilliseconds='602' standardDeviationMircosecondsPerInvocation='3452'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='319' maxMicrosecondsPerInvocation='404044' name='edu.umd.cs.findbugs.detect.NoteUnconditionalParamDerefs' invocations='1976' totalMilliseconds='631' standardDeviationMircosecondsPerInvocation='9144'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='320' maxMicrosecondsPerInvocation='367023' name='edu.umd.cs.findbugs.detect.FindFloatEquality' invocations='1976' totalMilliseconds='633' standardDeviationMircosecondsPerInvocation='8306'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='323' maxMicrosecondsPerInvocation='111475' name='edu.umd.cs.findbugs.detect.DumbMethods' invocations='1976' totalMilliseconds='639' standardDeviationMircosecondsPerInvocation='3128'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='51' maxMicrosecondsPerInvocation='108359' name='edu.umd.cs.findbugs.classfile.engine.bcel.LiveLocalStoreDataflowFactory' invocations='12835' totalMilliseconds='655' standardDeviationMircosecondsPerInvocation='1139'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='334' maxMicrosecondsPerInvocation='138419' name='edu.umd.cs.findbugs.detect.FindBadForLoop' invocations='1976' totalMilliseconds='661' standardDeviationMircosecondsPerInvocation='4376'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='351' maxMicrosecondsPerInvocation='244232' name='edu.umd.cs.findbugs.detect.LoadOfKnownNullValue' invocations='1976' totalMilliseconds='695' standardDeviationMircosecondsPerInvocation='5652'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='354' maxMicrosecondsPerInvocation='630902' name='edu.umd.cs.findbugs.detect.IDivResultCastToDouble' invocations='1976' totalMilliseconds='700' standardDeviationMircosecondsPerInvocation='14190'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='389' maxMicrosecondsPerInvocation='303969' name='edu.umd.cs.findbugs.detect.FindSelfComparison' invocations='1976' totalMilliseconds='770' standardDeviationMircosecondsPerInvocation='7589'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='468' maxMicrosecondsPerInvocation='387199' name='edu.umd.cs.findbugs.detect.StringConcatenation' invocations='1976' totalMilliseconds='926' standardDeviationMircosecondsPerInvocation='12214'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='116' maxMicrosecondsPerInvocation='215847' name='edu.umd.cs.findbugs.classfile.engine.bcel.ClassContextClassAnalysisEngine' invocations='7987' totalMilliseconds='928' standardDeviationMircosecondsPerInvocation='3771'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='498' maxMicrosecondsPerInvocation='266706' name='edu.umd.cs.findbugs.detect.FindDeadLocalStores' invocations='1976' totalMilliseconds='985' standardDeviationMircosecondsPerInvocation='7387'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='510' maxMicrosecondsPerInvocation='273356' name='edu.umd.cs.findbugs.detect.FindHEmismatch' invocations='1976' totalMilliseconds='1008' standardDeviationMircosecondsPerInvocation='7764'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='538' maxMicrosecondsPerInvocation='280936' name='edu.umd.cs.findbugs.detect.FindBadCast2' invocations='1976' totalMilliseconds='1064' standardDeviationMircosecondsPerInvocation='9720'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='573' maxMicrosecondsPerInvocation='528374' name='edu.umd.cs.findbugs.detect.SwitchFallthrough' invocations='1976' totalMilliseconds='1133' standardDeviationMircosecondsPerInvocation='12715'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='616' maxMicrosecondsPerInvocation='848246' name='edu.umd.cs.findbugs.detect.SynchronizationOnSharedBuiltinConstant' invocations='1976' totalMilliseconds='1218' standardDeviationMircosecondsPerInvocation='19149'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='667' maxMicrosecondsPerInvocation='600833' name='edu.umd.cs.findbugs.detect.FormatStringChecker' invocations='1976' totalMilliseconds='1319' standardDeviationMircosecondsPerInvocation='16173'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='9' maxMicrosecondsPerInvocation='233770' name='edu.umd.cs.findbugs.ba.npe.TypeQualifierNullnessAnnotationDatabase' invocations='141508' totalMilliseconds='1342' standardDeviationMircosecondsPerInvocation='833'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='583' maxMicrosecondsPerInvocation='535895' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' invocations='2397' totalMilliseconds='1399' standardDeviationMircosecondsPerInvocation='11939'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='740' maxMicrosecondsPerInvocation='552132' name='edu.umd.cs.findbugs.detect.URLProblems' invocations='1976' totalMilliseconds='1462' standardDeviationMircosecondsPerInvocation='13639'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='112' maxMicrosecondsPerInvocation='224715' name='edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory' invocations='14498' totalMilliseconds='1636' standardDeviationMircosecondsPerInvocation='2922'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='704' maxMicrosecondsPerInvocation='396676' name='edu.umd.cs.findbugs.detect.FieldItemSummary' invocations='2397' totalMilliseconds='1688' standardDeviationMircosecondsPerInvocation='9494'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='911' maxMicrosecondsPerInvocation='885288' name='edu.umd.cs.findbugs.detect.Naming' invocations='1976' totalMilliseconds='1802' standardDeviationMircosecondsPerInvocation='21135'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='944' maxMicrosecondsPerInvocation='316437' name='edu.umd.cs.findbugs.detect.FindInconsistentSync2' invocations='1976' totalMilliseconds='1865' standardDeviationMircosecondsPerInvocation='10726'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='955' maxMicrosecondsPerInvocation='855686' name='edu.umd.cs.findbugs.detect.FindRefComparison' invocations='1976' totalMilliseconds='1887' standardDeviationMircosecondsPerInvocation='20501'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1037' maxMicrosecondsPerInvocation='1979524' name='edu.umd.cs.findbugs.detect.ReadReturnShouldBeChecked' invocations='1976' totalMilliseconds='2051' standardDeviationMircosecondsPerInvocation='44519'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1079' maxMicrosecondsPerInvocation='2556059' name='edu.umd.cs.findbugs.detect.NoteCheckReturnValue' invocations='2397' totalMilliseconds='2588' standardDeviationMircosecondsPerInvocation='52196'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1329' maxMicrosecondsPerInvocation='930503' name='edu.umd.cs.findbugs.detect.NoteNonnullReturnValues' invocations='1976' totalMilliseconds='2627' standardDeviationMircosecondsPerInvocation='22182'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1039' maxMicrosecondsPerInvocation='1046014' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' invocations='2601' totalMilliseconds='2703' standardDeviationMircosecondsPerInvocation='21473'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1471' maxMicrosecondsPerInvocation='2761369' name='edu.umd.cs.findbugs.detect.SynchronizeAndNullCheckField' invocations='1976' totalMilliseconds='2908' standardDeviationMircosecondsPerInvocation='62108'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='265' maxMicrosecondsPerInvocation='311696' name='edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis' invocations='11396' totalMilliseconds='3030' standardDeviationMircosecondsPerInvocation='4086'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1330' maxMicrosecondsPerInvocation='2245773' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' invocations='2397' totalMilliseconds='3190' standardDeviationMircosecondsPerInvocation='45952'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1664' maxMicrosecondsPerInvocation='3244609' name='edu.umd.cs.findbugs.detect.CloneIdiom' invocations='1976' totalMilliseconds='3289' standardDeviationMircosecondsPerInvocation='72972'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1116' maxMicrosecondsPerInvocation='1612742' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' invocations='3207' totalMilliseconds='3582' standardDeviationMircosecondsPerInvocation='29925'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1962' maxMicrosecondsPerInvocation='519969' name='edu.umd.cs.findbugs.detect.UnreadFields' invocations='1976' totalMilliseconds='3878' standardDeviationMircosecondsPerInvocation='17370'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2332' maxMicrosecondsPerInvocation='2190527' name='edu.umd.cs.findbugs.detect.SerializableIdiom' invocations='1976' totalMilliseconds='4608' standardDeviationMircosecondsPerInvocation='52401'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='11130' maxMicrosecondsPerInvocation='4825542' name='edu.umd.cs.findbugs.classfile.engine.bcel.ObligationDataflowFactory' invocations='448' totalMilliseconds='4986' standardDeviationMircosecondsPerInvocation='227803'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2637' maxMicrosecondsPerInvocation='4951953' name='edu.umd.cs.findbugs.util.TopologicalSort' invocations='1977' totalMilliseconds='5213' standardDeviationMircosecondsPerInvocation='111372'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='356' maxMicrosecondsPerInvocation='2114776' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' invocations='15337' totalMilliseconds='5462' standardDeviationMircosecondsPerInvocation='17706'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='183' maxMicrosecondsPerInvocation='2683845' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' invocations='34933' totalMilliseconds='6401' standardDeviationMircosecondsPerInvocation='14492'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='442' maxMicrosecondsPerInvocation='1735229' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' invocations='14500' totalMilliseconds='6421' standardDeviationMircosecondsPerInvocation='17940'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='4229' maxMicrosecondsPerInvocation='7776044' name='edu.umd.cs.findbugs.detect.FindUnsatisfiedObligation' invocations='1976' totalMilliseconds='8357' standardDeviationMircosecondsPerInvocation='175207'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2148' maxMicrosecondsPerInvocation='7396144' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodFactory' invocations='4015' totalMilliseconds='8627' standardDeviationMircosecondsPerInvocation='116806'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1115' maxMicrosecondsPerInvocation='6999088' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' invocations='13157' totalMilliseconds='14670' standardDeviationMircosecondsPerInvocation='62794'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1122' maxMicrosecondsPerInvocation='13699857' name='edu.umd.cs.findbugs.detect.FindNullDeref$CheckCallSitesAndReturnInstructions' invocations='13157' totalMilliseconds='14766' standardDeviationMircosecondsPerInvocation='119453'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1092' maxMicrosecondsPerInvocation='6010382' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' invocations='14704' totalMilliseconds='16057' standardDeviationMircosecondsPerInvocation='57413'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1268' maxMicrosecondsPerInvocation='3386075' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' invocations='14498' totalMilliseconds='18393' standardDeviationMircosecondsPerInvocation='41546'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1171' maxMicrosecondsPerInvocation='11538906' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' invocations='17178' totalMilliseconds='20131' standardDeviationMircosecondsPerInvocation='89442'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='9262' maxMicrosecondsPerInvocation='7216721' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' invocations='3213' totalMilliseconds='29758' standardDeviationMircosecondsPerInvocation='131592'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='21902' maxMicrosecondsPerInvocation='42616808' name='edu.umd.cs.findbugs.detect.DuplicateBranches' invocations='1976' totalMilliseconds='43279' standardDeviationMircosecondsPerInvocation='958483'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3631' maxMicrosecondsPerInvocation='19840727' name='edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory' invocations='13874' totalMilliseconds='50386' standardDeviationMircosecondsPerInvocation='193708'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>